{"ast":null,"code":"var _jsxFileName = \"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/Navigation/SideDrawer.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom'; // 3rd party\n\nimport { CSSTransition } from 'react-transition-group';\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n  // CSSTransition does animation for sideDrawer, use props.show to control when to mountOnEnter/unmountOnExit \"side-drawer\",\n  const content = /*#__PURE__*/React.createElement(CSSTransition, {\n    in: props.show,\n    timeout: 200,\n    classNames: \"slide-in-left\",\n    mountOnEnter: true,\n    unmountOnExit: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"aside\", {\n    className: \"side-drawer\",\n    onClick: props.onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }\n  }, props.children)); // using portal because we want to render SideDrawer outside of the root\n  // meaning we want to make it outside of the component tree\n  // createPortal renders content @ where sidedrawer-hook is (index.html)\n\n  return ReactDOM.createPortal(content, document.getElementById('sidedrawer-hook'));\n};\n\nexport default SideDrawer;","map":{"version":3,"sources":["/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/Navigation/SideDrawer.js"],"names":["React","ReactDOM","CSSTransition","SideDrawer","props","content","show","onClick","children","createPortal","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CACA;;AACA,SAASC,aAAT,QAA8B,wBAA9B;AAEA,OAAO,kBAAP;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAC3B;AACA,QAAMC,OAAO,gBACZ,oBAAC,aAAD;AACC,IAAA,EAAE,EAAED,KAAK,CAACE,IADX;AAEC,IAAA,OAAO,EAAE,GAFV;AAGC,IAAA,UAAU,EAAC,eAHZ;AAIC,IAAA,YAAY,MAJb;AAKC,IAAA,aAAa,MALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMC;AAAO,IAAA,SAAS,EAAC,aAAjB;AAA+B,IAAA,OAAO,EAAEF,KAAK,CAACG,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEH,KAAK,CAACI,QADR,CAND,CADD,CAF2B,CAe3B;AACA;AACA;;AACA,SAAOP,QAAQ,CAACQ,YAAT,CACNJ,OADM,EAENK,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,CAFM,CAAP;AAIA,CAtBD;;AAwBA,eAAeR,UAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n// 3rd party\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n\t// CSSTransition does animation for sideDrawer, use props.show to control when to mountOnEnter/unmountOnExit \"side-drawer\",\n\tconst content = (\n\t\t<CSSTransition\n\t\t\tin={props.show}\n\t\t\ttimeout={200}\n\t\t\tclassNames=\"slide-in-left\"\n\t\t\tmountOnEnter\n\t\t\tunmountOnExit>\n\t\t\t<aside className=\"side-drawer\" onClick={props.onClick}>\n\t\t\t\t{props.children}\n\t\t\t</aside>\n\t\t</CSSTransition>\n\t);\n\n\t// using portal because we want to render SideDrawer outside of the root\n\t// meaning we want to make it outside of the component tree\n\t// createPortal renders content @ where sidedrawer-hook is (index.html)\n\treturn ReactDOM.createPortal(\n\t\tcontent,\n\t\tdocument.getElementById('sidedrawer-hook')\n\t);\n};\n\nexport default SideDrawer;\n"]},"metadata":{},"sourceType":"module"}