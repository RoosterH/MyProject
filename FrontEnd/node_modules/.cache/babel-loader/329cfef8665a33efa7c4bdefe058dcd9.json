{"ast":null,"code":"var _jsxFileName = \"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/UIElements/Map.js\";\nimport React, { useRef, useEffect } from 'react';\nimport './Map.css';\n\nconst Map = props => {\n  const mapRef = useRef(); // () => {} the function will be executed when one of the dependencies changes\n  // []: array of the dependencies\n\n  useEffect(() => {\n    const map = new window.google.maps.Map(mapRef.current, {\n      center: props.center,\n      zoom: props.zoom\n    });\n  }, []);\n  new window.google.maps.Marker({\n    position: props.center,\n    map: map\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: mapRef,\n    className: `Map ${props.className}`,\n    style: props.style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 3\n    }\n  });\n};\n\nexport default Map;","map":{"version":3,"sources":["/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/UIElements/Map.js"],"names":["React","useRef","useEffect","Map","props","mapRef","map","window","google","maps","current","center","zoom","Marker","position","className","style"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AAEA,OAAO,WAAP;;AAEA,MAAMC,GAAG,GAAGC,KAAK,IAAI;AACpB,QAAMC,MAAM,GAAGJ,MAAM,EAArB,CADoB,CAGpB;AACA;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMI,GAAG,GAAG,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBN,GAAvB,CAA2BE,MAAM,CAACK,OAAlC,EAA2C;AACtDC,MAAAA,MAAM,EAAEP,KAAK,CAACO,MADwC;AAEtDC,MAAAA,IAAI,EAAER,KAAK,CAACQ;AAF0C,KAA3C,CAAZ;AAIA,GALQ,EAKN,EALM,CAAT;AAOA,MAAIL,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBI,MAAvB,CAA8B;AAAEC,IAAAA,QAAQ,EAAEV,KAAK,CAACO,MAAlB;AAA0BL,IAAAA,GAAG,EAAEA;AAA/B,GAA9B;AACA,sBACC;AACC,IAAA,GAAG,EAAED,MADN;AAEC,IAAA,SAAS,EAAG,OAAMD,KAAK,CAACW,SAAU,EAFnC;AAGC,IAAA,KAAK,EAAEX,KAAK,CAACY,KAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD;AAMA,CAnBD;;AAqBA,eAAeb,GAAf","sourcesContent":["import React, { useRef, useEffect } from 'react';\n\nimport './Map.css';\n\nconst Map = props => {\n\tconst mapRef = useRef();\n\n\t// () => {} the function will be executed when one of the dependencies changes\n\t// []: array of the dependencies\n\tuseEffect(() => {\n\t\tconst map = new window.google.maps.Map(mapRef.current, {\n\t\t\tcenter: props.center,\n\t\t\tzoom: props.zoom,\n\t\t});\n\t}, []);\n\n\tnew window.google.maps.Marker({ position: props.center, map: map });\n\treturn (\n\t\t<div\n\t\t\tref={mapRef}\n\t\t\tclassName={`Map ${props.className}`}\n\t\t\tstyle={props.style}></div>\n\t);\n};\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}