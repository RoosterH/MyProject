{"ast":null,"code":"var _jsxFileName = \"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/Navigation/MainNavigation.js\";\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport Backdrop from '../UIElements/Backdrop';\nimport './MainNavigation.css';\n\nconst MainNavigation = props => {\n  // create drawerIsOpen state, setDrawerIsOpen update drawerIsOpen state\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawer = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawer = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    /*#__PURE__*/\n    // <React.Fragment> is a wrapper helps solve multiple return issues.  Because we have 2 return values <SideDrawer> and <MainHeader>\n    React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 3\n      }\n    }, drawerIsOpen && /*#__PURE__*/React.createElement(Backdrop, {\n      onClick: closeDrawer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }\n    }) && /*#__PURE__*/React.createElement(SideDrawer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"nav\", {\n      className: \"main-navigation__drawer-nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(NavLinks, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }))), /*#__PURE__*/React.createElement(MainHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"main-navigation__menu-btn\",\n      onClick: openDrawer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"main-navigation__menu_title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 6\n      }\n    }, \"SCCA SFR\")), /*#__PURE__*/React.createElement(\"nav\", {\n      className: \"main-navigation__header-nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(NavLinks, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 6\n      }\n    }))))\n  );\n};\n\nexport default MainNavigation;","map":{"version":3,"sources":["/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/Navigation/MainNavigation.js"],"names":["React","useState","Link","MainHeader","NavLinks","SideDrawer","Backdrop","MainNavigation","props","drawerIsOpen","setDrawerIsOpen","openDrawer","closeDrawer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAO,sBAAP;;AAEA,MAAMC,cAAc,GAAGC,KAAK,IAAI;AAC/B;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMU,UAAU,GAAG,MAAM;AACxBD,IAAAA,eAAe,CAAC,IAAD,CAAf;AACA,GAFD;;AAIA,QAAME,WAAW,GAAG,MAAM;AACzBF,IAAAA,eAAe,CAAC,KAAD,CAAf;AACA,GAFD;;AAIA;AAAA;AACC;AACA,wBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEED,YAAY,iBAAI,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAEG,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhB,iBACA,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEC;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAFD,CAHF,eAUC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAQ,MAAA,SAAS,EAAC,2BAAlB;AAA8C,MAAA,OAAO,EAAED,UAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,CADD,eAMC;AAAI,MAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,CAND,eAUC;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAVD,CAVD;AAFD;AA4BA,CAxCD;;AA0CA,eAAeJ,cAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport Backdrop from '../UIElements/Backdrop';\nimport './MainNavigation.css';\n\nconst MainNavigation = props => {\n\t// create drawerIsOpen state, setDrawerIsOpen update drawerIsOpen state\n\tconst [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n\tconst openDrawer = () => {\n\t\tsetDrawerIsOpen(true);\n\t};\n\n\tconst closeDrawer = () => {\n\t\tsetDrawerIsOpen(false);\n\t};\n\n\treturn (\n\t\t// <React.Fragment> is a wrapper helps solve multiple return issues.  Because we have 2 return values <SideDrawer> and <MainHeader>\n\t\t<React.Fragment>\n\t\t\t{/* only render SideDrawer when drawerIsOpen */}\n\t\t\t{drawerIsOpen && <Backdrop onClick={closeDrawer} /> && (\n\t\t\t\t<SideDrawer>\n\t\t\t\t\t{/* main-navigation__drawer-nav is for mobile screen */}\n\t\t\t\t\t<nav className='main-navigation__drawer-nav'>\n\t\t\t\t\t\t<NavLinks />\n\t\t\t\t\t</nav>\n\t\t\t\t</SideDrawer>\n\t\t\t)}\n\t\t\t<MainHeader>\n\t\t\t\t<button className='main-navigation__menu-btn' onClick={openDrawer}>\n\t\t\t\t\t<span />\n\t\t\t\t\t<span />\n\t\t\t\t\t<span />\n\t\t\t\t</button>\n\t\t\t\t<h1 className='main-navigation__menu_title'>\n\t\t\t\t\t<Link to='/'>SCCA SFR</Link>\n\t\t\t\t</h1>\n\t\t\t\t{/* main-navigation__head is for desktop screen that only shows >= 768px */}\n\t\t\t\t<nav className='main-navigation__header-nav'>\n\t\t\t\t\t<NavLinks />\n\t\t\t\t</nav>\n\t\t\t</MainHeader>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default MainNavigation;\n"]},"metadata":{},"sourceType":"module"}