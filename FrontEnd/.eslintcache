[{"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/App.js":"1","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/UIElements/LoadingSpinner.js":"2","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/pages/Event.js":"3","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/pages/EventRegistration.js":"4","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/pages/NewEvent.js":"5","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/ClubManager.js":"6","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/RegistrationManager.js":"7","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/ClubProfileManager.js":"8","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/ClubPhotos.js":"9","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubs/pages/Clubs.js":"10","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/entryDashboard/pages/EditEntryManager.js":"11","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/cars/pages/NewCar.js":"12","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/hooks/clubLoginValidation-hook.js":"13","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/components/EditEventItem.js":"14","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/entryDashboard/pages/EventWaiver.js":"15","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/Navigation/NavLinks.js":"16","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/entryDashboard/pages/Classification.js":"17","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/UIElements/Map.js":"18","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubs/components/ClubItem.js":"19","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/form.jsx":"20","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/toolbar-draggable-item.jsx":"21","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/sortable-element.jsx":"22","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/ClubAccount.js":"23","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/entryDashboard/pages/SubmitEntry.js":"24","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/users/components/UserCarsItem.js":"25","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/pages/EventForm.js":"26","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/context/form-context.js":"27","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/UIElements/Card.js":"28","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/pages/UpdateEventRegistration.js":"29","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/FormElements/ImageUploader.js":"30","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/entryDashboard/pages/EditClassification.js":"31","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/events/components/EventsItem.js":"32","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/EntryReportManager.js":"33","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/sortable-form-elements.jsx":"34","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/dynamic-option-group.jsx":"35","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/utils/error.js":"36","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/hooks/userLoginValidation-hook.js":"37","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/events/components/EventsList.js":"38","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/components/EntryFormOptions.js":"39","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/index.jsx":"40","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/preview.jsx":"41","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/form-elements-edit.jsx":"42","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/dynamic-option-list.jsx":"43","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/hooks/userAuth-hook.js":"44","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/pages/EventPhotos.js":"45","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/components/FormBuilder.js":"46","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/pages/ClubDashboardToolbar.js":"47","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/EventManager.js":"48","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/ViewEventSelector.js":"49","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/EditEventSelector.js":"50","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/users/pages/UserAuth.js":"51","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/cars/pages/UpdateCar.js":"52","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/pages/UpdateEventPhotos.js":"53","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/hooks/logout-hook.js":"54","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/toolbar.jsx":"55","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/star-rating.jsx":"56","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/Navigation/MainNavigation.js":"57","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubs/pages/ClubAuth.js":"58","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/NewEventManager.js":"59","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/ClubAccountManager.js":"60","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/ClubCredential.js":"61","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/entryDashboard/pages/NewEntryManager.js":"62","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/users/pages/UserGarageWrapper.js":"63","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/hooks/http-hook.js":"64","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/UIElements/Backdrop.js":"65","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/users/pages/UserGarage.js":"66","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/ClubProfile.js":"67","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubs/pages/ClubEvents.js":"68","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/pages/UpdateEvent.js":"69","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/EventReportSelector.js":"70","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/UIElements/Image.js":"71","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/Navigation/MainHeader.js":"72","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/Navigation/SideDrawer.js":"73","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/FormElements/Button.js":"74","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/UIElements/Modal.js":"75","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/users/components/UserCarsList.js":"76","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/form-elements.jsx":"77","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/EditEventManager.js":"78","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/events/pages/Events.js":"79","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/components/EventTypes.js":"80","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/components/UpdateFormBuilder.js":"81","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubs/components/ClubsList.js":"82","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/entryDashboard/components/CardSetupForm.js":"83","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/entryDashboard/components/CardSection.js":"84","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/ClubProfileViewer.js":"85","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/UIElements/ErrorModal.js":"86","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/EntryReport.js":"87","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/ItemTypes.js":"88","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/EntryListForUsers.js":"89","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/ClubStripe.js":"90","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/components/EventItem.js":"91","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/components/EntryReportEventItem.js":"92","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/hooks/redirectExternalURL.js":"93","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/users/pages/UserEvents.js":"94","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/hooks/form-hook.js":"95","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/stores/store.js":"96","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/ClubStripeConnect.js":"97","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/hooks/clubAuth-hook.js":"98","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/PaymentCenterSelector.js":"99","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/PaymentCenter.js":"100","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/PaymentCenterManager.js":"101","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/MaterialTableEntryReport.js":"102","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/MaterialTablePaymentCenter.js":"103","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/UIElements/Avatar.js":"104","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/cars/pages/Car.js":"105","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/form-validator.jsx":"106","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/RefundCenterSelector.js":"107","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/components/RefundCenterEventItem.js":"108","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/RefundCenter.js":"109","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/components/PaymentCenterEventItem.js":"110","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/RefundCenterManager.js":"111","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/MaterialTableRefundCenter.js":"112","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/entryDashboard/components/CardAuthentication.js":"113","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/index.js":"114","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/entryDashboard/pages/CarSelector.js":"115","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/config/types.js":"116","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/UUID.js":"117","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/header-bar.jsx":"118","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/cars/components/CarItem.js":"119","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/context/auth-context.js":"120","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/stores/requests.js":"121"},{"size":13981,"mtime":1608240035826,"results":"122","hashOfConfig":"123"},{"size":422,"mtime":1597302353934,"results":"124","hashOfConfig":"123"},{"size":7609,"mtime":1608844518650,"results":"125","hashOfConfig":"123"},{"size":14192,"mtime":1608668419139,"results":"126","hashOfConfig":"123"},{"size":21264,"mtime":1604949165496,"results":"127","hashOfConfig":"123"},{"size":2470,"mtime":1606312906011,"results":"128","hashOfConfig":"123"},{"size":2156,"mtime":1608240429017,"results":"129","hashOfConfig":"123"},{"size":2957,"mtime":1608583922904,"results":"130","hashOfConfig":"123"},{"size":9081,"mtime":1608596978156,"results":"131","hashOfConfig":"123"},{"size":1665,"mtime":1600654371970,"results":"132","hashOfConfig":"123"},{"size":8977,"mtime":1608755974685,"results":"133","hashOfConfig":"123"},{"size":43523,"mtime":1604962037609,"results":"134","hashOfConfig":"123"},{"size":1258,"mtime":1606081280962,"results":"135","hashOfConfig":"123"},{"size":258,"mtime":1599968755765,"results":"136","hashOfConfig":"123"},{"size":7568,"mtime":1606712995710,"results":"137","hashOfConfig":"138"},{"size":2565,"mtime":1603555120559,"results":"139","hashOfConfig":"123"},{"size":8232,"mtime":1608755862790,"results":"140","hashOfConfig":"123"},{"size":652,"mtime":1590051460836,"results":"141","hashOfConfig":"138"},{"size":835,"mtime":1594017403075,"results":"142","hashOfConfig":"123"},{"size":20514,"mtime":1608012389437,"results":"143","hashOfConfig":"123"},{"size":725,"mtime":1600847997441,"results":"144","hashOfConfig":"138"},{"size":3229,"mtime":1601682630648,"results":"145","hashOfConfig":"123"},{"size":8384,"mtime":1608773292166,"results":"146","hashOfConfig":"123"},{"size":25762,"mtime":1608760522370,"results":"147","hashOfConfig":"123"},{"size":4892,"mtime":1606788551570,"results":"148","hashOfConfig":"123"},{"size":5653,"mtime":1607390928546,"results":"149","hashOfConfig":"123"},{"size":386,"mtime":1597010216753,"results":"150","hashOfConfig":"123"},{"size":279,"mtime":1592594302510,"results":"151","hashOfConfig":"123"},{"size":18701,"mtime":1608671557868,"results":"152","hashOfConfig":"123"},{"size":2178,"mtime":1606191964340,"results":"153","hashOfConfig":"123"},{"size":7432,"mtime":1608755950091,"results":"154","hashOfConfig":"123"},{"size":1544,"mtime":1608844224605,"results":"155","hashOfConfig":"123"},{"size":821,"mtime":1608245361726,"results":"156","hashOfConfig":"123"},{"size":1660,"mtime":1600763075857,"results":"157","hashOfConfig":"123"},{"size":9803,"mtime":1601454110225,"results":"158","hashOfConfig":"123"},{"size":548,"mtime":1605549041652,"results":"159","hashOfConfig":"123"},{"size":1105,"mtime":1599690609880,"results":"160","hashOfConfig":"123"},{"size":2056,"mtime":1608596303046,"results":"161","hashOfConfig":"123"},{"size":14556,"mtime":1608837971747,"results":"162","hashOfConfig":"123"},{"size":2557,"mtime":1601167883960,"results":"163","hashOfConfig":"123"},{"size":7591,"mtime":1608747987542,"results":"164","hashOfConfig":"123"},{"size":32233,"mtime":1607375890504,"results":"165","hashOfConfig":"123"},{"size":6852,"mtime":1607376085175,"results":"166","hashOfConfig":"123"},{"size":3072,"mtime":1600656888927,"results":"167","hashOfConfig":"138"},{"size":8558,"mtime":1608748679174,"results":"168","hashOfConfig":"123"},{"size":8063,"mtime":1602526112872,"results":"169","hashOfConfig":"123"},{"size":3772,"mtime":1608240419498,"results":"170","hashOfConfig":"123"},{"size":1874,"mtime":1608844121540,"results":"171","hashOfConfig":"123"},{"size":931,"mtime":1599811436463,"results":"172","hashOfConfig":"123"},{"size":1024,"mtime":1599811458932,"results":"173","hashOfConfig":"123"},{"size":11446,"mtime":1606430873603,"results":"174","hashOfConfig":"138"},{"size":45492,"mtime":1605300619186,"results":"175","hashOfConfig":"138"},{"size":7501,"mtime":1606183825678,"results":"176","hashOfConfig":"123"},{"size":2127,"mtime":1599758963776,"results":"177","hashOfConfig":"123"},{"size":9960,"mtime":1608838562503,"results":"178","hashOfConfig":"123"},{"size":7437,"mtime":1595438548933,"results":"179","hashOfConfig":"123"},{"size":2409,"mtime":1607367261422,"results":"180","hashOfConfig":"123"},{"size":10077,"mtime":1607806612716,"results":"181","hashOfConfig":"123"},{"size":5818,"mtime":1606502279470,"results":"182","hashOfConfig":"123"},{"size":3576,"mtime":1607642951779,"results":"183","hashOfConfig":"123"},{"size":10202,"mtime":1608513849509,"results":"184","hashOfConfig":"123"},{"size":7287,"mtime":1608698573913,"results":"185","hashOfConfig":"123"},{"size":261,"mtime":1600039479480,"results":"186","hashOfConfig":"123"},{"size":3516,"mtime":1608159000932,"results":"187","hashOfConfig":"123"},{"size":411,"mtime":1589909425462,"results":"188","hashOfConfig":"123"},{"size":5094,"mtime":1608518367318,"results":"189","hashOfConfig":"123"},{"size":12585,"mtime":1608596902162,"results":"190","hashOfConfig":"123"},{"size":3940,"mtime":1608592056225,"results":"191","hashOfConfig":"123"},{"size":18499,"mtime":1604947013567,"results":"192","hashOfConfig":"123"},{"size":1001,"mtime":1599991398440,"results":"193","hashOfConfig":"123"},{"size":305,"mtime":1599695530970,"results":"194","hashOfConfig":"123"},{"size":344,"mtime":1589871941347,"results":"195","hashOfConfig":"123"},{"size":900,"mtime":1589928683297,"results":"196","hashOfConfig":"123"},{"size":1030,"mtime":1603028987880,"results":"197","hashOfConfig":"123"},{"size":1230,"mtime":1603770306964,"results":"198","hashOfConfig":"123"},{"size":2510,"mtime":1608518403495,"results":"199","hashOfConfig":"123"},{"size":36470,"mtime":1607374982429,"results":"200","hashOfConfig":"123"},{"size":4677,"mtime":1603559658330,"results":"201","hashOfConfig":"123"},{"size":5948,"mtime":1608698428492,"results":"202","hashOfConfig":"123"},{"size":142,"mtime":1594495175689,"results":"203","hashOfConfig":"138"},{"size":7021,"mtime":1603559728491,"results":"204","hashOfConfig":"138"},{"size":583,"mtime":1592502142673,"results":"205","hashOfConfig":"123"},{"size":4215,"mtime":1608233115785,"results":"206","hashOfConfig":"123"},{"size":670,"mtime":1607390611852,"results":"207","hashOfConfig":"123"},{"size":7793,"mtime":1608525793181,"results":"208","hashOfConfig":"123"},{"size":350,"mtime":1595296673844,"results":"209","hashOfConfig":"123"},{"size":6802,"mtime":1608756347798,"results":"210","hashOfConfig":"123"},{"size":33,"mtime":1595438548763,"results":"211","hashOfConfig":"123"},{"size":8615,"mtime":1607715930295,"results":"212","hashOfConfig":"123"},{"size":5865,"mtime":1608009746629,"results":"213","hashOfConfig":"123"},{"size":16101,"mtime":1608844646869,"results":"214","hashOfConfig":"123"},{"size":307,"mtime":1603113707591,"results":"215","hashOfConfig":"123"},{"size":428,"mtime":1607562287556,"results":"216","hashOfConfig":"138"},{"size":2906,"mtime":1608596172710,"results":"217","hashOfConfig":"123"},{"size":283,"mtime":1597010527057,"results":"218","hashOfConfig":"123"},{"size":1787,"mtime":1596210783621,"results":"219","hashOfConfig":"123"},{"size":3031,"mtime":1607621004042,"results":"220","hashOfConfig":"123"},{"size":3102,"mtime":1607654632813,"results":"221","hashOfConfig":"123"},{"size":994,"mtime":1607710633812,"results":"222","hashOfConfig":"138"},{"size":8619,"mtime":1608175985984,"results":"223","hashOfConfig":"123"},{"size":845,"mtime":1608245192860,"results":"224","hashOfConfig":"123"},{"size":4657,"mtime":1607888678386,"results":"225","hashOfConfig":"123"},{"size":3779,"mtime":1608316912031,"results":"226","hashOfConfig":"123"},{"size":979,"mtime":1602369570804,"results":"227","hashOfConfig":"123"},{"size":2139,"mtime":1604948548095,"results":"228","hashOfConfig":"123"},{"size":1618,"mtime":1595463239758,"results":"229","hashOfConfig":"123"},{"size":991,"mtime":1608240508588,"results":"230","hashOfConfig":"123"},{"size":315,"mtime":1608242357420,"results":"231","hashOfConfig":"123"},{"size":7212,"mtime":1608313646022,"results":"232","hashOfConfig":"123"},{"size":328,"mtime":1608242241940,"results":"233","hashOfConfig":"123"},{"size":833,"mtime":1608245177726,"results":"234","hashOfConfig":"123"},{"size":5810,"mtime":1608575901060,"results":"235","hashOfConfig":"123"},{"size":3226,"mtime":1608275930129,"results":"236","hashOfConfig":"123"},{"size":169,"mtime":1595185694182,"results":"237","hashOfConfig":"123"},{"size":2011,"mtime":1602024088065,"results":"238","hashOfConfig":"123"},{"size":94,"mtime":1594932432012,"results":"239","hashOfConfig":"123"},{"size":1684,"mtime":1595438549015,"results":"240","hashOfConfig":"123"},{"size":756,"mtime":1595438548716,"results":"241","hashOfConfig":"123"},{"size":7396,"mtime":1606240501839,"results":"242","hashOfConfig":"123"},{"size":1398,"mtime":1604962107709,"results":"243","hashOfConfig":"123"},{"size":562,"mtime":1595489206168,"results":"244","hashOfConfig":"123"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"248"},"1biln83",{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"253","messages":"254","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"256"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"248"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"266","messages":"267","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"268","messages":"269","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"248"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"273","messages":"274","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"276"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1av3dfn",{"filePath":"284","messages":"285","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"287"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"281"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"248"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"306","messages":"307","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"281"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"312"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"316"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"319"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"281"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"331","messages":"332","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"319"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"343"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"256"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"281"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"361"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"364","messages":"365","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"374","messages":"375","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"377"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"377"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"287"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"343"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"388","messages":"389","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"393","messages":"394","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"395","messages":"396","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"397","messages":"398","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"276"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"276"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"343"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"319"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"256"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419","usedDeprecatedRules":"248"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"248"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"343"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"437","messages":"438","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443","usedDeprecatedRules":"281"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"446","messages":"447","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"449"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454","usedDeprecatedRules":"287"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"281"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"464","messages":"465","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"466","messages":"467","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468","usedDeprecatedRules":"256"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471","usedDeprecatedRules":"276"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"478","messages":"479","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"484","messages":"485","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"490","messages":"491","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"492","messages":"493","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"494","usedDeprecatedRules":"495"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498","usedDeprecatedRules":"276"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"505","usedDeprecatedRules":"276"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"508"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"495"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"519","usedDeprecatedRules":"281"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"522","usedDeprecatedRules":"281"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"525","usedDeprecatedRules":"319"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"528","messages":"529","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"538","usedDeprecatedRules":"256"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/App.js",["543"],"import React, { Suspense } from 'react';\nimport {\n\tBrowserRouter as Router,\n\tRoute,\n\tSwitch,\n\tRedirect\n} from 'react-router-dom';\n\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport {\n\tClubAuthContext,\n\tUserAuthContext\n} from './shared/context/auth-context';\nimport { useClubAuth } from './shared/hooks/clubAuth-hook';\nimport { useUserAuth } from './shared/hooks/userAuth-hook';\n\nimport { FormContext } from './shared/context/form-context';\nimport { useFormHook } from './shared/hooks/form-hook';\nimport RedirectExternalURL from './shared/hooks/redirectExternalURL';\n\nimport './shared/css/Auth.css';\n\n// split codes using lazy load\n// instead of import everything at once, we will split them so codes will built into\n// different chunks. When users open up the app, it will only load whatever it's needed.\n// club section\nconst Clubs = React.lazy(() => import('./clubs/pages/Clubs'));\nconst ClubAuth = React.lazy(() => import('./clubs/pages/ClubAuth'));\nconst ClubEvents = React.lazy(() =>\n\timport('./clubs/pages/ClubEvents')\n);\nconst Error = React.lazy(() => import('./shared/utils/error'));\n// event section\nconst Event = React.lazy(() => import('./event/pages/Event'));\nconst FormBuilder = React.lazy(() =>\n\timport('./event/components/FormBuilder')\n);\nconst ClubDashboardToolbar = React.lazy(() =>\n\timport('./clubDashboard/pages/ClubDashboardToolbar')\n);\nconst ClubManager = React.lazy(() =>\n\timport('./clubDashboard/components/ClubManager')\n);\nconst EventManager = React.lazy(() =>\n\timport('./clubDashboard/components/EventManager')\n);\nconst EditEntryManager = React.lazy(() =>\n\timport('./entryDashboard/pages/EditEntryManager')\n);\n\nconst NewEntryManager = React.lazy(() =>\n\timport('./entryDashboard/pages/NewEntryManager')\n);\nconst NewEventManager = React.lazy(() =>\n\timport('./clubDashboard/components/NewEventManager')\n);\nconst EditEventManager = React.lazy(() =>\n\timport('./clubDashboard/components/EditEventManager')\n);\nconst RegistrationManager = React.lazy(() =>\n\timport('./clubDashboard/components/RegistrationManager')\n);\nconst EventReportSelector = React.lazy(() =>\n\timport('./clubDashboard/components/EventReportSelector')\n);\nconst PaymentCenterSelector = React.lazy(() =>\n\timport('./clubDashboard/components/PaymentCenterSelector')\n);\nconst RefundCenterSelector = React.lazy(() =>\n\timport('./clubDashboard/components/RefundCenterSelector')\n);\nconst EditEventSelector = React.lazy(() =>\n\timport('./clubDashboard/components/EditEventSelector')\n);\nconst EntryListForUsers = React.lazy(() =>\n\timport('./clubDashboard/components/EntryListForUsers')\n);\nconst MaterialTableEntryReport = React.lazy(() =>\n\timport('./clubDashboard/components/MaterialTableEntryReport')\n);\n\nconst Events = React.lazy(() => import('./events/pages/Events'));\nconst EventPhotos = React.lazy(() =>\n\timport('./event/pages/EventPhotos')\n);\nconst EventRegistration = React.lazy(() =>\n\timport('./event/pages/EventRegistration')\n);\nconst NewEvent = React.lazy(() => import('./event/pages/NewEvent'));\nconst ViewEventSelector = React.lazy(() =>\n\timport('./clubDashboard/components/ViewEventSelector')\n);\nconst UpdateEvent = React.lazy(() =>\n\timport('./event/pages/UpdateEvent')\n);\nconst ClubProfileViewer = React.lazy(() =>\n\timport('./clubDashboard/components/ClubProfileViewer')\n);\nconst ClubProfileManager = React.lazy(() =>\n\timport('./clubDashboard/components/ClubProfileManager')\n);\nconst ClubPhotos = React.lazy(() =>\n\timport('./clubDashboard/components/ClubPhotos')\n);\nconst ClubAccountManager = React.lazy(() =>\n\timport('./clubDashboard/components/ClubAccountManager')\n);\nconst ClubCredential = React.lazy(() =>\n\timport('./clubDashboard/components/ClubCredential')\n);\nconst ClubAccount = React.lazy(() =>\n\timport('./clubDashboard/components/ClubAccount')\n);\nconst ClubStripe = React.lazy(() =>\n\timport('./clubDashboard/components/ClubStripe')\n);\nconst ClubStripeConnect = React.lazy(() =>\n\timport('./clubDashboard/components/ClubStripeConnect')\n);\n\n// user section\n// const Users = React.lazy(() => import('./users/pages/Users'));\nconst UserAuth = React.lazy(() => import('./users/pages/UserAuth'));\nconst UserEvents = React.lazy(() =>\n\timport('./users/pages/UserEvents')\n);\nconst UserGarageWrapper = React.lazy(() =>\n\timport('./users/pages/UserGarageWrapper')\n);\nconst NewCar = React.lazy(() => import('./cars/pages/NewCar'));\nconst Car = React.lazy(() => import('./cars/pages/Car'));\nconst UpdateCar = React.lazy(() => import('./cars/pages/UpdateCar'));\n\nconst App = () => {\n\tconst {\n\t\tclubToken,\n\t\tclubLogin,\n\t\tclubLogout,\n\t\tclubId,\n\t\tclubName,\n\t\tclubRedirectURL,\n\t\tsetClubRedirectURL\n\t} = useClubAuth();\n\n\tconst {\n\t\tuserToken,\n\t\tuserLogin,\n\t\tuserLogout,\n\t\tuserId,\n\t\tuserName,\n\t\tuserEntries,\n\t\tuserImage,\n\t\tuserRedirectURL,\n\t\tsetUserRedirectURL\n\t} = useUserAuth();\n\n\tconst { isInsideForm, setIsInsideForm } = useFormHook();\n\n\tlet routes;\n\tif (clubToken) {\n\t\troutes = (\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/\" exact>\n\t\t\t\t\t<ClubManager />\n\t\t\t\t\t{/* <Clubs /> */}\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/events/club/:clubId\" exact>\n\t\t\t\t\t<ClubEvents />\n\t\t\t\t</Route>\n\t\t\t\t{/* to pass props via Link, we have to assign component={Event} here */}\n\t\t\t\t<Route path=\"/events/:id\" component={Event} exact />\n\t\t\t\t<Route path=\"/clubs/clubManager/\" exact>\n\t\t\t\t\t<ClubManager />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/clubs/profile/:clubId\" exact>\n\t\t\t\t\t<ClubProfileViewer />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/clubs/profileManager/:clubId\" exact>\n\t\t\t\t\t<ClubProfileManager />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/clubs/photos/:clubId\" exact>\n\t\t\t\t\t<ClubPhotos />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/clubs/accountManager/:clubId\" exact>\n\t\t\t\t\t<ClubAccountManager />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/clubs/credential/:clubId\" exact>\n\t\t\t\t\t<ClubCredential />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/clubs/account/:clubId\" exact>\n\t\t\t\t\t<ClubAccount />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/clubs/stripe/:clubId\" exact>\n\t\t\t\t\t<ClubStripe />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/clubs/stripeconnect/:clubId\" exact>\n\t\t\t\t\t<ClubStripeConnect />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/clubs/eventManager/\" exact>\n\t\t\t\t\t<EventManager />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/clubs/newEventManager/\" exact>\n\t\t\t\t\t<NewEventManager />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/clubs/editEventSelector/:clubId\" exact>\n\t\t\t\t\t<EditEventSelector />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/clubs/editEventManager/\" exact>\n\t\t\t\t\t<EditEventManager />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/clubs/registrationManager/\" exact>\n\t\t\t\t\t<RegistrationManager />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/clubs/eventReportSelector/:clubId\" exact>\n\t\t\t\t\t<EventReportSelector />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/clubs/viewEventSelector/:clubId\" exact>\n\t\t\t\t\t<ViewEventSelector />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/clubs/paymentCenterSelector/:clubId\" exact>\n\t\t\t\t\t<PaymentCenterSelector />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/clubs/refundCenterSelector/:clubId\" exact>\n\t\t\t\t\t<RefundCenterSelector />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/events/formbuilder/:id\" exact>\n\t\t\t\t\t<FormBuilder />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/clubs/events/new\" exact>\n\t\t\t\t\t<NewEvent />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/clubs/events/photos\" exact>\n\t\t\t\t\t<EventPhotos />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/clubs/events/registration\" exact>\n\t\t\t\t\t<EventRegistration />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/events/update/:id\" exact>\n\t\t\t\t\t<UpdateEvent />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/stripeConnect/\" exact>\n\t\t\t\t\t<RedirectExternalURL />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/error\" exact>\n\t\t\t\t\t<Error />\n\t\t\t\t</Route>\n\t\t\t\t<Redirect to=\"/error\" />\n\t\t\t</Switch>\n\t\t);\n\t} else if (userToken) {\n\t\troutes = (\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/\" exact>\n\t\t\t\t\t<Events />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/users/events/:userId\" exact>\n\t\t\t\t\t<UserEvents />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/users/garagewrapper/:userId\" exact>\n\t\t\t\t\t<UserGarageWrapper />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/users/cars/new\" exact>\n\t\t\t\t\t<NewCar />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/users/cars/update/:carId\" exact>\n\t\t\t\t\t<UpdateCar />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/users/cars/:carId\" exact>\n\t\t\t\t\t<Car />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/events/:id\" component={Event} exact />\n\t\t\t\t<Route\n\t\t\t\t\tpath=\"/events/newEntryManager/:id\"\n\t\t\t\t\tcomponent={NewEntryManager}\n\t\t\t\t\texact\n\t\t\t\t/>\n\t\t\t\t<Route\n\t\t\t\t\tpath=\"/events/editEntryManager/:id\"\n\t\t\t\t\tcomponent={EditEntryManager}\n\t\t\t\t\texact\n\t\t\t\t/>\n\t\t\t\t<Route\n\t\t\t\t\tpath=\"/events/entrylist/:eid\"\n\t\t\t\t\tcomponent={EntryListForUsers}\n\t\t\t\t\texact\n\t\t\t\t/>\n\t\t\t\t<Route\n\t\t\t\t\tpath=\"/events/entrylistMaterialTable/:eid\"\n\t\t\t\t\tcomponent={MaterialTableEntryReport}\n\t\t\t\t\texact\n\t\t\t\t/>\n\t\t\t\t<Route path=\"/events/entry/:carId\" exact>\n\t\t\t\t\t<Car />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/error\" exact>\n\t\t\t\t\t<Error />\n\t\t\t\t</Route>\n\t\t\t\t<Redirect to=\"/error\" />\n\t\t\t</Switch>\n\t\t);\n\t} else {\n\t\t// club and user not logged in\n\t\troutes = (\n\t\t\t<Switch>\n\t\t\t\t{/* if Routes failed authentication redirect to auth pages */}\n\t\t\t\t{/* <Redirect strict from=\"/events/update/:id\" to=\"/clubs/auth\" /> */}\n\n\t\t\t\t<Route path=\"/\" exact>\n\t\t\t\t\t<Events />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/events/update/error\" exact>\n\t\t\t\t\t{/* this is for re-direction when sending a request to the url that needs authentication */}\n\t\t\t\t\t<Error />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/events/\" exact>\n\t\t\t\t\t<Events />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/events/:id\" component={Event} exact />\n\t\t\t\t<Route path=\"/events/club/:clubId\" exact>\n\t\t\t\t\t<ClubEvents />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/events/update/:id\" exact>\n\t\t\t\t\t<UpdateEvent />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/clubs/auth\" exact>\n\t\t\t\t\t<ClubAuth />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/users/auth\" exact>\n\t\t\t\t\t<UserAuth />\n\t\t\t\t</Route>\n\n\t\t\t\t{/* The following section is for page refresh. Without it, refresh will not happen */}\n\t\t\t\t{/*** To aviod unauthorized requests, all the pages below need to add loginValidation ***/}\n\t\t\t\t<Route path=\"/clubs/clubManager\" exact>\n\t\t\t\t\t<ClubManager />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/clubs/eventManager\" exact>\n\t\t\t\t\t<EventManager />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/clubs/newEventManager/\" exact>\n\t\t\t\t\t<NewEventManager />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/clubs/registrationManager/\" exact>\n\t\t\t\t\t<RegistrationManager />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/clubs/eventReportSelector/:clubId\" exact>\n\t\t\t\t\t<EventReportSelector />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/clubs/paymentCenterSelector/:clubId\" exact>\n\t\t\t\t\t<PaymentCenterSelector />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/clubs/refundCenterSelector/:clubId\" exact>\n\t\t\t\t\t<RefundCenterSelector />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/clubs/events/new\" exact>\n\t\t\t\t\t<NewEvent />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/clubs/events/photos\" exact>\n\t\t\t\t\t<EventPhotos />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/clubs/events/registration\" exact>\n\t\t\t\t\t<EventRegistration />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/clubs/editEventSelector/:clubId\" exact>\n\t\t\t\t\t<EditEventSelector />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/clubs/editEventManager/\" exact>\n\t\t\t\t\t<EditEventManager />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/clubs/profile/:clubId\" exact>\n\t\t\t\t\t<ClubProfileViewer />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/clubs/accountManager/:clubId\" exact>\n\t\t\t\t\t<ClubAccountManager />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/clubs/credential/:clubId\" exact>\n\t\t\t\t\t<ClubCredential />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/clubs/account/:clubId\" exact>\n\t\t\t\t\t<ClubAccount />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/clubs/stripe/:clubId\" exact>\n\t\t\t\t\t<ClubStripe />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/clubs/stripeconnect/:clubId\" exact>\n\t\t\t\t\t<ClubStripeConnect />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/clubs/profileManager/:clubId\" exact>\n\t\t\t\t\t<ClubProfileManager />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/clubs/photos/:clubId\" exact>\n\t\t\t\t\t<ClubPhotos />\n\t\t\t\t</Route>\n\t\t\t\t<Route\n\t\t\t\t\tpath=\"/events/editEntryManager/:id\"\n\t\t\t\t\tcomponent={EditEntryManager}\n\t\t\t\t\texact\n\t\t\t\t/>\n\t\t\t\t<Route\n\t\t\t\t\tpath=\"/events/newEntryManager/:id\"\n\t\t\t\t\tcomponent={NewEntryManager}\n\t\t\t\t\texact\n\t\t\t\t/>\n\t\t\t\t<Route\n\t\t\t\t\tpath=\"/events/entrylist/:eid\"\n\t\t\t\t\tcomponent={EntryListForUsers}\n\t\t\t\t\texact\n\t\t\t\t/>\n\t\t\t\t<Route path=\"/clubs/viewEventSelector/:clubId\" exact>\n\t\t\t\t\t<ViewEventSelector />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/events/formbuilder/:id\" exact>\n\t\t\t\t\t<FormBuilder />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/users/events/:userId\" exact>\n\t\t\t\t\t<UserEvents />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/users/garagewrapper/:userId\" exact>\n\t\t\t\t\t<UserGarageWrapper />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/users/cars/new\" exact>\n\t\t\t\t\t<NewCar />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/users/cars/update/:carId\" exact>\n\t\t\t\t\t<UpdateCar />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/users/cars/:carId\" exact>\n\t\t\t\t\t<Car />\n\t\t\t\t</Route>\n\t\t\t\t<Route\n\t\t\t\t\tpath=\"/events/entrylistMaterialTable/:eid\"\n\t\t\t\t\tcomponent={MaterialTableEntryReport}\n\t\t\t\t\texact\n\t\t\t\t/>\n\t\t\t\t{/* End of page refresh section */}\n\n\t\t\t\t<Route path=\"/error\" exact>\n\t\t\t\t\t<Error />\n\t\t\t\t</Route>\n\t\t\t\t<Redirect to=\"/error\" />\n\t\t\t</Switch>\n\t\t);\n\t}\n\treturn (\n\t\t<ClubAuthContext.Provider\n\t\t\tvalue={{\n\t\t\t\tisClubLoggedIn: !!clubToken, // !!null = true\n\t\t\t\tclubToken: clubToken,\n\t\t\t\tclubId: clubId,\n\t\t\t\tclubName: clubName,\n\t\t\t\tclubLogin: clubLogin,\n\t\t\t\tclubLogout: clubLogout,\n\t\t\t\tclubRedirectURL: clubRedirectURL,\n\t\t\t\tsetClubRedirectURL: setClubRedirectURL\n\t\t\t}}>\n\t\t\t<UserAuthContext.Provider\n\t\t\t\tvalue={{\n\t\t\t\t\tisUserLoggedIn: !!userToken,\n\t\t\t\t\tuserToken: userToken,\n\t\t\t\t\tuserId: userId,\n\t\t\t\t\tuserName: userName,\n\t\t\t\t\tuserEntries: userEntries,\n\t\t\t\t\tuserImage: userImage,\n\t\t\t\t\tuserRedirectURL: userRedirectURL,\n\t\t\t\t\tuserLogin: userLogin,\n\t\t\t\t\tuserLogout: userLogout,\n\t\t\t\t\tsetUserRedirectURL: setUserRedirectURL\n\t\t\t\t}}>\n\t\t\t\t<FormContext.Provider\n\t\t\t\t\tvalue={{\n\t\t\t\t\t\tisInsideForm: isInsideForm,\n\t\t\t\t\t\tsetIsInsideForm: setIsInsideForm\n\t\t\t\t\t}}>\n\t\t\t\t\t<Router>\n\t\t\t\t\t\t<MainNavigation />\n\t\t\t\t\t\t{/* main is defiend in /shared/components/Navigation/MainHeader.css */}\n\t\t\t\t\t\t<main>\n\t\t\t\t\t\t\t{/* Suspense is for splitting codes */}\n\t\t\t\t\t\t\t<Suspense\n\t\t\t\t\t\t\t\tfallback={\n\t\t\t\t\t\t\t\t\t<div className=\"center\">\n\t\t\t\t\t\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t{clubToken && <ClubDashboardToolbar />}\n\t\t\t\t\t\t\t\t{routes}\n\t\t\t\t\t\t\t</Suspense>\n\t\t\t\t\t\t</main>\n\t\t\t\t\t</Router>\n\t\t\t\t</FormContext.Provider>\n\t\t\t</UserAuthContext.Provider>\n\t\t</ClubAuthContext.Provider>\n\t);\n};\n\nexport default App;\n",["544","545"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/UIElements/LoadingSpinner.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/pages/Event.js",["546","547","548","549","550"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/pages/EventRegistration.js",["551","552","553","554","555","556","557"],"import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Field, Form, Formik, ErrorMessage } from 'formik';\nimport moment from 'moment';\nimport NavigationPrompt from 'react-router-navigation-prompt';\n\n// import { EditorState } from 'draft-js';\n// import { RichEditorExample } from '../components/RichEditor';\nimport 'draft-js/dist/Draft.css';\n\nimport { useClubLoginValidation } from '../../shared/hooks/clubLoginValidation-hook';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\n// import ImageUploader from '../../shared/components/FormElements/ImageUploader';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport PromptModal from '../../shared/components/UIElements/PromptModal';\n\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { ClubAuthContext } from '../../shared/context/auth-context';\nimport { FormContext } from '../../shared/context/form-context';\n\nimport '../../shared/css/EventForm.css';\n\nconst EventRegistration = props => {\n\tlet eventId = props.eventId;\n\tconst [initialized, setInitialized] = useState(false);\n\tconst clubAuthContext = useContext(ClubAuthContext);\n\tconst clubId = clubAuthContext.clubId;\n\tconst formContext = useContext(FormContext);\n\n\tconst [continueStatus, setContinueStatus] = useState(false);\n\t// publishButton controls when to enable CONTINUE button, set to true after saveHandler() succeeds\n\tconst [publishButton, setPublishButton] = useState(false);\n\t// set PUBLISH button name\n\tconst [publishBtnName, setPublishBtnName] = useState('PUBLISH');\n\n\t// this is the return function that passes finishing status back to NewEventManager\n\tuseEffect(() => {\n\t\tprops.registrationStatus(continueStatus);\n\t}, [continueStatus, props]);\n\n\tuseEffect(() => {\n\t\tlet mounted = true;\n\t\tif (mounted) {\n\t\t\tformContext.setIsInsideForm(true);\n\t\t}\n\t\treturn () => {\n\t\t\tmounted = false;\n\t\t};\n\t}, [formContext]);\n\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\n\t// authentication check\n\tuseClubLoginValidation('/clubs/events/registration');\n\n\t// If we are re-directing to this page, we want to clear up clubRedirectURL\n\tlet location = useLocation();\n\tReact.useEffect(() => {\n\t\tlet path = location.pathname;\n\t\tlet clubRedirectURL = clubAuthContext.clubRedirectURL;\n\t\tif (path === clubRedirectURL) {\n\t\t\t// re-init redirectURL after re-direction route\n\t\t\tclubAuthContext.setClubRedirectURL(null);\n\t\t}\n\t}, [location, clubAuthContext]);\n\n\tconst [totalCap, setTotalCap] = useState('');\n\tconst [numGroups, setNumGroups] = useState('');\n\tconst [capDistribution, setCapDistribution] = useState(false);\n\tconst [multiDayEvent, setMultiDayEvent] = useState(false);\n\tconst [privateEvent, setPrivateEvent] = useState(false);\n\n\t// initialize local storage\n\t// Get the existing data\n\tvar eventFormData = localStorage.getItem('eventFormData');\n\n\t// If no existing data, create an array; otherwise retrieve it\n\teventFormData = eventFormData ? JSON.parse(eventFormData) : {};\n\n\tconst [OKLeavePage, setOKLeavePage] = useState(true);\n\n\t// get clubAccount from backend to determine wheather to display private event checkbox\n\tconst [hostPrivateEvent, setHostPrivateEvent] = useState(false);\n\tuseEffect(() => {\n\t\tconst getClubAccount = async () => {\n\t\t\ttry {\n\t\t\t\tconst [\n\t\t\t\t\tresponseData,\n\t\t\t\t\tresponseStatus,\n\t\t\t\t\tresponseMessage\n\t\t\t\t] = await sendRequest(\n\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL +\n\t\t\t\t\t\t`/clubs/account/${clubId}`,\n\t\t\t\t\t'GET',\n\t\t\t\t\tnull,\n\t\t\t\t\t{\n\t\t\t\t\t\t// adding JWT to header for authentication\n\t\t\t\t\t\tAuthorization: 'Bearer ' + clubAuthContext.clubToken\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tsetHostPrivateEvent(responseData.clubAccount.privateEvent);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log('err = ', err);\n\t\t\t}\n\t\t};\n\t\tgetClubAccount();\n\t}, []);\n\t// local storage gets the higest priority\n\t// get from localStorage\n\tif (\n\t\t!initialized &&\n\t\teventFormData &&\n\t\tmoment(eventFormData.expirationDate) > moment()\n\t) {\n\t\tsetInitialized(true);\n\t\t// Form data\n\t\tif (eventFormData.totalCap) {\n\t\t\tsetTotalCap(eventFormData.totalCap);\n\t\t}\n\t\tif (eventFormData.numGroups) {\n\t\t\tsetNumGroups(eventFormData.numGroups);\n\t\t}\n\t\tif (eventFormData.capDistribution) {\n\t\t\tsetCapDistribution(eventFormData.capDistribution);\n\t\t}\n\t\tif (eventFormData.multiDayEvent) {\n\t\t\tsetMultiDayEvent(eventFormData.multiDayEvent);\n\t\t}\n\t\tif (eventFormData.privateEvent) {\n\t\t\tsetPrivateEvent(eventFormData.privateEvent);\n\t\t}\n\t} else if (!initialized) {\n\t\tsetInitialized(true);\n\t\t// initialize localStorage\n\t\teventFormData['expirationDate'] = moment(\n\t\t\tmoment().add(1, 'days'),\n\t\t\tmoment.ISO_8601\n\t\t);\n\t\teventFormData['totalCap'] = '';\n\t\teventFormData['numGroups'] = '';\n\t\teventFormData['capDistribution'] = false;\n\t\teventFormData['multiDayEvent'] = false;\n\t\teventFormData['privateEvent'] = false;\n\t\tlocalStorage.setItem(\n\t\t\t'eventFormData',\n\t\t\tJSON.stringify(eventFormData)\n\t\t);\n\t}\n\n\tconst removeEventFormData = () => {\n\t\tlocalStorage.removeItem('eventFormData');\n\t};\n\n\tconst initialValues = {\n\t\t// editorState: new EditorState.createEmpty(),\n\t\ttotalCap: totalCap,\n\t\tnumGroups: numGroups,\n\t\tcapDistribution: capDistribution,\n\t\tmultiDayEvent: multiDayEvent,\n\t\tprivateEvent: privateEvent\n\t};\n\n\tconst updateEventFormData = (key, value) => {\n\t\tconst storageData = JSON.parse(\n\t\t\tlocalStorage.getItem('eventFormData')\n\t\t);\n\t\tstorageData[key] = value;\n\t\tlocalStorage.setItem(\n\t\t\t'eventFormData',\n\t\t\tJSON.stringify(storageData)\n\t\t);\n\t};\n\n\tconst [\n\t\tcapDistributionClicked,\n\t\tsetCapDistributionClicked\n\t] = useState(false);\n\n\tconst togglecapDistribution = event => {\n\t\tsetCapDistributionClicked(event.target.checked);\n\t};\n\n\tconst history = useHistory();\n\tconst saveHandler = async (values, actions) => {\n\t\ttry {\n\t\t\tawait sendRequest(\n\t\t\t\tprocess.env.REACT_APP_BACKEND_URL +\n\t\t\t\t\t`/events/registration/${eventId}`,\n\t\t\t\t'PATCH',\n\t\t\t\tJSON.stringify({\n\t\t\t\t\ttotalCap: values.totalCap,\n\t\t\t\t\tnumGroups: values.numGroups,\n\t\t\t\t\tcapDistribution: values.capDistribution,\n\t\t\t\t\tmultiDayEvent: values.multiDayEvent,\n\t\t\t\t\tprivateEvent: values.privateEvent\n\t\t\t\t}),\n\t\t\t\t{\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t// adding JWT to header for authentication\n\t\t\t\t\tAuthorization: 'Bearer ' + clubAuthContext.clubToken\n\t\t\t\t}\n\t\t\t);\n\t\t\tsetOKLeavePage(true);\n\t\t\tsetContinueStatus(true);\n\t\t\tsetPublishButton(true);\n\t\t\tprops.saveStatus(true);\n\t\t} catch (err) {}\n\t};\n\n\t/***** Form Validation Section  *****/\n\tconst [validateTotalCap, setValidateTotalCap] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Total participants is required.';\n\t\t\t}\n\t\t\tlet numVal = parseInt(value);\n\t\t\tif (isNaN(numVal)) {\n\t\t\t\terror = 'Please inputer a number.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\n\tconst [validateNumGroups, setValidateNumGroups] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Number of groups is required.';\n\t\t\t}\n\t\t\tlet numVal = parseInt(value);\n\t\t\tif (isNaN(numVal)) {\n\t\t\t\terror = 'Please inputer a number.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\n\tconst publishHandler = async () => {\n\t\ttry {\n\t\t\tawait sendRequest(\n\t\t\t\tprocess.env.REACT_APP_BACKEND_URL +\n\t\t\t\t\t`/clubs/publish/${eventId}`,\n\t\t\t\t'PATCH',\n\t\t\t\tJSON.stringify({ published: true }),\n\t\t\t\t{\n\t\t\t\t\t// No need for content-type since body is null,\n\t\t\t\t\t// adding JWT to header for authentication\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\tAuthorization: 'Bearer ' + clubAuthContext.clubToken\n\t\t\t\t}\n\t\t\t);\n\t\t\tsetPublishButton(false);\n\t\t\tsetPublishBtnName('PUBLISHED');\n\t\t} catch (err) {}\n\t};\n\n\tconst eventForm = values => (\n\t\t<div className=\"event-form\">\n\t\t\t<div className=\"event-form-header\">\n\t\t\t\t<h4>Please enter event registration information</h4>\n\t\t\t\t<h5>\n\t\t\t\t\t&nbsp;Values cannot be modified after event been saved.\n\t\t\t\t</h5>\n\t\t\t\t<hr className=\"event-form__hr\" />\n\t\t\t</div>\n\t\t\t<Formik\n\t\t\t\tenableReinitialize={true}\n\t\t\t\tinitialValues={initialValues}\n\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\tsaveHandler(values);\n\t\t\t\t\tif (!actions.isSubmitting) {\n\t\t\t\t\t\tsetValidateTotalCap(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Total number of participants is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlet numVal = parseInt(value);\n\t\t\t\t\t\t\tif (isNaN(numVal)) {\n\t\t\t\t\t\t\t\terror = 'Please inputer a number.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateNumGroups(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Number of groups is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlet numVal = parseInt(value);\n\t\t\t\t\t\t\tif (isNaN(numVal)) {\n\t\t\t\t\t\t\t\terror = 'Please inputer a number.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}}>\n\t\t\t\t{({\n\t\t\t\t\tvalues,\n\t\t\t\t\terrors,\n\t\t\t\t\tisSubmitting,\n\t\t\t\t\tisValid,\n\t\t\t\t\tsetFieldValue,\n\t\t\t\t\tsubmitted,\n\t\t\t\t\ttouched,\n\t\t\t\t\thandleBlur\n\t\t\t\t}) => (\n\t\t\t\t\t<Form className=\"event-form-container\">\n\t\t\t\t\t\t<label htmlFor=\"totalCap\" className=\"event-form__label\">\n\t\t\t\t\t\t\t<i className=\"fal fa-users\"></i>\n\t\t\t\t\t\t\t&nbsp; Total Participants\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"totalCap\"\n\t\t\t\t\t\t\tname=\"totalCap\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tvalidate={validateTotalCap}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.name will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateEventFormData('totalCap', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.totalCap && errors.totalCap && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error_quarter\">\n\t\t\t\t\t\t\t\t{errors.totalCap}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label htmlFor=\"numGroups\" className=\"event-form__label\">\n\t\t\t\t\t\t\t<i className=\"fal fa-users-class\"></i>\n\t\t\t\t\t\t\t&nbsp; Number of Groups\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"numGroups\"\n\t\t\t\t\t\t\tname=\"numGroups\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tvalidate={validateNumGroups}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateEventFormData('numGroups', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}></Field>\n\t\t\t\t\t\t{touched.numGroups && errors.numGroups && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error_quarter\">\n\t\t\t\t\t\t\t\t{errors.numGroups}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label className=\"event-form__checkbox\">\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tid=\"capDistribution\"\n\t\t\t\t\t\t\t\tname=\"capDistribution\"\n\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t// validate={validateCapDistribution(values)}\n\t\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t&nbsp; Check the box if you want to evenly distribute\n\t\t\t\t\t\t\ttotal participant number to each group.\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t{props.multiDayEvent && (\n\t\t\t\t\t\t\t<label className=\"event-form__checkbox\">\n\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\tid=\"multiDayEvent\"\n\t\t\t\t\t\t\t\t\tname=\"multiDayEvent\"\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t&nbsp; You are creating a multiple day event. Please\n\t\t\t\t\t\t\t\tcheck the box if each day represent a single event.\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{hostPrivateEvent && (\n\t\t\t\t\t\t\t<label className=\"event-form__checkbox\">\n\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\tid=\"privateEvent\"\n\t\t\t\t\t\t\t\t\tname=\"privateEvent\"\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t&nbsp; Check the box if this is a private event. (A\n\t\t\t\t\t\t\t\tprivate event is only visivle with the event link.)\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{/* error message not working */}\n\t\t\t\t\t\t{/* {touched.capDistribution && errors.capDistribution && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.capDistribution}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<ErrorMessage\n\t\t\t\t\t\t\tname=\"capDistribution\"\n\t\t\t\t\t\t\tclassName=\"event-form__field-error-quarter\"\n\t\t\t\t\t\t/> */}\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tsize=\"medium-block\"\n\t\t\t\t\t\t\tmargin-left=\"1.5rem\"\n\t\t\t\t\t\t\tdisabled={isSubmitting || !isValid}>\n\t\t\t\t\t\t\tSAVE\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\tmargin-left=\"1.5rem\"\n\t\t\t\t\t\t\tdisabled={!publishButton}\n\t\t\t\t\t\t\tonClick={publishHandler}>\n\t\t\t\t\t\t\t{publishBtnName}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<NavigationPrompt\n\t\t\t\t\t\t\tafterConfirm={() => {\n\t\t\t\t\t\t\t\tformContext.setIsInsideForm(false);\n\t\t\t\t\t\t\t\tremoveEventFormData();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t// Confirm navigation if going to a path that does not start with current path.\n\t\t\t\t\t\t\t// We don't want to confirm navigation when OKLeavePage === true and redirect to '/clubs/auth' due to\n\t\t\t\t\t\t\t// authentication issue\n\t\t\t\t\t\t\twhen={(crntLocation, nextLocation) => {\n\t\t\t\t\t\t\t\t// remove ClubRedirectURL from memory\n\t\t\t\t\t\t\t\tclubAuthContext.setClubRedirectURL(null);\n\t\t\t\t\t\t\t\t// OKLeavePage meaning form was not touched yet\n\t\t\t\t\t\t\t\tif (OKLeavePage) {\n\t\t\t\t\t\t\t\t\tformContext.setIsInsideForm(false);\n\t\t\t\t\t\t\t\t\tremoveEventFormData();\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// nextLocation.pathname !== '/clubs/auth' &&  --- adding this line causing state update on an\n\t\t\t\t\t\t\t\t\t// unmounted component issue.  Without it, confirmation modal will pop up\n\t\t\t\t\t\t\t\t\t// always gives the warning, because we want to be able to\n\t\t\t\t\t\t\t\t\t// clear localStorage after confirm\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t!nextLocation ||\n\t\t\t\t\t\t\t\t\t\t!nextLocation.pathname.startsWith(\n\t\t\t\t\t\t\t\t\t\t\tcrntLocation.pathname\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t{({ isActive, onCancel, onConfirm }) => {\n\t\t\t\t\t\t\t\tif (isActive) {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<PromptModal\n\t\t\t\t\t\t\t\t\t\t\tonCancel={onCancel}\n\t\t\t\t\t\t\t\t\t\t\tonConfirm={onConfirm}\n\t\t\t\t\t\t\t\t\t\t\tcontentclassName=\"event-item__modal-content\"\n\t\t\t\t\t\t\t\t\t\t\tfooterclassName=\"event-item__modal-actions\"\n\t\t\t\t\t\t\t\t\t\t\terror=\"You sure want to leave? Unsaved data will be lost.\">\n\t\t\t\t\t\t\t\t\t\t\t{/* render props.children */}\n\t\t\t\t\t\t\t\t\t\t</PromptModal>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\tThis is probably an anti-pattern but ya know...\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t</NavigationPrompt>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t{isLoading && (\n\t\t\t\t<div className=\"center\">\n\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{eventForm()}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default EventRegistration;\n",["558","559"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/pages/NewEvent.js",["560","561","562","563"],"import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Field, Form, Formik } from 'formik';\nimport moment from 'moment';\nimport NavigationPrompt from 'react-router-navigation-prompt';\nimport * as Yup from 'yup';\n\n// import { EditorState } from 'draft-js';\n// import { RichEditorExample } from '../components/RichEditor';\n// import 'draft-js/dist/Draft.css';\n\nimport { useClubLoginValidation } from '../../shared/hooks/clubLoginValidation-hook';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport PromptModal from '../../shared/components/UIElements/PromptModal';\n\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { ClubAuthContext } from '../../shared/context/auth-context';\nimport { FormContext } from '../../shared/context/form-context';\n\nimport '../../shared/css/EventForm.css';\nimport { eventTypes } from '../../event/components/EventTypes';\n\nconst NewEvent = props => {\n\tconst [initialized, setInitialized] = useState(false);\n\tconst clubAuthContext = useContext(ClubAuthContext);\n\tconst formContext = useContext(FormContext);\n\n\t// contButton controls when to enable CONTINUE button, set to true after submitHandler() succeeds\n\t// const [contButton, setContButton] = useState(false);\n\t// continueStatus controls when to return props.newEventStatus back to NewEventManager\n\tconst [continueStatus, setContinueStatus] = useState(false);\n\tconst [eventId, setEventId] = useState();\n\tconst [isMultiDayEvent, setIsMultiDayEvent] = useState(false);\n\n\t// const continueHandler = () => {\n\t// \tsetContinueStatus(true);\n\t// };\n\t// this is the return function that passes finishing status back to NewEventManager\n\tuseEffect(() => {\n\t\tprops.newEventStatus(continueStatus);\n\t}, [continueStatus, props]);\n\n\t// return eventId to NewEventManager\n\tuseEffect(() => {\n\t\tprops.eventIdHandler(eventId);\n\t}, [eventId, props]);\n\n\tuseEffect(() => {\n\t\tlet mounted = true;\n\t\tif (mounted) {\n\t\t\tformContext.setIsInsideForm(true);\n\t\t}\n\t\treturn () => {\n\t\t\tmounted = false;\n\t\t};\n\t}, [formContext]);\n\n\tuseEffect(() => {\n\t\tprops.isMultiDayEvent(isMultiDayEvent);\n\t}, [isMultiDayEvent]);\n\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\n\t// authentication check\n\tuseClubLoginValidation('/clubs/events/new');\n\n\t// If we are re-directing to this page, we want to clear up clubRedirectURL\n\tlet location = useLocation();\n\tReact.useEffect(() => {\n\t\tlet path = location.pathname;\n\t\tlet clubRedirectURL = clubAuthContext.clubRedirectURL;\n\t\tif (path === clubRedirectURL) {\n\t\t\t// re-init redirectURL after re-direction route\n\t\t\tclubAuthContext.setClubRedirectURL(null);\n\t\t}\n\t}, [location, clubAuthContext]);\n\n\tlet tomorrow = moment().add(1, 'days').format('YYYY-MM-DD');\n\tconst [name, setName] = useState('');\n\tconst [type, setType] = useState('Autocross');\n\tconst [startDate, setStartDate] = useState(tomorrow);\n\tconst [endDate, setEndDate] = useState(tomorrow);\n\tconst [regStartDate, setRegStartDate] = useState(tomorrow);\n\tconst [regEndDate, setRegEndDate] = useState(tomorrow);\n\tconst [venue, setVenue] = useState('');\n\tconst [address, setAddress] = useState('');\n\tconst [description, setDescription] = useState('');\n\tconst [instruction, setInstruction] = useState('');\n\n\t// initialize local storage\n\t// Get the existing data\n\tvar eventFormData = localStorage.getItem('eventFormData');\n\n\t// If no existing data, create an array; otherwise retrieve it\n\teventFormData = eventFormData ? JSON.parse(eventFormData) : {};\n\n\tconst [OKLeavePage, setOKLeavePage] = useState(true);\n\t// local storage gets the higest priority\n\t// get from localStorage\n\tif (\n\t\t!initialized &&\n\t\teventFormData &&\n\t\tmoment(eventFormData.expirationDate) > moment()\n\t) {\n\t\tsetInitialized(true);\n\t\t// Form data\n\t\tif (eventFormData.name) {\n\t\t\tsetName(eventFormData.name);\n\t\t}\n\t\tif (eventFormData.type) {\n\t\t\tsetType(eventFormData.type);\n\t\t}\n\t\tif (eventFormData.startDate) {\n\t\t\tsetStartDate(eventFormData.startDate);\n\t\t}\n\t\tif (eventFormData.endDate) {\n\t\t\tsetEndDate(eventFormData.endDate);\n\t\t}\n\t\tif (eventFormData.regStartDate) {\n\t\t\tsetRegStartDate(eventFormData.regStartDate);\n\t\t}\n\t\tif (eventFormData.regEndDate) {\n\t\t\tsetRegEndDate(eventFormData.regEndDate);\n\t\t}\n\t\tif (eventFormData.venue) {\n\t\t\tsetVenue(eventFormData.venue);\n\t\t}\n\t\tif (eventFormData.address) {\n\t\t\tsetAddress(eventFormData.address);\n\t\t}\n\t\tif (eventFormData.description) {\n\t\t\tsetDescription(eventFormData.description);\n\t\t}\n\t\tif (eventFormData.instruction) {\n\t\t\tsetInstruction(eventFormData.instruction);\n\t\t}\n\t} else if (!initialized) {\n\t\tsetInitialized(true);\n\t\t// initialize localStorage\n\t\teventFormData['expirationDate'] = moment(\n\t\t\tmoment().add(1, 'days'),\n\t\t\tmoment.ISO_8601\n\t\t);\n\t\teventFormData['name'] = '';\n\t\teventFormData['type'] = 'Autocross';\n\t\teventFormData['startDate'] = tomorrow;\n\t\teventFormData['endDate'] = tomorrow;\n\t\teventFormData['regStartDate'] = tomorrow;\n\t\teventFormData['regEndDate'] = tomorrow;\n\t\teventFormData['venue'] = '';\n\t\teventFormData['address'] = '';\n\t\teventFormData['description'] = '';\n\t\teventFormData['instruction'] = '';\n\t\tlocalStorage.setItem(\n\t\t\t'eventFormData',\n\t\t\tJSON.stringify(eventFormData)\n\t\t);\n\t}\n\n\tconst removeEventFormData = () => {\n\t\tlocalStorage.removeItem('eventFormData');\n\t\t// history.push(`/events/club/${clubAuthContext.clubId}`);\n\t};\n\n\tconst initialValues = {\n\t\t// editorState: new EditorState.createEmpty(),\n\t\tname: name,\n\t\ttype: type,\n\t\tstartDate: startDate,\n\t\tendDate: endDate,\n\t\tregStartDate: regStartDate,\n\t\tregEndDate: regEndDate,\n\t\tvenue: venue,\n\t\taddress: address,\n\t\tdescription: description,\n\t\tinstruction: instruction\n\t};\n\n\tconst updateEventFormData = (key, value) => {\n\t\tconst storageData = JSON.parse(\n\t\t\tlocalStorage.getItem('eventFormData')\n\t\t);\n\t\tstorageData[key] = value;\n\t\tlocalStorage.setItem(\n\t\t\t'eventFormData',\n\t\t\tJSON.stringify(storageData)\n\t\t);\n\t};\n\n\tconst history = useHistory();\n\tconst submitHandler = async (values, actions) => {\n\t\ttry {\n\t\t\tconst formData = new FormData();\n\t\t\tformData.append('name', values.name);\n\t\t\tformData.append('type', values.type);\n\t\t\tformData.append(\n\t\t\t\t'startDate',\n\t\t\t\tmoment(values.startDate, moment.ISO_8601)\n\t\t\t);\n\t\t\tformData.append(\n\t\t\t\t'endDate',\n\t\t\t\tmoment(values.endDate, moment.ISO_8601)\n\t\t\t);\n\t\t\tformData.append(\n\t\t\t\t'regStartDate',\n\t\t\t\tmoment(values.regStartDate, moment.ISO_8601)\n\t\t\t);\n\t\t\tformData.append(\n\t\t\t\t'regEndDate',\n\t\t\t\tmoment(values.regEndDate, moment.ISO_8601)\n\t\t\t);\n\t\t\tformData.append('venue', values.venue);\n\t\t\tformData.append('address', values.address);\n\t\t\tformData.append('description', values.description);\n\t\t\tformData.append('instruction', values.instruction);\n\t\t\tconst [\n\t\t\t\tresponseData,\n\t\t\t\tresponseStatus,\n\t\t\t\tresponseMessage\n\t\t\t] = await sendRequest(\n\t\t\t\tprocess.env.REACT_APP_BACKEND_URL + '/events',\n\t\t\t\t'POST',\n\t\t\t\tformData,\n\t\t\t\t{\n\t\t\t\t\t// adding JWT to header for authentication\n\t\t\t\t\tAuthorization: 'Bearer ' + clubAuthContext.clubToken\n\t\t\t\t}\n\t\t\t);\n\t\t\tsetOKLeavePage(true);\n\t\t\tsetEventId(responseData.event.id);\n\t\t\tif (values.startDate === values.endDate) {\n\t\t\t\tsetIsMultiDayEvent(false);\n\t\t\t} else {\n\t\t\t\tsetIsMultiDayEvent(true);\n\t\t\t}\n\t\t\t// move to next stage\n\t\t\tsetContinueStatus(true);\n\t\t} catch (err) {}\n\t};\n\n\t/***** Form Validation Section  *****/\n\t// 1. Field level: Field validate={validateName}. This validates when Field is onBlur\n\t// 2. startDate, endDate, regStartDate, and regEndDate use Yup beacuse Yup.ref makes it convenient to check peer fields\n\t// 3. Submit: use Formik isValid to enable the button.  Formik submission will validate everything.\n\tconst dateValidationSchema = Yup.object().shape({\n\t\tstartDate: Yup.date()\n\t\t\t.min(tomorrow, 'Start date must be no later than end date')\n\t\t\t.max(\n\t\t\t\tYup.ref('endDate'),\n\t\t\t\t'Start date must be no later than end date'\n\t\t\t)\n\t\t\t.required(),\n\t\tendDate: Yup.date()\n\t\t\t.min(\n\t\t\t\tYup.ref('startDate'),\n\t\t\t\t'End date cannot be earlier than start date'\n\t\t\t)\n\t\t\t.max('2021-12-31')\n\t\t\t.required(),\n\t\tregStartDate: Yup.date()\n\t\t\t.min(\n\t\t\t\ttomorrow,\n\t\t\t\t'Registration start date cannot be earlier than tomorrow'\n\t\t\t)\n\t\t\t.when('startDate', (startDate, schema) => {\n\t\t\t\tlet dayBefore = moment(startDate)\n\t\t\t\t\t.add(-1, 'days')\n\t\t\t\t\t.format('YYYY-MM-DD');\n\t\t\t\treturn schema.max(\n\t\t\t\t\tdayBefore,\n\t\t\t\t\t'Registration start date needs to be earlier event start date'\n\t\t\t\t);\n\t\t\t})\n\t\t\t.required(),\n\t\tregEndDate: Yup.date()\n\t\t\t.min(\n\t\t\t\tYup.ref('regStartDate'),\n\t\t\t\t'Registration end date cannot be earlier than registration start date'\n\t\t\t)\n\t\t\t.when('startDate', (startDate, schema) => {\n\t\t\t\tlet dayBefore = moment(startDate)\n\t\t\t\t\t.add(-1, 'days')\n\t\t\t\t\t.format('YYYY-MM-DD');\n\t\t\t\treturn schema.max(\n\t\t\t\t\tdayBefore,\n\t\t\t\t\t'Registration end date needs to be earlier event start date'\n\t\t\t\t);\n\t\t\t})\n\t\t\t.required()\n\t});\n\n\tconst [validateName, setValidateName] = useState(() => value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Event Name is required.';\n\t\t}\n\t\treturn error;\n\t});\n\n\tconst [validateVenue, setValidateVenue] = useState(() => value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Event Venue is required.';\n\t\t}\n\t\treturn error;\n\t});\n\n\tconst [validateAddress, setValidateAddress] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Event Address is required.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\n\tconst [validateDescription, setValidateDescription] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Event Description is required.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\n\tconst [validateInstruction, setValidateInstruction] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Event Instruction is required.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\t/***** End of Form Validation *****/\n\n\tconst eventForm = values => (\n\t\t<div className=\"event-form\">\n\t\t\t<div className=\"event-form-header\">\n\t\t\t\t<h4>Please enter event information</h4>\n\t\t\t\t<h5>&nbsp;All fields are required</h5>\n\t\t\t\t<hr className=\"event-form__hr\" />\n\t\t\t</div>\n\t\t\t<Formik\n\t\t\t\tenableReinitialize={true}\n\t\t\t\tinitialValues={initialValues}\n\t\t\t\tvalidationSchema={dateValidationSchema}\n\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\tsubmitHandler(values);\n\t\t\t\t\tif (!actions.isSubmitting) {\n\t\t\t\t\t\tsetValidateName(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Event Name is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateVenue(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Event Venue is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateAddress(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Event Address is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateDescription(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Event description is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateInstruction(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Event instruction is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}}>\n\t\t\t\t{({\n\t\t\t\t\tvalues,\n\t\t\t\t\terrors,\n\t\t\t\t\tisSubmitting,\n\t\t\t\t\tisValid,\n\t\t\t\t\tsetFieldValue,\n\t\t\t\t\tsubmitted,\n\t\t\t\t\ttouched,\n\t\t\t\t\thandleBlur\n\t\t\t\t}) => (\n\t\t\t\t\t<Form className=\"event-form-container\">\n\t\t\t\t\t\t<label htmlFor=\"name\" className=\"event-form__label\">\n\t\t\t\t\t\t\t<i className=\"fal fa-file-alt\" />\n\t\t\t\t\t\t\t&nbsp; Event Name\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field\"\n\t\t\t\t\t\t\tvalidate={validateName}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.name will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateEventFormData('name', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.name && errors.name && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.name}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label htmlFor=\"eventType\" className=\"event-form__label\">\n\t\t\t\t\t\t\t<i className=\"fal fa-flag-checkered\" />\n\t\t\t\t\t\t\t&nbsp; Event Type\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"type\"\n\t\t\t\t\t\t\tname=\"type\"\n\t\t\t\t\t\t\tas=\"select\"\n\t\t\t\t\t\t\tclassName=\"event-form__eventtype\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateEventFormData('type', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<option value=\"Event Type\" disabled>\n\t\t\t\t\t\t\t\tEvent Type\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t{eventTypes.map(option => {\n\t\t\t\t\t\t\t\tlet res = option.split(':');\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<option name={res[0]} key={res[0]}>\n\t\t\t\t\t\t\t\t\t\t{res[1]}\n\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"startDate\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_startdate\">\n\t\t\t\t\t\t\t<i className=\"fal fa-calendar-alt\" />\n\t\t\t\t\t\t\t&nbsp; Start Date\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"endDate\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_enddate\">\n\t\t\t\t\t\t\t<i className=\"fal fa-calendar-alt\" />\n\t\t\t\t\t\t\t&nbsp; End Date\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"startDate\"\n\t\t\t\t\t\t\tname=\"startDate\"\n\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\tmin={tomorrow}\n\t\t\t\t\t\t\tmax=\"2030-12-31\"\n\t\t\t\t\t\t\tclassName=\"event-form__startdate\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateEventFormData('startDate', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"endDate\"\n\t\t\t\t\t\t\tname=\"endDate\"\n\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\tmin={tomorrow}\n\t\t\t\t\t\t\tmax=\"2030-12-31\"\n\t\t\t\t\t\t\tclassName=\"event-form__enddate\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateEventFormData('endDate', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{(touched.startDate || touched.endDate) &&\n\t\t\t\t\t\t\t(errors.sartDate || errors.endDate) && (\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<div className=\"event-form__field-error-startDate\">\n\t\t\t\t\t\t\t\t\t\t{errors.startDate}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"event-form__field-error-endDate\">\n\t\t\t\t\t\t\t\t\t\t{errors.endDate}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"regStartDate\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_startdate\">\n\t\t\t\t\t\t\t<i className=\"fal fa-calendar-alt\" />\n\t\t\t\t\t\t\t&nbsp; Registration Start Date\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"regEndDate\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_enddate\">\n\t\t\t\t\t\t\t<i className=\"fal fa-calendar-alt\" />\n\t\t\t\t\t\t\t&nbsp; Registration End Date\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"regStartDate\"\n\t\t\t\t\t\t\tname=\"regStartDate\"\n\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\tmin={tomorrow}\n\t\t\t\t\t\t\tmax=\"2030-12-31\"\n\t\t\t\t\t\t\tclassName=\"event-form__startdate\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateEventFormData(\n\t\t\t\t\t\t\t\t\t'regStartDate',\n\t\t\t\t\t\t\t\t\tevent.target.value\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"regEndDate\"\n\t\t\t\t\t\t\tname=\"regEndDate\"\n\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\tmin={tomorrow}\n\t\t\t\t\t\t\tmax=\"2030-12-31\"\n\t\t\t\t\t\t\tclassName=\"event-form__enddate\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateEventFormData('regEndDate', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{(touched.regStartDate || touched.regEndDate) &&\n\t\t\t\t\t\t\t(errors.regStartDate || errors.regEndDate) && (\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<div className=\"event-form__field-error-startDate\">\n\t\t\t\t\t\t\t\t\t\t{errors.regStartDate}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"event-form__field-error-endDate\">\n\t\t\t\t\t\t\t\t\t\t{errors.regEndDate}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label htmlFor=\"venue\" className=\"event-form__label\">\n\t\t\t\t\t\t\t<i className=\"fal fa-plane-alt\"></i>\n\t\t\t\t\t\t\t&nbsp; Venue\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"venue\"\n\t\t\t\t\t\t\tname=\"venue\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tplaceholder=\"ex: Crows Landing\"\n\t\t\t\t\t\t\tclassName=\"event-form__field\"\n\t\t\t\t\t\t\tvalidate={validateVenue}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateEventFormData('venue', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.venue && errors.venue && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.venue}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label htmlFor=\"address\" className=\"event-form__label\">\n\t\t\t\t\t\t\t<i className=\"far fa-map-marker-alt\" />\n\t\t\t\t\t\t\t&nbsp; Venue Address\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"address\"\n\t\t\t\t\t\t\tname=\"address\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tplaceholder=\"ex: Crows Landing, CA\"\n\t\t\t\t\t\t\tclassName=\"event-form__field\"\n\t\t\t\t\t\t\tvalidate={validateAddress}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateEventFormData('address', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.address && errors.address && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.address}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{/* <label\n\t\t\t\t\t\t\thtmlFor=\"description\"\n\t\t\t\t\t\t\tclassName=\"event-form__label\">\n\t\t\t\t\t\t\tEvent Description\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<RichEditorExample\n\t\t\t\t\t\t\teditorState={values.editorState}\n\t\t\t\t\t\t\tonChange={setFieldValue}\n\t\t\t\t\t\t\tvalidate={validateDescription}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateEventFormData(\n\t\t\t\t\t\t\t\t\t'description',\n\t\t\t\t\t\t\t\t\tevent.target.value\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (event.target.value) {\n\t\t\t\t\t\t\t\t\tsetDescriptionOK(false);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsetDescriptionOK(true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/> */}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"description\"\n\t\t\t\t\t\t\tclassName=\"event-form__label\">\n\t\t\t\t\t\t\t<i className=\"fal fa-edit\" />\n\t\t\t\t\t\t\t&nbsp; Event Description\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"decription\"\n\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\tas=\"textarea\"\n\t\t\t\t\t\t\trows=\"15\"\n\t\t\t\t\t\t\tcols=\"50\"\n\t\t\t\t\t\t\tplaceholder=\"Please enter event description\"\n\t\t\t\t\t\t\tclassName=\"event-form__field-textarea\"\n\t\t\t\t\t\t\tvalidate={validateDescription}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateEventFormData(\n\t\t\t\t\t\t\t\t\t'description',\n\t\t\t\t\t\t\t\t\tevent.target.value\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.description && errors.description && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.description}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"instruction\"\n\t\t\t\t\t\t\tclassName=\"event-form__label\">\n\t\t\t\t\t\t\t<i className=\"fal fa-list-alt\" />\n\t\t\t\t\t\t\t&nbsp; Event Instruction\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"instruction\"\n\t\t\t\t\t\t\tname=\"instruction\"\n\t\t\t\t\t\t\tas=\"textarea\"\n\t\t\t\t\t\t\trows=\"15\"\n\t\t\t\t\t\t\tcols=\"50\"\n\t\t\t\t\t\t\tplaceholder=\"Please enter event instruction\"\n\t\t\t\t\t\t\tclassName=\"event-form__field-textarea\"\n\t\t\t\t\t\t\tvalidate={validateInstruction}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateEventFormData(\n\t\t\t\t\t\t\t\t\t'instruction',\n\t\t\t\t\t\t\t\t\tevent.target.value\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.instruction && errors.instruction && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.instruction}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\tmargin-left=\"1.5rem\"\n\t\t\t\t\t\t\tdisabled={isSubmitting || !isValid}>\n\t\t\t\t\t\t\tSAVE &amp; CONTINUE\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t{/* <Button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\tmargin-left=\"1.5rem\"\n\t\t\t\t\t\t\tdisabled={!contButton}\n\t\t\t\t\t\t\tonClick={continueHandler}>\n\t\t\t\t\t\t\tCONTINUE\n\t\t\t\t\t\t</Button> */}\n\t\t\t\t\t\t<NavigationPrompt\n\t\t\t\t\t\t\tafterConfirm={() => {\n\t\t\t\t\t\t\t\tformContext.setIsInsideForm(false);\n\t\t\t\t\t\t\t\tremoveEventFormData();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t// Confirm navigation if going to a path that does not start with current path.\n\t\t\t\t\t\t\t// We don't want to confirm navigation when OKLeavePage === true and redirect to '/clubs/auth' due to\n\t\t\t\t\t\t\t// authentication issue\n\t\t\t\t\t\t\twhen={(crntLocation, nextLocation) => {\n\t\t\t\t\t\t\t\t// remove ClubRedirectURL from memory\n\t\t\t\t\t\t\t\tclubAuthContext.setClubRedirectURL(null);\n\t\t\t\t\t\t\t\t// OKLeavePage meaning form was not touched yet\n\t\t\t\t\t\t\t\tif (OKLeavePage) {\n\t\t\t\t\t\t\t\t\tformContext.setIsInsideForm(false);\n\t\t\t\t\t\t\t\t\tremoveEventFormData();\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// nextLocation.pathname !== '/clubs/auth' &&  --- adding this line causing state update on an\n\t\t\t\t\t\t\t\t\t// unmounted component issue.  Without it, confirmation modal will pop up\n\t\t\t\t\t\t\t\t\t// always gives the warning, because we want to be able to\n\t\t\t\t\t\t\t\t\t// clear localStorage after confirm\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t!nextLocation ||\n\t\t\t\t\t\t\t\t\t\t!nextLocation.pathname.startsWith(\n\t\t\t\t\t\t\t\t\t\t\tcrntLocation.pathname\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t{({ isActive, onCancel, onConfirm }) => {\n\t\t\t\t\t\t\t\tif (isActive) {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<PromptModal\n\t\t\t\t\t\t\t\t\t\t\tonCancel={onCancel}\n\t\t\t\t\t\t\t\t\t\t\tonConfirm={onConfirm}\n\t\t\t\t\t\t\t\t\t\t\tcontentclassName=\"event-item__modal-content\"\n\t\t\t\t\t\t\t\t\t\t\tfooterclassName=\"event-item__modal-actions\"\n\t\t\t\t\t\t\t\t\t\t\terror=\"You sure want to leave? Unsaved data will be lost.\">\n\t\t\t\t\t\t\t\t\t\t\t{/* render props.children */}\n\t\t\t\t\t\t\t\t\t\t</PromptModal>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\tThis is probably an anti-pattern but ya know...\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t</NavigationPrompt>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t{isLoading && (\n\t\t\t\t<div className=\"center\">\n\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{eventForm()}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default NewEvent;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/ClubManager.js",["564","565","566","567","568","569","570","571","572","573","574","575","576"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/RegistrationManager.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/ClubProfileManager.js",["577","578"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/ClubPhotos.js",["579","580","581","582","583"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubs/pages/Clubs.js",["584","585"],"import React, { useEffect, useState } from 'react';\n\nimport ClubsList from '../components/ClubsList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\n\nconst Clubs = () => {\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\n\tconst [loadedClubs, setLoadedClubs] = useState();\n\t// if the dependency is empty, it will only run once\n\t// don't make useEffect function async, because useEffect does not want the\n\t// function returns a promise\n\tuseEffect(() => {\n\t\tlet mounted = true;\n\t\tconst fetchClubs = async () => {\n\t\t\ttry {\n\t\t\t\t// send GET request to backend\n\t\t\t\tconst [\n\t\t\t\t\tresponseData,\n\t\t\t\t\tresponseStatus,\n\t\t\t\t\tresponseMessage\n\t\t\t\t] = await sendRequest(\n\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL + '/clubs'\n\t\t\t\t);\n\n\t\t\t\t/**\n\t\t\t\t * this corresponds to back end clubsController.getAllClubs\n\t\t\t\t * res.status(200).json({\n\t\t\t\t *   clubs: clubs.map(club => club.toObject({ getters: true }))\n\t\t\t\t * });\n\t\t\t\t **/\n\t\t\t\t//\n\t\t\t\tsetLoadedClubs(responseData.clubs);\n\t\t\t} catch (err) {}\n\t\t};\n\t\tif (mounted) {\n\t\t\tfetchClubs();\n\t\t}\n\t\treturn () => (mounted = false);\n\t}, [sendRequest]);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t{isLoading && (\n\t\t\t\t<div className=\"center\">\n\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{/* we only want to render ClubsList if loadClubs has something; otherwise \n\t\t\tthere will be an error */}\n\t\t\t{!isLoading && loadedClubs && <ClubsList items={loadedClubs} />}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default Clubs;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/entryDashboard/pages/EditEntryManager.js",["586","587","588","589","590","591","592","593","594","595","596","597"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/cars/pages/NewCar.js",["598","599","600"],"import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Field, Form, Formik } from 'formik';\nimport moment from 'moment';\nimport NavigationPrompt from 'react-router-navigation-prompt';\n\n// import { EditorState } from 'draft-js';\n// import { RichEditorExample } from '../components/RichEditor';\n// import 'draft-js/dist/Draft.css';\n\nimport { useUserLoginValidation } from '../../shared/hooks/userLoginValidation-hook';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport ImageUploader from '../../shared/components/FormElements/ImageUploader';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport PromptModal from '../../shared/components/UIElements/PromptModal';\n\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { UserAuthContext } from '../../shared/context/auth-context';\nimport { FormContext } from '../../shared/context/form-context';\n\nimport '../../shared/css/EventForm.css';\n\nconst NewCar = setFieldValue => {\n\tconst [initialized, setInitialized] = useState(false);\n\tconst userAuthContext = useContext(UserAuthContext);\n\tconst formContext = useContext(FormContext);\n\tlet userName = userAuthContext.userName;\n\tuseEffect(() => {\n\t\tlet mounted = true;\n\t\tif (mounted) {\n\t\t\tformContext.setIsInsideForm(true);\n\t\t}\n\t\treturn () => {\n\t\t\tmounted = false;\n\t\t};\n\t}, [formContext]);\n\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\n\t// authentication check\n\tuseUserLoginValidation('/users/cars/new');\n\t// If we are re-directing to this page, we want to clear up clubRedirectURL\n\tlet location = useLocation();\n\tReact.useEffect(() => {\n\t\tlet path = location.pathname;\n\t\tlet userRedirectURL = userAuthContext.userRedirectURL;\n\t\tif (path === userRedirectURL) {\n\t\t\t// re-init redirectURL after re-direction route\n\t\t\tuserAuthContext.setUserRedirectURL(null);\n\t\t}\n\t}, [location, userAuthContext]);\n\n\tconst [year, setYear] = useState('');\n\tconst [make, setMake] = useState('');\n\tconst [model, setModel] = useState('');\n\tconst [trimLevel, setTrimLevel] = useState('');\n\tconst [share, setShare] = useState(false);\n\tconst [tireBrand, setTireBrand] = useState('');\n\tconst [tireName, setTireName] = useState('');\n\tconst [tireFrontWidth, setTireFrontWidth] = useState('');\n\tconst [tireFrontDiameter, setTireFrontDiameter] = useState('');\n\tconst [tireFrontRatio, setTireFrontRatio] = useState('');\n\tconst [tireRearWidth, setTireRearWidth] = useState('');\n\tconst [tireRearDiameter, setTireRearDiameter] = useState('');\n\tconst [tireRearRatio, setTireRearRatio] = useState('');\n\tconst [frontPressure, setFrontPressure] = useState('');\n\tconst [rearPressure, setRearPressure] = useState('');\n\tconst [LFCamber, setLFCamber] = useState('');\n\tconst [RFCamber, setRFCamber] = useState('');\n\tconst [LRCamber, setLRCamber] = useState('');\n\tconst [RRCamber, setRRCamber] = useState('');\n\tconst [LFCaster, setLFCaster] = useState('');\n\tconst [RFCaster, setRFCaster] = useState('');\n\tconst [LFToe, setLFToe] = useState('');\n\tconst [RFToe, setRFToe] = useState('');\n\tconst [frontToe, setfrontToe] = useState('');\n\tconst [LRToe, setLRToe] = useState('');\n\tconst [RRToe, setRRToe] = useState('');\n\tconst [rearToe, setRearToe] = useState('');\n\tconst [FBar, setFBar] = useState('');\n\tconst [RBar, setRBar] = useState('');\n\tconst [FRebound, setFRebound] = useState('');\n\tconst [RRebound, setRRebound] = useState('');\n\tconst [FCompression, setFCompression] = useState('');\n\tconst [RCompression, setRCompression] = useState('');\n\tconst [note, setNote] = useState('');\n\n\t// todo: retrieve file from Reader: const [image, setImage] = useState();\n\t// todo: const [courseMap, setCourseMap] = useState('');\n\tlet image = undefined;\n\n\t// initialize local storage\n\t// Get the existing data\n\tvar carFormData = localStorage.getItem('carFormData');\n\n\t// If no existing data, create an array; otherwise retrieve it\n\tcarFormData = carFormData ? JSON.parse(carFormData) : {};\n\n\tconst [OKLeavePage, setOKLeavePage] = useState(true);\n\t// local storage gets the higest priority\n\t// get from localStorage\n\tif (\n\t\t!initialized &&\n\t\tcarFormData &&\n\t\tmoment(carFormData.expirationDate) > moment()\n\t) {\n\t\tsetInitialized(true);\n\t\t// Form data\n\t\tif (carFormData.year) {\n\t\t\tsetYear(carFormData.year);\n\t\t}\n\t\tif (carFormData.make) {\n\t\t\tsetMake(carFormData.make);\n\t\t}\n\t\tif (carFormData.model) {\n\t\t\tsetModel(carFormData.model);\n\t\t}\n\t\tif (carFormData.trimLevel) {\n\t\t\tsetTrimLevel(carFormData.trimLevel);\n\t\t}\n\t\tif (carFormData.share) {\n\t\t\tsetShare(carFormData.share);\n\t\t}\n\t\tif (carFormData.tireBrand) {\n\t\t\tsetTireBrand(carFormData.tireBrand);\n\t\t}\n\t\tif (carFormData.tireName) {\n\t\t\tsetTireName(carFormData.tireName);\n\t\t}\n\t\tif (carFormData.tireFrontWidth) {\n\t\t\tsetTireFrontWidth(carFormData.tireFrontWidth);\n\t\t}\n\t\tif (carFormData.tireFrontDiameter) {\n\t\t\tsetTireFrontDiameter(carFormData.tireFrontDiameter);\n\t\t}\n\t\tif (carFormData.tireFrontRatio) {\n\t\t\tsetTireFrontRatio(carFormData.tireFrontRatio);\n\t\t}\n\t\tif (carFormData.tireRearWidth) {\n\t\t\tsetTireRearWidth(carFormData.tireRearWidth);\n\t\t}\n\t\tif (carFormData.tireRearDiameter) {\n\t\t\tsetTireRearDiameter(carFormData.tireRearDiameter);\n\t\t}\n\t\tif (carFormData.tireRearRatio) {\n\t\t\tsetTireRearRatio(carFormData.tireRearRatio);\n\t\t}\n\t\tif (carFormData.frontPressure) {\n\t\t\tsetFrontPressure(carFormData.frontPressure);\n\t\t}\n\t\tif (carFormData.rearPressure) {\n\t\t\tsetRearPressure(carFormData.rearPressure);\n\t\t}\n\t\tif (carFormData.LFCamber) {\n\t\t\tsetLFCamber(carFormData.LFCamber);\n\t\t}\n\t\tif (carFormData.RFCamber) {\n\t\t\tsetRFCamber(carFormData.RFCamber);\n\t\t}\n\t\tif (carFormData.LRCamber) {\n\t\t\tsetLRCamber(carFormData.LRCamber);\n\t\t}\n\t\tif (carFormData.RRCamber) {\n\t\t\tsetRRCamber(carFormData.RRCamber);\n\t\t}\n\t\tif (carFormData.LFCaster) {\n\t\t\tsetLFCaster(carFormData.LFCaster);\n\t\t}\n\t\tif (carFormData.RFCaster) {\n\t\t\tsetRFCaster(carFormData.RFCaster);\n\t\t}\n\t\tif (carFormData.LFToe) {\n\t\t\tsetLFToe(carFormData.LFToe);\n\t\t}\n\t\tif (carFormData.RFToe) {\n\t\t\tsetRFToe(carFormData.RFToe);\n\t\t}\n\t\tif (carFormData.frontToe) {\n\t\t\tsetfrontToe(carFormData.frontToe);\n\t\t}\n\t\tif (carFormData.LRToe) {\n\t\t\tsetLRToe(carFormData.LRToe);\n\t\t}\n\t\tif (carFormData.RRToe) {\n\t\t\tsetRRToe(carFormData.RRToe);\n\t\t}\n\t\tif (carFormData.rearToe) {\n\t\t\tsetRearToe(carFormData.rearToe);\n\t\t}\n\t\tif (carFormData.FBar) {\n\t\t\tsetFBar(carFormData.FBar);\n\t\t}\n\t\tif (carFormData.RBar) {\n\t\t\tsetRBar(carFormData.RBar);\n\t\t}\n\t\tif (carFormData.FRebound) {\n\t\t\tsetFRebound(carFormData.FRebound);\n\t\t}\n\t\tif (carFormData.RRebound) {\n\t\t\tsetRRebound(carFormData.RRebound);\n\t\t}\n\t\tif (carFormData.FCompression) {\n\t\t\tsetFCompression(carFormData.FCompression);\n\t\t}\n\t\tif (carFormData.RCompression) {\n\t\t\tsetRCompression(carFormData.RCompression);\n\t\t}\n\t\tif (carFormData.note) {\n\t\t\tsetNote(carFormData.note);\n\t\t}\n\t\tif (carFormData.image) {\n\t\t\t//setImage(carFormData.image);\n\t\t\t// setImageOK(false);\n\t\t}\n\t} else if (!initialized) {\n\t\tsetInitialized(true);\n\t\t// initialize localStorage\n\t\tcarFormData['expirationDate'] = moment(\n\t\t\tmoment().add(1, 'days'),\n\t\t\tmoment.ISO_8601\n\t\t);\n\t\tcarFormData['year'] = '';\n\t\tcarFormData['make'] = '';\n\t\tcarFormData['model'] = '';\n\t\tcarFormData['trimLevel'] = '';\n\t\tcarFormData['share'] = '';\n\t\tcarFormData['tireBrand'] = '';\n\t\tcarFormData['tireName'] = '';\n\t\tcarFormData['tireFrontWidth'] = '';\n\t\tcarFormData['tireFrontDiameter'] = '';\n\t\tcarFormData['tireFrontRatio'] = '';\n\t\tcarFormData['tireRearWidth'] = '';\n\t\tcarFormData['tireRearDiameter'] = '';\n\t\tcarFormData['tireRearRatio'] = '';\n\t\tcarFormData['frontPressure'] = '';\n\t\tcarFormData['rearPressure'] = '';\n\t\tcarFormData['LFCamber'] = '';\n\t\tcarFormData['RFCamber'] = '';\n\t\tcarFormData['LRCamber'] = '';\n\t\tcarFormData['RRCamber'] = '';\n\t\tcarFormData['LFCaster'] = '';\n\t\tcarFormData['RFCaster'] = '';\n\t\tcarFormData['LFToe'] = '';\n\t\tcarFormData['RFToe'] = '';\n\t\tcarFormData['frontToe'] = '';\n\t\tcarFormData['LRToe'] = '';\n\t\tcarFormData['RRToe'] = '';\n\t\tcarFormData['rearToe'] = '';\n\t\tcarFormData['FBar'] = '';\n\t\tcarFormData['RBar'] = '';\n\t\tcarFormData['FRebound'] = '';\n\t\tcarFormData['RRebound'] = '';\n\t\tcarFormData['FCompression'] = '';\n\t\tcarFormData['RCompression'] = '';\n\t\tcarFormData['note'] = '';\n\t\tcarFormData['image'] = undefined;\n\t\tlocalStorage.setItem('carFormData', JSON.stringify(carFormData));\n\t}\n\n\tconst removeCarFormData = () => {\n\t\tlocalStorage.removeItem('carFormData');\n\t};\n\n\tconst initialValues = {\n\t\t// editorState: new EditorState.createEmpty(),\n\t\tyear: year,\n\t\tmake: make,\n\t\tmodel: model,\n\t\ttrimLevel: trimLevel,\n\t\tshare: share,\n\t\ttireBrand: tireBrand,\n\t\ttireName: tireName,\n\t\ttireFrontWidth: tireFrontWidth,\n\t\ttireFrontRatio: tireFrontRatio,\n\t\ttireFrontDiameter: tireFrontDiameter,\n\t\ttireRearWidth: tireRearWidth,\n\t\ttireRearRatio: tireRearRatio,\n\t\ttireRearDiameter: tireRearDiameter,\n\t\tfrontPressure: frontPressure,\n\t\trearPressure: rearPressure,\n\t\tLFCamber: LFCamber,\n\t\tRFCamber: RFCamber,\n\t\tLRCamber: LRCamber,\n\t\tRRCamber: RRCamber,\n\t\tLFCaster: LFCaster,\n\t\tRFCaster: RFCaster,\n\t\tLFToe: LFToe,\n\t\tRFToe: RFToe,\n\t\tfrontToe: frontToe,\n\t\tLRToe: LRToe,\n\t\tRRToe: RRToe,\n\t\trearToe: rearToe,\n\t\tFBar: FBar,\n\t\tRBar: RBar,\n\t\tFRebound: FRebound,\n\t\tRRebound: RRebound,\n\t\tFCompression: FCompression,\n\t\tRCompression: RCompression,\n\t\tnote: note,\n\t\timage: image\n\t};\n\n\tconst updateCarFormData = (key, value) => {\n\t\tconst storageData = JSON.parse(\n\t\t\tlocalStorage.getItem('carFormData')\n\t\t);\n\t\tstorageData[key] = value;\n\t\tlocalStorage.setItem('carFormData', JSON.stringify(storageData));\n\t};\n\n\tconst history = useHistory();\n\tconst submitHandler = async (values, actions) => {\n\t\ttry {\n\t\t\tconst formData = new FormData();\n\t\t\tformData.append('year', values.year);\n\t\t\tformData.append('make', values.make);\n\t\t\tformData.append('model', values.model);\n\t\t\tformData.append('trimLevel', values.trimLevel);\n\t\t\tformData.append('share', values.share);\n\t\t\tformData.append('tireBrand', values.tireBrand);\n\t\t\tformData.append('tireName', values.tireName);\n\t\t\tformData.append('tireFrontWidth', values.tireFrontWidth);\n\t\t\tformData.append('tireFrontRatio', values.tireFrontRatio);\n\t\t\tformData.append('tireFrontDiameter', values.tireFrontDiameter);\n\t\t\tformData.append('tireRearWidth', values.tireRearWidth);\n\t\t\tformData.append('tireRearRatio', values.tireRearRatio);\n\t\t\tformData.append('tireRearDiameter', values.tireRearDiameter);\n\t\t\tformData.append('frontPressure', values.frontPressure);\n\t\t\tformData.append('rearPressure', values.rearPressure);\n\n\t\t\tformData.append('LFCamber', values.LFCamber);\n\t\t\tformData.append('RFCamber', values.RFCamber);\n\t\t\tformData.append('LRCamber', values.LRCamber);\n\t\t\tformData.append('RRCamber', values.RRCamber);\n\t\t\tformData.append('LFCaster', values.LFCaster);\n\t\t\tformData.append('RFCaster', values.RFCaster);\n\t\t\tformData.append('LFToe', values.LFToe);\n\t\t\tformData.append('RFToe', values.RFToe);\n\t\t\tformData.append('frontToe', values.frontToe);\n\t\t\tformData.append('LRToe', values.LRToe);\n\t\t\tformData.append('RRToe', values.RRToe);\n\t\t\tformData.append('rearToe', values.rearToe);\n\t\t\tformData.append('FBar', values.FBar);\n\t\t\tformData.append('RBar', values.RBar);\n\n\t\t\tformData.append('FRebound', values.FRebound);\n\t\t\tformData.append('RRebound', values.RRebound);\n\t\t\tformData.append('FCompression', values.FCompression);\n\t\t\tformData.append('RCompression', values.RCompression);\n\t\t\tformData.append('note', values.note);\n\t\t\tformData.append('carImage', values.image);\n\n\t\t\tconst [\n\t\t\t\tresponseData,\n\t\t\t\tresponseStatus,\n\t\t\t\tresponseMessage\n\t\t\t] = await sendRequest(\n\t\t\t\tprocess.env.REACT_APP_BACKEND_URL + '/cars',\n\t\t\t\t'POST',\n\t\t\t\tformData,\n\t\t\t\t{\n\t\t\t\t\t// adding JWT to header for authentication\n\t\t\t\t\tAuthorization: 'Bearer ' + userAuthContext.userToken\n\t\t\t\t}\n\t\t\t);\n\t\t\tsetOKLeavePage(true);\n\t\t\t// Redirect the club to a diffrent page\n\t\t\thistory.push(`/users/garagewrapper/${userAuthContext.userId}`);\n\t\t} catch (err) {}\n\t};\n\n\t/***** Form Validation Section  *****/\n\t// 1. Field level: Field validate={validateName}. This validates when Field is onBlur\n\t// 3. Submit: use Formik isValid to enable the button.  Formik submission will validate everything.\n\tconst [validateYear, setValidateYear] = useState(() => value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Year is required.';\n\t\t}\n\t\treturn error;\n\t});\n\n\tconst [validateMake, setValidateMake] = useState(() => value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Make is required.';\n\t\t}\n\t\treturn error;\n\t});\n\n\tconst [validateModel, setValidateModel] = useState(() => value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Model is required.';\n\t\t}\n\t\treturn error;\n\t});\n\n\tconst [validateTireBrand, setValidateTireBrand] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Tire Brand is required.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\n\tconst [validateTireName, setValidateTireName] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Tire Name is required.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\n\tconst [\n\t\tvalidateTireFrontWidth,\n\t\tsetValidateTireFrontWidth\n\t] = useState(() => value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Front Tire Width is required.';\n\t\t}\n\t\treturn error;\n\t});\n\tconst [\n\t\tvalidateTireFrontRatio,\n\t\tsetValidateTireFrontRatio\n\t] = useState(() => value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Front Tire Ratio is required.';\n\t\t}\n\t\treturn error;\n\t});\n\tconst [\n\t\tvalidateTireFrontDiameter,\n\t\tsetValidateTireFrontDiameter\n\t] = useState(() => value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Front Tire Diameter is required.';\n\t\t}\n\t\treturn error;\n\t});\n\tconst [validateTireRearWidth, setValidateTireRearWidth] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Rear Tire Width is required.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\tconst [validateTireRearRatio, setValidateTireRearRatio] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Rear Tire Ratio is required.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\tconst [\n\t\tvalidateTireRearDiameter,\n\t\tsetValidateTireRearDiameter\n\t] = useState(() => value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Rear Tire Diameter is required.';\n\t\t}\n\t\treturn error;\n\t});\n\n\tconst validateImageSize = value => {\n\t\tlet error;\n\t\tif (value && value.size > 1500000) {\n\t\t\terror = 'File size needs to be smaller than 1.5MB';\n\t\t}\n\t\treturn error;\n\t};\n\t/***** End of Form Validation *****/\n\n\tconst carForm = values => (\n\t\t<div className=\"event-form\">\n\t\t\t<div className=\"event-form-header\">\n\t\t\t\t<h4>\n\t\t\t\t\t{userName}\n\t\t\t\t\t's new car\n\t\t\t\t</h4>\n\t\t\t\t<hr className=\"event-form__hr\" />\n\t\t\t</div>\n\t\t\t<Formik\n\t\t\t\tenableReinitialize={true}\n\t\t\t\tinitialValues={initialValues}\n\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\tsubmitHandler(values);\n\t\t\t\t\tif (!actions.isSubmitting) {\n\t\t\t\t\t\tsetValidateYear(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Year is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateMake(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Make is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateModel(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Model is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateTireBrand(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Tire Brand is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateTireName(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Tire Name is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateTireFrontWidth(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Front Tire Width is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateTireFrontRatio(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Front Tire Ratio is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateTireFrontDiameter(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Front Tire Diameter is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateTireRearWidth(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Rear Tire Width is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateTireRearRatio(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Rear Tire Ratio is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateTireRearDiameter(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Rear Tire Diameter is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}}>\n\t\t\t\t{({\n\t\t\t\t\tvalues,\n\t\t\t\t\terrors,\n\t\t\t\t\tisSubmitting,\n\t\t\t\t\tisValid,\n\t\t\t\t\tsetFieldValue,\n\t\t\t\t\ttouched,\n\t\t\t\t\thandleBlur\n\t\t\t\t}) => (\n\t\t\t\t\t<Form className=\"event-form-container\">\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"year\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\t<i className=\"far fa-car-side\" />\n\t\t\t\t\t\t\t&nbsp; Year &nbsp;\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"far fa-gas-pump\"\n\t\t\t\t\t\t\t\tstyle={{ color: 'Tomato' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"make\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\tMake &nbsp;\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"far fa-gas-pump\"\n\t\t\t\t\t\t\t\tstyle={{ color: 'Tomato' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"model\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\tModel &nbsp;\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"far fa-gas-pump\"\n\t\t\t\t\t\t\t\tstyle={{ color: 'Tomato' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"trimLevel\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\tTrim\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"year\"\n\t\t\t\t\t\t\tname=\"year\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tvalidate={validateYear}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.year will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('year', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"make\"\n\t\t\t\t\t\t\tname=\"make\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tvalidate={validateMake}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.make will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('make', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"model\"\n\t\t\t\t\t\t\tname=\"model\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tvalidate={validateModel}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.model will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('model', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"trimLevel\"\n\t\t\t\t\t\t\tname=\"trimLevel\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.trimLevel will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('trimLevel', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{(touched.year ||\n\t\t\t\t\t\t\ttouched.make ||\n\t\t\t\t\t\t\ttouched.model ||\n\t\t\t\t\t\t\ttouched.trimLevel) &&\n\t\t\t\t\t\t\t(errors.year ||\n\t\t\t\t\t\t\t\terrors.make ||\n\t\t\t\t\t\t\t\terrors.model ||\n\t\t\t\t\t\t\t\terrors.trimLevel) && (\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<div className=\"event-form__field-error_quarter\">\n\t\t\t\t\t\t\t\t\t\t{errors.year}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"event-form__field-error_quarter\">\n\t\t\t\t\t\t\t\t\t\t{errors.make}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"event-form__field-error_quarter\">\n\t\t\t\t\t\t\t\t\t\t{errors.model}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"event-form__field-error_quarter\">\n\t\t\t\t\t\t\t\t\t\t{errors.trimLevel}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"tireBrand\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_half\">\n\t\t\t\t\t\t\t<i className=\"fad fa-tire\" />\n\t\t\t\t\t\t\t&nbsp; Tire Brand &nbsp;\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"far fa-gas-pump\"\n\t\t\t\t\t\t\t\tstyle={{ color: 'Tomato' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"tireName\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_half\">\n\t\t\t\t\t\t\tTire Name &nbsp;\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"far fa-gas-pump\"\n\t\t\t\t\t\t\t\tstyle={{ color: 'Tomato' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"tireBrand\"\n\t\t\t\t\t\t\tname=\"tireBrand\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_half\"\n\t\t\t\t\t\t\tvalidate={validateTireBrand}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.tireBrand will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('tireBrand', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"tireName\"\n\t\t\t\t\t\t\tname=\"tireName\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_half\"\n\t\t\t\t\t\t\tvalidate={validateTireName}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.name will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('tireName', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{(touched.tireBrand || touched.tireName) &&\n\t\t\t\t\t\t\t(errors.tireBrand || errors.tireName) && (\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<div className=\"event-form__field-error_half\">\n\t\t\t\t\t\t\t\t\t\t{errors.tireBrand}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"event-form__field-error_half\">\n\t\t\t\t\t\t\t\t\t\t{errors.tireName}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"tireFrontWidth\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\t<i className=\"far fa-ruler-horizontal\" />\n\t\t\t\t\t\t\t&nbsp; Front Tire Width &nbsp;\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"far fa-gas-pump\"\n\t\t\t\t\t\t\t\tstyle={{ color: 'Tomato' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"tireFrontRatio\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\tFront Tire Ratio &nbsp;\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"far fa-gas-pump\"\n\t\t\t\t\t\t\t\tstyle={{ color: 'Tomato' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"tireFrontDiameter\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\tFront Tire Diameter &nbsp;\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"far fa-gas-pump\"\n\t\t\t\t\t\t\t\tstyle={{ color: 'Tomato' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"tireFrontWidth\"\n\t\t\t\t\t\t\tname=\"tireFrontWidth\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tvalidate={validateTireFrontWidth}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.tireFrontWidth will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData(\n\t\t\t\t\t\t\t\t\t'tireFrontWidth',\n\t\t\t\t\t\t\t\t\tevent.target.value\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"tireFrontRatio\"\n\t\t\t\t\t\t\tname=\"tireFrontRatio\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tvalidate={validateTireFrontRatio}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.tireFrontRatio will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData(\n\t\t\t\t\t\t\t\t\t'tireFrontRatio',\n\t\t\t\t\t\t\t\t\tevent.target.value\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"tireFrontDiameter\"\n\t\t\t\t\t\t\tname=\"tireFrontDiameter\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tvalidate={validateTireFrontDiameter}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.tireFrontDiameter will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData(\n\t\t\t\t\t\t\t\t\t'tireFrontDiameter',\n\t\t\t\t\t\t\t\t\tevent.target.value\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{(touched.tireFrontWidth ||\n\t\t\t\t\t\t\ttouched.tireFrontRatio ||\n\t\t\t\t\t\t\ttouched.tireFrontDiameter) &&\n\t\t\t\t\t\t\t(errors.tireFrontWidth ||\n\t\t\t\t\t\t\t\terrors.tireFrontRatio ||\n\t\t\t\t\t\t\t\terrors.tireFrontDiameter) && (\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<div className=\"event-form__field-error_third\">\n\t\t\t\t\t\t\t\t\t\t{errors.tireFrontWidth}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"event-form__field-error_third\">\n\t\t\t\t\t\t\t\t\t\t{errors.tireFrontRatio}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"event-form__field-error_third\">\n\t\t\t\t\t\t\t\t\t\t{errors.tireFrontDiameter}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"tireRearWidth\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\t<i className=\"far fa-ruler-horizontal\" />\n\t\t\t\t\t\t\t&nbsp; Rear Tire Width &nbsp;\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"far fa-gas-pump\"\n\t\t\t\t\t\t\t\tstyle={{ color: 'Tomato' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"tireRearRatio\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\tRear Tire Ratio &nbsp;\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"far fa-gas-pump\"\n\t\t\t\t\t\t\t\tstyle={{ color: 'Tomato' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"tireRearDiameter\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\tRear Tire Diameter &nbsp;\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"far fa-gas-pump\"\n\t\t\t\t\t\t\t\tstyle={{ color: 'Tomato' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"tireRearWidth\"\n\t\t\t\t\t\t\tname=\"tireRearWidth\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tvalidate={validateTireRearWidth}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.tireRearWidth will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData(\n\t\t\t\t\t\t\t\t\t'tireRearWidth',\n\t\t\t\t\t\t\t\t\tevent.target.value\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"tireRearRatio\"\n\t\t\t\t\t\t\tname=\"tireRearRatio\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tvalidate={validateTireRearRatio}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.tireRearRatio will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData(\n\t\t\t\t\t\t\t\t\t'tireRearRatio',\n\t\t\t\t\t\t\t\t\tevent.target.value\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"tireRearDiameter\"\n\t\t\t\t\t\t\tname=\"tireRearDiameter\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tvalidate={validateTireRearDiameter}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.tireRearDiameter will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData(\n\t\t\t\t\t\t\t\t\t'tireRearDiameter',\n\t\t\t\t\t\t\t\t\tevent.target.value\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{(touched.tireRearWidth ||\n\t\t\t\t\t\t\ttouched.tireRearRatio ||\n\t\t\t\t\t\t\ttouched.tireRearDiameter) &&\n\t\t\t\t\t\t\t(errors.tireRearWidth ||\n\t\t\t\t\t\t\t\terrors.tireRearRatio ||\n\t\t\t\t\t\t\t\terrors.tireRearDiameter) && (\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<div className=\"event-form__field-error_third\">\n\t\t\t\t\t\t\t\t\t\t{errors.tireRearWidth}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"event-form__field-error_third\">\n\t\t\t\t\t\t\t\t\t\t{errors.tireRearRatio}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"event-form__field-error_third\">\n\t\t\t\t\t\t\t\t\t\t{errors.tireRearDiameter}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t{/* This first checkbox will result in a boolean value being stored. Note that the `value` prop\n\t\t\t\t\t            \t\t\t\ton the <Field/> is omitted */}\n\t\t\t\t\t\t<label className=\"event-form__checkbox\">\n\t\t\t\t\t\t\t<Field type=\"checkbox\" name=\"share\" />\n\t\t\t\t\t\t\t{/* {`${values.share}`} */} &nbsp; Check if you want to\n\t\t\t\t\t\t\tmake the following information visible to public\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"frontPressure\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_half\">\n\t\t\t\t\t\t\t<i className=\"fal fa-tire-pressure-warning\" />\n\t\t\t\t\t\t\t&nbsp; Front Tire Pressure psi\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"rearPressure\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_half\">\n\t\t\t\t\t\t\tRear Tire Pressure psi\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"frontPressure\"\n\t\t\t\t\t\t\tname=\"frontPressure\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_half\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.frontPressure will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData(\n\t\t\t\t\t\t\t\t\t'frontPressure',\n\t\t\t\t\t\t\t\t\tevent.target.value\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.frontPressure && errors.frontPressure && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.frontPressure}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"rearPressure\"\n\t\t\t\t\t\t\tname=\"rearPressure\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_half\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.rearPressure will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('rearPressure', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.rearPressure && errors.rearPressure && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.rearPressure}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"LFCamber\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\t<i className=\"fal fa-ruler-triangle fa-rotate-90\" />\n\t\t\t\t\t\t\t&nbsp; Left Front Camber &#x00B0;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"RFCamber\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\tRight Front Camber &#x00B0;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"LRCamber\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\tLeft Rear Camber &#x00B0;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"RRCamber\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\tRight Rear Camber &#x00B0;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"LFCamber\"\n\t\t\t\t\t\t\tname=\"LFCamber\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.LFCamber will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('LFCamber', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.LFCamber && errors.LFCamber && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.LFCamber}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"RFCamber\"\n\t\t\t\t\t\t\tname=\"RFCamber\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.RFCamber will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('RFCamber', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.RFCamber && errors.RFCamber && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.RFCamber}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"LRCamber\"\n\t\t\t\t\t\t\tname=\"LRCamber\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.LRCamber will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('LRCamber', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.LRCamber && errors.LRCamber && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.LRCamber}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"RRCamber\"\n\t\t\t\t\t\t\tname=\"RRCamber\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.RRCamber will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('RRCamber', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.RRCamber && errors.RRCamber && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.RRCamber}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"LFCaster\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_half\">\n\t\t\t\t\t\t\t<i className=\"fal fa-starfighter-alt\" />\n\t\t\t\t\t\t\t&nbsp; Left Front Caster &#x00B0;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"RFCaster\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_half\">\n\t\t\t\t\t\t\tRight Front Caster &#x00B0;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"LFCaster\"\n\t\t\t\t\t\t\tname=\"LFCaster\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_half\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.LFCaster will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('LFCaster', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.LFCaster && errors.LFCaster && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.LFCaster}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"RFCaster\"\n\t\t\t\t\t\t\tname=\"RFCaster\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_half\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.RFCaster will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('RFCaster', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.RFCaster && errors.RFCaster && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.RFCaster}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"LFToe\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\t<i className=\"far fa-steering-wheel \" />\n\t\t\t\t\t\t\t&nbsp; Left Front Toe &#x2033;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"RFToe\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\tRight Front Toe &#x2033;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"frontToe\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\tFront Toe &#x2033;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"LFToe\"\n\t\t\t\t\t\t\tname=\"LFToe\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.LFToe will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('LFToe', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"RFToe\"\n\t\t\t\t\t\t\tname=\"RFToe\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.RFToe will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('RFToe', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"frontToe\"\n\t\t\t\t\t\t\tname=\"frontToe\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.frontToe will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('frontToe', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.LFToe && errors.LFToe && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.LFToe}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{touched.RFToe && errors.RFToe && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.RFToe}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{touched.frontToe && errors.frontToe && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.frontToe}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"LRToe\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\t<i className=\"far fa-steering-wheel\" />\n\t\t\t\t\t\t\t&nbsp; Left Rear Toe &#x2033;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"RRToe\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\tRight Rear Toe &#x2033;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"rearToe\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\tRear Toe &#x2033;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"LRToe\"\n\t\t\t\t\t\t\tname=\"LRToe\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.LRToe will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('LRToe', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"RRToe\"\n\t\t\t\t\t\t\tname=\"RRToe\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.RRToe will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('RRToe', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"rearToe\"\n\t\t\t\t\t\t\tname=\"rearToe\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.rearToe will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('rearToe', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.LRToe && errors.LRToe && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.LRToe}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{touched.RRToe && errors.RRToe && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.RRToe}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{touched.rearToe && errors.rearToe && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.rearToe}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"FBar\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_half\">\n\t\t\t\t\t\t\t<i className=\"fas fa-line-height fa-rotate-270\" />\n\t\t\t\t\t\t\t&nbsp; Front Sway Bar\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"RBar\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_half\">\n\t\t\t\t\t\t\tRear Sway Bar\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"FBar\"\n\t\t\t\t\t\t\tname=\"FBar\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_half\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.FBar will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('FBar', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.FBar && errors.FBar && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.FBar}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"RBar\"\n\t\t\t\t\t\t\tname=\"RBar\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_half\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.RBar will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('RBar', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.RBar && errors.RBar && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.RBar}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"FRebound\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\t<i className=\"far fa-sort-numeric-up-alt\" />\n\t\t\t\t\t\t\t&nbsp; Front Rebound\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"RRebound\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\tRear Rebound\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"FCompression\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\tFront Compression\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"RCompression\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\tRear Compression\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"FRebound\"\n\t\t\t\t\t\t\tname=\"FRebound\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.FRebound will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('FRebound', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.FRebound && errors.FRebound && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.FRebound}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"RRebound\"\n\t\t\t\t\t\t\tname=\"RRebound\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.RRebound will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('RRebound', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.RRebound && errors.RRebound && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.RRebound}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"FCompression\"\n\t\t\t\t\t\t\tname=\"FCompression\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.FCompression will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('FCompression', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.FCompression && errors.FCompression && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.FCompression}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"RCompression\"\n\t\t\t\t\t\t\tname=\"RCompression\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.RCompression will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('RCompression', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.RCompression && errors.RCompression && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.RCompression}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label htmlFor=\"note\" className=\"event-form__label\">\n\t\t\t\t\t\t\t<i className=\"far fa-sticky-note\" />\n\t\t\t\t\t\t\t&nbsp; Note(max: 350 characters)\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"note\"\n\t\t\t\t\t\t\tname=\"note\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tcomponent=\"textarea\"\n\t\t\t\t\t\t\trows=\"5\"\n\t\t\t\t\t\t\tcols=\"70\"\n\t\t\t\t\t\t\tmaxLength=\"350\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_textarea\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.note will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('note', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.note && errors.note && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.note}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"image\"\n\t\t\t\t\t\t\tname=\"image\"\n\t\t\t\t\t\t\ttitle=\"image\"\n\t\t\t\t\t\t\tcomponent={ImageUploader}\n\t\t\t\t\t\t\tvalidate={validateImageSize}\n\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\n\t\t\t\t\t\t\terrorMessage={errors.image ? errors.image : ''}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\t// if (event.target.value) {\n\t\t\t\t\t\t\t\t// \tsetImageOK(false);\n\t\t\t\t\t\t\t\t// } else {\n\t\t\t\t\t\t\t\t// \tsetImageOK(true);\n\t\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tlabelStyle=\"event-form__label\"\n\t\t\t\t\t\t\tinputStyle=\"event-form__field-select\"\n\t\t\t\t\t\t\tpreviewStyle=\"image-upload__preview\"\n\t\t\t\t\t\t\terrorStyle=\"event-form__field-error\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\tmargin-left=\"1.5rem\"\n\t\t\t\t\t\t\tdisabled={isSubmitting || !isValid}>\n\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<NavigationPrompt\n\t\t\t\t\t\t\tafterConfirm={() => {\n\t\t\t\t\t\t\t\tformContext.setIsInsideForm(false);\n\t\t\t\t\t\t\t\tremoveCarFormData();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t// Confirm navigation if going to a path that does not start with current path.\n\t\t\t\t\t\t\t// We don't want to confirm navigation when OKLeavePage === true and redirect to '/users/auth' due to\n\t\t\t\t\t\t\t// authentication issue\n\t\t\t\t\t\t\twhen={(crntLocation, nextLocation) => {\n\t\t\t\t\t\t\t\t// remove UserRedirectURL from memory\n\t\t\t\t\t\t\t\tuserAuthContext.setUserRedirectURL(null);\n\t\t\t\t\t\t\t\t// OKLeavePage meaning form was not touched yet\n\t\t\t\t\t\t\t\tif (OKLeavePage) {\n\t\t\t\t\t\t\t\t\tformContext.setIsInsideForm(false);\n\t\t\t\t\t\t\t\t\tremoveCarFormData();\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// nextLocation.pathname !== '/users/auth' &&  --- adding this line causing state update on an\n\t\t\t\t\t\t\t\t\t// unmounted component issue.  Without it, confirmation modal will pop up\n\t\t\t\t\t\t\t\t\t// always gives the warning, because we want to be able to\n\t\t\t\t\t\t\t\t\t// clear localStorage after confirm\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t!nextLocation ||\n\t\t\t\t\t\t\t\t\t\t!nextLocation.pathname.startsWith(\n\t\t\t\t\t\t\t\t\t\t\tcrntLocation.pathname\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t{({ isActive, onCancel, onConfirm }) => {\n\t\t\t\t\t\t\t\tif (isActive) {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<PromptModal\n\t\t\t\t\t\t\t\t\t\t\tonCancel={onCancel}\n\t\t\t\t\t\t\t\t\t\t\tonConfirm={onConfirm}\n\t\t\t\t\t\t\t\t\t\t\tcontentClass=\"event-item__modal-content\"\n\t\t\t\t\t\t\t\t\t\t\tfooterClass=\"event-item__modal-actions\"\n\t\t\t\t\t\t\t\t\t\t\terror=\"You sure want to leave? Unsaved data will be lost.\">\n\t\t\t\t\t\t\t\t\t\t\t{/* render props.children */}\n\t\t\t\t\t\t\t\t\t\t</PromptModal>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\tThis is probably an anti-pattern but ya know...\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t</NavigationPrompt>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t{isLoading && (\n\t\t\t\t<div className=\"center\">\n\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{carForm()}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default NewCar;\n",["601","602"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/hooks/clubLoginValidation-hook.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/components/EditEventItem.js",[],["603","604"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/entryDashboard/pages/EventWaiver.js",["605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/Navigation/NavLinks.js",["623","624"],"import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport {\n\tClubAuthContext,\n\tUserAuthContext\n} from '../../context/auth-context';\nimport { FormContext } from '../../context/form-context';\nimport { useLogOut } from '../../hooks/logout-hook';\nimport ErrorModal from '../UIElements/ErrorModal';\nimport LoadingSpinner from '../UIElements/LoadingSpinner';\n\nimport './NavLinks.css';\n\nconst NavLinks = props => {\n\t/* ----- Club Section ----- */\n\tconst clubAuthContext = useContext(ClubAuthContext);\n\tconst clubLoggedIn = clubAuthContext.isClubLoggedIn;\n\tlet cid = clubAuthContext.clubId;\n\n\t// check if we are inside a form page, we want to disable LOGOUT button\n\t// to avoid race condition between existing form page and logout handler\n\tconst formContext = useContext(FormContext);\n\tconst isInsideForm = formContext.isInsideForm;\n\n\t/* ----- User Section ----- */\n\tconst userAuthContext = useContext(UserAuthContext);\n\tconst userLoggedIn = userAuthContext.isUserLoggedIn;\n\tlet uId = userAuthContext.userId;\n\n\tconst { isLoading, error, logoutHandler, clearError } = useLogOut();\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t<ul className=\"nav-links\">\n\t\t\t\t{/* Make clubManager the entry page of Dashboard  */}\n\t\t\t\t{clubLoggedIn && (\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<NavLink to={`/clubs/clubManager`} exact>\n\t\t\t\t\t\t\tDASHBOARD\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t</li>\n\t\t\t\t)}\n\t\t\t\t{!clubLoggedIn && !userLoggedIn && (\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<NavLink to=\"/users/auth\" exact>\n\t\t\t\t\t\t\tDriver Login\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t</li>\n\t\t\t\t)}\n\t\t\t\t{!clubLoggedIn && !userLoggedIn && (\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<NavLink to=\"/clubs/auth\" exact>\n\t\t\t\t\t\t\tClub Login\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t</li>\n\t\t\t\t)}\n\t\t\t\t{/* {clubLoggedIn && !isInsideForm && ( */}\n\t\t\t\t{clubLoggedIn && (\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<button onClick={logoutHandler}>LOGOUT</button>\n\t\t\t\t\t\t{isLoading && <LoadingSpinner asOverlay />}\n\t\t\t\t\t</li>\n\t\t\t\t)}\n\t\t\t\t{/********* user section *******/}\n\t\t\t\t{userLoggedIn && (\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<NavLink to={`/users/events/${uId}`} exact>\n\t\t\t\t\t\t\tMy EVENTS\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t</li>\n\t\t\t\t)}\n\t\t\t\t{userLoggedIn && (\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<NavLink to={`/users/garagewrapper/${uId}`} exact>\n\t\t\t\t\t\t\tMy Garage\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t</li>\n\t\t\t\t)}\n\t\t\t\t{userLoggedIn && (\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<NavLink to={'/users/cars/new'} exact>\n\t\t\t\t\t\t\tAdd Car\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t</li>\n\t\t\t\t)}\n\t\t\t\t{userLoggedIn && (\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<button onClick={logoutHandler}>LOGOUT</button>\n\t\t\t\t\t\t{isLoading && <LoadingSpinner asOverlay />}\n\t\t\t\t\t</li>\n\t\t\t\t)}\n\t\t\t</ul>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default NavLinks;\n",["625","626"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/entryDashboard/pages/Classification.js",["627"],"import React, { useContext, useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Field, Form, Formik } from 'formik';\nimport moment from 'moment';\nimport NavigationPrompt from 'react-router-navigation-prompt';\n\n// import { EditorState } from 'draft-js';\n// import { RichEditorExample } from '../components/RichEditor';\nimport 'draft-js/dist/Draft.css';\n\nimport Button from '../../shared/components/FormElements/Button';\nimport PromptModal from '../../shared/components/UIElements/PromptModal';\nimport { UserAuthContext } from '../../shared/context/auth-context';\nimport { FormContext } from '../../shared/context/form-context';\n\nimport '../../shared/css/EventForm.css';\n\nconst Classification = props => {\n\tconst [initialized, setInitialized] = useState(false);\n\tconst userAuthContext = useContext(UserAuthContext);\n\tconst formContext = useContext(FormContext);\n\n\t// continueStatus controls when to return props.newEventStatus back to NewEventManager\n\tconst [continueStatus, setContinueStatus] = useState(false);\n\tconst [formValues, setFormValues] = useState();\n\n\t// this is the return function that passes finishing status back to NewEventManager\n\tuseEffect(() => {\n\t\tif (continueStatus) {\n\t\t\tprops.classificationStatus(continueStatus);\n\t\t\tif (formValues !== undefined && formValues) {\n\t\t\t\tprops.carNumberHandler(formValues.carNumber);\n\t\t\t\t// props.raceClassHandler(formValues.raceClass);\n\t\t\t}\n\t\t}\n\t}, [continueStatus, props, formValues]);\n\n\tuseEffect(() => {\n\t\tlet mounted = true;\n\t\tif (mounted) {\n\t\t\tformContext.setIsInsideForm(true);\n\t\t}\n\t\treturn () => {\n\t\t\tmounted = false;\n\t\t};\n\t}, [formContext]);\n\n\t// If we are re-directing to this page, we want to clear up clubRedirectURL\n\tlet location = useLocation();\n\tReact.useEffect(() => {\n\t\tlet path = location.pathname;\n\t\tlet userRedirectURL = userAuthContext.userRedirectURL;\n\t\tif (path === userRedirectURL) {\n\t\t\t// re-init redirectURL after re-direction route\n\t\t\tuserAuthContext.setUserRedirectURL(null);\n\t\t}\n\t}, [location, userAuthContext]);\n\n\tconst [carNumber, setCarNumber] = useState('');\n\t// const [raceClass, setRaceClass] = useState('');\n\n\t// initialize local storage\n\t// Get the existing data\n\tvar eventFormData = localStorage.getItem('eventFormData');\n\n\t// If no existing data, create an array; otherwise retrieve it\n\teventFormData = eventFormData ? JSON.parse(eventFormData) : {};\n\n\tconst [OKLeavePage, setOKLeavePage] = useState(true);\n\t// local storage gets the higest priority\n\t// get from localStorage\n\tif (\n\t\t!initialized &&\n\t\teventFormData &&\n\t\tmoment(eventFormData.expirationDate) > moment()\n\t) {\n\t\tsetInitialized(true);\n\t\t// Form data\n\t\tif (eventFormData.carNumber) {\n\t\t\tsetCarNumber(eventFormData.carNumber);\n\t\t}\n\t\t// if (eventFormData.raceClass) {\n\t\t// \tsetRaceClass(eventFormData.raceClass);\n\t\t// }\n\t} else if (!initialized) {\n\t\tsetInitialized(true);\n\t\t// initialize localStorage\n\t\teventFormData['expirationDate'] = moment(\n\t\t\tmoment().add(1, 'days'),\n\t\t\tmoment.ISO_8601\n\t\t);\n\t\teventFormData['carNumber'] = '';\n\t\teventFormData['raceGroup'] = '';\n\t\tlocalStorage.setItem(\n\t\t\t'eventFormData',\n\t\t\tJSON.stringify(eventFormData)\n\t\t);\n\t}\n\n\tconst removeEventFormData = () => {\n\t\tlocalStorage.removeItem('eventFormData');\n\t};\n\n\tconst initialValues = {\n\t\tcarNumber: carNumber\n\t\t// raceClass: raceClass\n\t};\n\n\tconst updateEventFormData = (key, value) => {\n\t\tconst storageData = JSON.parse(\n\t\t\tlocalStorage.getItem('eventFormData')\n\t\t);\n\t\tstorageData[key] = value;\n\t\tlocalStorage.setItem(\n\t\t\t'eventFormData',\n\t\t\tJSON.stringify(storageData)\n\t\t);\n\t};\n\n\t/***** Form Validation Section  *****/\n\tconst [validateCarNumber, setValidateCarNumber] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Car number is required.';\n\t\t\t}\n\t\t\tlet numVal = parseInt(value);\n\t\t\tif (isNaN(numVal)) {\n\t\t\t\terror = 'Please inputer a number.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\n\t// const [validateRaceClass, setValidateRaceClass] = useState(\n\t// \t() => value => {\n\t// \t\tlet error;\n\t// \t\tif (!value) {\n\t// \t\t\terror = 'Club member # is required.';\n\t// \t\t}\n\t// \t\treturn error;\n\t// \t}\n\t// );\n\t/***** End of Form Validation *****/\n\n\tconst submitHandler = values => {\n\t\t// return back to NewEntryManager\n\t\tsetContinueStatus(true);\n\t\tsetFormValues(values);\n\t};\n\n\tconst eventForm = values => (\n\t\t<div className=\"event-form\">\n\t\t\t<div className=\"event-form-header\">\n\t\t\t\t<h4>Car Number</h4>\n\t\t\t\t<h5>&nbsp;All fields are required</h5>\n\t\t\t\t<hr className=\"event-form__hr\" />\n\t\t\t</div>\n\t\t\t<Formik\n\t\t\t\tenableReinitialize={true}\n\t\t\t\tinitialValues={initialValues}\n\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\tsubmitHandler(values);\n\t\t\t\t}}>\n\t\t\t\t{({\n\t\t\t\t\tvalues,\n\t\t\t\t\terrors,\n\t\t\t\t\tisSubmitting,\n\t\t\t\t\tisValid,\n\t\t\t\t\tsetFieldValue,\n\t\t\t\t\tsubmitted,\n\t\t\t\t\ttouched,\n\t\t\t\t\thandleBlur\n\t\t\t\t}) => (\n\t\t\t\t\t<Form className=\"event-form-container\">\n\t\t\t\t\t\t<label htmlFor=\"carNumber\" className=\"event-form__label\">\n\t\t\t\t\t\t\t<i className=\"fal fa-question-circle\"></i>\n\t\t\t\t\t\t\t&nbsp; Car Number\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"carNumber\"\n\t\t\t\t\t\t\tname=\"carNumber\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tvalidate={validateCarNumber}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.name will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateEventFormData('carNumber', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.carNumber && errors.carNumber && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error_quarter\">\n\t\t\t\t\t\t\t\t{errors.carNumber}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{/* <label htmlFor=\"numGroups\" className=\"event-form__label\">\n\t\t\t\t\t\t\t<i className=\"fal fa-address-card\"></i>\n\t\t\t\t\t\t\t&nbsp; Race class\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"raceClass\"\n\t\t\t\t\t\t\tname=\"raceClass\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tvalidate={validateRaceClass}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateEventFormData('raceClass', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}></Field>\n\t\t\t\t\t\t{touched.raceClass && errors.raceClass && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error_quarter\">\n\t\t\t\t\t\t\t\t{errors.raceClass}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)} */}\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tsize=\"small-block\"\n\t\t\t\t\t\t\tmargin-left=\"1.5rem\"\n\t\t\t\t\t\t\tdisabled={isSubmitting || !isValid}>\n\t\t\t\t\t\t\tSAVE &amp; CONTINUE\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<NavigationPrompt\n\t\t\t\t\t\t\tafterConfirm={() => {\n\t\t\t\t\t\t\t\tformContext.setIsInsideForm(false);\n\t\t\t\t\t\t\t\tremoveEventFormData();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t// Confirm navigation if going to a path that does not start with current path.\n\t\t\t\t\t\t\t// We don't want to confirm navigation when OKLeavePage === true and redirect to '/clubs/auth' due to\n\t\t\t\t\t\t\t// authentication issue\n\t\t\t\t\t\t\twhen={(crntLocation, nextLocation) => {\n\t\t\t\t\t\t\t\t// remove UserRedirectURL from memory\n\t\t\t\t\t\t\t\tuserAuthContext.setUserRedirectURL(null);\n\t\t\t\t\t\t\t\t// OKLeavePage meaning form was not touched yet\n\t\t\t\t\t\t\t\tif (OKLeavePage) {\n\t\t\t\t\t\t\t\t\tformContext.setIsInsideForm(false);\n\t\t\t\t\t\t\t\t\tremoveEventFormData();\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// nextLocation.pathname !== '/clubs/auth' &&  --- adding this line causing state update on an\n\t\t\t\t\t\t\t\t\t// unmounted component issue.  Without it, confirmation modal will pop up\n\t\t\t\t\t\t\t\t\t// always gives the warning, because we want to be able to\n\t\t\t\t\t\t\t\t\t// clear localStorage after confirm\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t!nextLocation ||\n\t\t\t\t\t\t\t\t\t\t!nextLocation.pathname.startsWith(\n\t\t\t\t\t\t\t\t\t\t\tcrntLocation.pathname\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t{({ isActive, onCancel, onConfirm }) => {\n\t\t\t\t\t\t\t\tif (isActive) {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<PromptModal\n\t\t\t\t\t\t\t\t\t\t\tonCancel={onCancel}\n\t\t\t\t\t\t\t\t\t\t\tonConfirm={onConfirm}\n\t\t\t\t\t\t\t\t\t\t\tcontentclassName=\"event-item__modal-content\"\n\t\t\t\t\t\t\t\t\t\t\tfooterclassName=\"event-item__modal-actions\"\n\t\t\t\t\t\t\t\t\t\t\terror=\"You sure want to leave? Unsaved data will be lost.\">\n\t\t\t\t\t\t\t\t\t\t\t{/* render props.children */}\n\t\t\t\t\t\t\t\t\t\t</PromptModal>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\tThis is probably an anti-pattern but ya know...\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t</NavigationPrompt>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t</div>\n\t);\n\n\treturn <React.Fragment>{eventForm()}</React.Fragment>;\n};\n\nexport default Classification;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/UIElements/Map.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubs/components/ClubItem.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/form.jsx",["628","629","630"],"import React, { useContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useParams } from 'react-router-dom';\n\nimport Button from '../../shared/components/FormElements/Button';\nimport { EventEmitter } from 'fbemitter';\nimport FormValidator from './form-validator';\nimport FormElements from './form-elements';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\n\nimport '../scss/form-builder-form.scss';\n\nimport { UserAuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n/**\n * <Form /> component. We will call it FormBuilderGenerator\n */\n\nconst {\n\tImage,\n\tCheckboxes,\n\tSignature,\n\tDownload,\n\tCamera,\n\tParagraphCheckbox,\n\tMultipleRadioButtonGroup\n} = FormElements;\n\n// This is the technique used to call hook in the class using Render Props.\n// https://hellocode.dev/using-hooks-with-classes#render-props\n// Make a wrapper function to wrap useHttpClient returns the logics from useHttpClient()\n// Later, in render code, we create <HookWrapper /> component and call its props function.\nfunction HookWrapper({ children }) {\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\n\tconst userAuthContext = useContext(UserAuthContext);\n\tconst userToken = userAuthContext.userToken;\n\tconst eventId = useParams().id;\n\treturn children({\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError,\n\t\tuserToken,\n\t\teventId\n\t});\n}\n\nexport default class ReactForm extends React.Component {\n\tform;\n\n\t// private variable section\n\tinputs = {};\n\tanswerData;\n\t// we will assign sendRequest() to sendRQ\n\tsendRQ;\n\tuserToken;\n\teventId;\n\tfullMessage;\n\t// end of private variable section\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.answerData = this._convert(props.answer_data);\n\t\tthis.emitter = new EventEmitter();\n\t\tthis.entryId = props.entryId;\n\t\tthis.editingMode = props.editingMode;\n\t\t// this.getNewEntry = newEntry => {\n\t\t// \tconsole.log('75 newEntry = ', newEntry);\n\t\t// \tprops.getNewEntry(newEntry);\n\t\t// };\n\t}\n\n\tgetNewEntry(newEntry) {\n\t\tconsole.log('75 newEntry = ', newEntry);\n\t\tthis.props.getNewEntry(newEntry);\n\t}\n\n\t// convert provided answers\n\t_convert(answers) {\n\t\tconsole.log('_convert ');\n\t\tif (Array.isArray(answers)) {\n\t\t\tconst result = {};\n\t\t\tanswers.forEach(x => {\n\t\t\t\tif (x.name.indexOf('tags_') > -1) {\n\t\t\t\t\tresult[x.name] = x.value.map(y => y.value);\n\t\t\t\t} else {\n\t\t\t\t\tresult[x.name] = x.value;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn result;\n\t\t}\n\t\treturn answers;\n\t}\n\n\t_getDefaultValue(item) {\n\t\tconsole.log('_getDefaultValue ');\n\t\tif (item.field_name && this.answerData) {\n\t\t\treturn this.answerData[item.field_name];\n\t\t}\n\t\treturn null;\n\t}\n\n\t// get default values for Checkboxes and Paragraphcheckbox\n\t_optionsDefaultValue(item) {\n\t\tconsole.log('_optionsDefaultValue ');\n\t\tconst defaultValue = this._getDefaultValue(item);\n\t\tif (defaultValue) {\n\t\t\treturn defaultValue;\n\t\t}\n\n\t\tconst defaultChecked = [];\n\t\titem.options.forEach(option => {\n\t\t\tif (\n\t\t\t\tthis.answerData &&\n\t\t\t\tthis.answerData[`option_${option.key}`]\n\t\t\t) {\n\t\t\t\tdefaultChecked.push(option.key);\n\t\t\t}\n\t\t});\n\t\treturn defaultChecked;\n\t}\n\n\t_getItemValue(item, ref) {\n\t\tconsole.log('_getItemValue ');\n\t\tlet $item = {\n\t\t\telement: item.element,\n\t\t\tvalue: ''\n\t\t};\n\t\tif (item.element === 'Rating') {\n\t\t\t$item.value = ref.inputField.current.state.rating;\n\t\t} else if (item.element === 'Tags') {\n\t\t\t$item.value = ref.inputField.current.state.value;\n\t\t} else if (item.element === 'DatePicker') {\n\t\t\t$item.value = ref.state.value;\n\t\t} else if (item.element === 'Camera') {\n\t\t\t$item.value = ref.state.img\n\t\t\t\t? ref.state.img.replace('data:image/png;base64,', '')\n\t\t\t\t: '';\n\t\t} else if (ref && ref.inputField) {\n\t\t\tconsole.log('I am in ref & ref.inputField');\n\t\t\t$item = ReactDOM.findDOMNode(ref.inputField.current);\n\t\t\tif (typeof $item.value === 'string') {\n\t\t\t\t$item.value = $item.value.trim();\n\t\t\t}\n\t\t}\n\t\treturn $item;\n\t}\n\n\t_isIncorrect(item) {\n\t\tconsole.log('_isIncorrect ');\n\t\tlet incorrect = false;\n\t\tif (item.canHaveAnswer) {\n\t\t\tconst ref = this.inputs[item.field_name];\n\t\t\tif (\n\t\t\t\titem.element === 'Checkboxes' ||\n\t\t\t\titem.element === 'RadioButtons' ||\n\t\t\t\titem.element === 'ParagraphCheckbox' ||\n\t\t\t\titem.element === 'MultipleRadionButtonGroup'\n\t\t\t) {\n\t\t\t\titem.options.forEach(option => {\n\t\t\t\t\tconst $option = ReactDOM.findDOMNode(\n\t\t\t\t\t\tref.options[`child_ref_${option.key}`]\n\t\t\t\t\t);\n\t\t\t\t\tif (\n\t\t\t\t\t\t(option.hasOwnProperty('correct') && !$option.checked) ||\n\t\t\t\t\t\t(!option.hasOwnProperty('correct') && $option.checked)\n\t\t\t\t\t) {\n\t\t\t\t\t\tincorrect = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconst $item = this._getItemValue(item, ref);\n\t\t\t\tif (item.element === 'Rating') {\n\t\t\t\t\tif ($item.value.toString() !== item.correct) {\n\t\t\t\t\t\tincorrect = true;\n\t\t\t\t\t}\n\t\t\t\t} else if (\n\t\t\t\t\t$item.value.toLowerCase() !==\n\t\t\t\t\titem.correct.trim().toLowerCase()\n\t\t\t\t) {\n\t\t\t\t\tincorrect = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn incorrect;\n\t}\n\n\t_isInvalid(item) {\n\t\tlet invalid = false;\n\t\tif (item.required === true) {\n\t\t\tif (\n\t\t\t\titem.element === 'Checkboxes' ||\n\t\t\t\titem.element === 'RadioButtons' ||\n\t\t\t\titem.element === 'ParagraphCheckbox'\n\t\t\t) {\n\t\t\t\tconst ref = this.inputs[item.field_name];\n\t\t\t\tlet checked_options = 0;\n\t\t\t\titem.options.forEach(option => {\n\t\t\t\t\tconst $option = ReactDOM.findDOMNode(\n\t\t\t\t\t\tref.options[`child_ref_${option.key}`]\n\t\t\t\t\t);\n\t\t\t\t\tif ($option.checked) {\n\t\t\t\t\t\tchecked_options += 1;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (checked_options < 1) {\n\t\t\t\t\t// errors.push(item.label + ' is required!');\n\t\t\t\t\tinvalid = true;\n\t\t\t\t}\n\t\t\t} else if (item.element === 'MultipleRadioButtonGroup') {\n\t\t\t\tconsole.log(\n\t\t\t\t\t'MultipleRadioButtonGroup this.inputs = ',\n\t\t\t\t\tthis.inputs\n\t\t\t\t);\n\t\t\t\tconsole.log('item = ', item);\n\n\t\t\t\t// ***** HACK ****** //\n\t\t\t\t// Becuase we don't have a field_name for parent Group,  so\n\t\t\t\t// we use item.options[0].field_name to get information.\n\t\t\t\t// group is the MultipleRadioButtonGroup not the child option\n\t\t\t\tlet group = this.inputs[item.options[0].field_name];\n\t\t\t\tconsole.log('group = ', group);\n\n\t\t\t\t// group.options contains all the children RadioButtons choices\n\t\t\t\t// group.props.data.options has RadioButons\n\t\t\t\t// 1. Get each RadioButtons with its ref of choice options\n\t\t\t\t//    The way to get ref of choices is to get the key\n\t\t\t\t//    \"child_ref_undefined_\" + choice key\n\n\t\t\t\t// The number of the checked choices must match the number of\n\t\t\t\t// group.props.data.options\n\t\t\t\tlet checked_options = true;\n\t\t\t\tgroup.props.data.options.forEach(option => {\n\t\t\t\t\tlet optionValid = false;\n\t\t\t\t\toption.options.forEach(opt => {\n\t\t\t\t\t\t// let key = 'child_ref_undefined_' + opt.key;\n\t\t\t\t\t\tlet key = 'child_ref_RadioButtons_' + opt.key;\n\t\t\t\t\t\tconsole.log('key = ', key);\n\t\t\t\t\t\tconsole.log('checked = ', group.options[key].checked);\n\t\t\t\t\t\toptionValid |= group.options[key].checked;\n\t\t\t\t\t\tconsole.log('optionValid = ', optionValid);\n\t\t\t\t\t});\n\t\t\t\t\tchecked_options &= optionValid;\n\t\t\t\t});\n\n\t\t\t\tif (!checked_options) {\n\t\t\t\t\tinvalid = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst ref = this.inputs[item.field_name];\n\t\t\t\tconst $item = this._getItemValue(item, ref);\n\t\t\t\tif (item.element === 'Rating') {\n\t\t\t\t\tif ($item.value === 0) {\n\t\t\t\t\t\tinvalid = true;\n\t\t\t\t\t}\n\t\t\t\t} else if (\n\t\t\t\t\t$item.value === undefined ||\n\t\t\t\t\t$item.value.length < 1\n\t\t\t\t) {\n\t\t\t\t\tinvalid = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn invalid;\n\t}\n\n\t_collect(item) {\n\t\tlet itemDataArray = [];\n\t\tconsole.log('_collect ');\n\t\tconst ref = this.inputs[item.field_name];\n\t\tif (\n\t\t\titem.element === 'Checkboxes' ||\n\t\t\titem.element === 'RadioButtons' ||\n\t\t\titem.element === 'ParagraphCheckbox'\n\t\t) {\n\t\t\tconst itemData = { name: item.field_name };\n\t\t\tconsole.log('_collect item.element = ', item.element);\n\t\t\tconst checked_options = [];\n\t\t\titem.options.forEach(option => {\n\t\t\t\tconst $option = ReactDOM.findDOMNode(\n\t\t\t\t\tref.options[`child_ref_${option.key}`]\n\t\t\t\t);\n\t\t\t\tconsole.log('$option = ', $option);\n\t\t\t\tconsole.log('option = ', option);\n\t\t\t\tconsole.log(\n\t\t\t\t\t'ref.option[child_ref_${option.key}] = ',\n\t\t\t\t\tref.options[`child_ref_${option.key}`]\n\t\t\t\t);\n\t\t\t\tif ($option.checked) {\n\t\t\t\t\tchecked_options.push(option.key);\n\t\t\t\t}\n\t\t\t});\n\t\t\titemData.value = checked_options;\n\t\t\titemDataArray.push(itemData);\n\t\t\tconsole.log('itemData = ', itemData);\n\t\t} else if (item.element === 'MultipleRadioButtonGroup') {\n\t\t\tconsole.log(\n\t\t\t\t'MultipleRadioButtonGroup this.inputs = ',\n\t\t\t\tthis.inputs\n\t\t\t);\n\t\t\tconsole.log('item = ', item);\n\n\t\t\t// ***** HACK ****** //\n\t\t\t// Becuase we don't have a field_name for parent Group,  so\n\t\t\t// we use item.options[0].field_name to get information.\n\t\t\t// group is the MultipleRadioButtonGroup not the child option\n\t\t\tlet group = this.inputs[item.options[0].field_name];\n\t\t\tconsole.log('group = ', group);\n\n\t\t\t// group.options contains all the children RadioButtons choices\n\t\t\t// group.props.data.options has RadioButons\n\t\t\t// 1. Get each RadioButtons with its ref of choice options\n\t\t\t//    The way to get ref of choices is to get the key\n\t\t\t//    \"child_ref_undefined_\" + choice key\n\n\t\t\t// The number of the checked choices must match the number of\n\t\t\t// group.props.data.options\n\t\t\tgroup.props.data.options.forEach(option => {\n\t\t\t\tlet itemData = {};\n\t\t\t\tlet checked_options = [];\n\t\t\t\toption.options.forEach(opt => {\n\t\t\t\t\tconsole.log('I am creating undefined key ');\n\t\t\t\t\tlet key = 'child_ref_RadioButtons_' + opt.key;\n\t\t\t\t\tconsole.log('key = ', key);\n\t\t\t\t\tif (group.options[key].checked) {\n\t\t\t\t\t\tchecked_options.push(opt.key);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\titemData.name = option.field_name;\n\t\t\t\titemData.value = checked_options;\n\t\t\t\titemDataArray.push(itemData);\n\t\t\t});\n\t\t} else {\n\t\t\tconst itemData = { name: item.field_name };\n\t\t\tif (!ref) return null;\n\t\t\titemData.value = this._getItemValue(item, ref).value;\n\t\t\titemDataArray.push(itemData);\n\t\t}\n\t\treturn itemDataArray;\n\t}\n\n\t_collectFormData(data) {\n\t\tconsole.log('_collectFormData ');\n\t\tconst formData = [];\n\t\tdata.forEach(item => {\n\t\t\tconst item_data = this._collect(item);\n\t\t\titem_data.map(data => {\n\t\t\t\tformData.push(data);\n\t\t\t});\n\t\t\t// if (item_data) {\n\t\t\t// \tformData.push(item_data);\n\t\t\t// }\n\t\t});\n\t\treturn formData;\n\t}\n\n\t_getSignatureImg(item) {\n\t\tconst ref = this.inputs[item.field_name];\n\t\tconst $canvas_sig = ref.canvas.current;\n\t\tif ($canvas_sig) {\n\t\t\tconst base64 = $canvas_sig\n\t\t\t\t.toDataURL()\n\t\t\t\t.replace('data:image/png;base64,', '');\n\t\t\tconst isEmpty = $canvas_sig.isEmpty();\n\t\t\tconst $input_sig = ReactDOM.findDOMNode(ref.inputField.current);\n\t\t\tif (isEmpty) {\n\t\t\t\t$input_sig.value = '';\n\t\t\t} else {\n\t\t\t\t$input_sig.value = base64;\n\t\t\t}\n\t\t}\n\t}\n\n\tasync handleSubmit(e) {\n\t\tconsole.log('376 responseData.entry');\n\t\te.preventDefault();\n\t\tlet errors = [];\n\t\tif (!this.props.skip_validations) {\n\t\t\terrors = this.validateForm();\n\t\t\t// Publish errors, if any.\n\t\t\tthis.emitter.emit('formValidation', errors);\n\t\t}\n\n\t\tconsole.log('384 responseData.entry');\n\t\t// Only submit if there are no errors.\n\t\tif (errors.length < 1) {\n\t\t\tconst answer_data = this.props;\n\t\t\tif (answer_data) {\n\t\t\t\t// send answer_data back to NewEntryManager, we will send to backend all together in Submit tab\n\t\t\t\tconst answer = this._collectFormData(this.props.data);\n\t\t\t\t// editinMode meaning we are in EditEntryManager\n\t\t\t\tif (this.editingMode) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconsole.log('393 responseData.entry = ');\n\t\t\t\t\t\tconst answer = this._collectFormData(this.props.data);\n\t\t\t\t\t\t// we need to use JSON.stringify to send array objects.\n\t\t\t\t\t\t// FormData with JSON.stringify not working\n\t\t\t\t\t\tlet [\n\t\t\t\t\t\t\tresponseData,\n\t\t\t\t\t\t\tresponseStatus,\n\t\t\t\t\t\t\tresponseMessage\n\t\t\t\t\t\t] = await this.sendRQ(\n\t\t\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL +\n\t\t\t\t\t\t\t\t`/entries/formAnswer/${this.entryId}`,\n\t\t\t\t\t\t\t'PATCH',\n\t\t\t\t\t\t\tJSON.stringify({\n\t\t\t\t\t\t\t\tanswer: answer\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t'Content-type': 'application/json',\n\t\t\t\t\t\t\t\t// adding JWT to header for authentication\n\t\t\t\t\t\t\t\t// Authorization: 'Bearer ' + storageData.userToken\n\t\t\t\t\t\t\t\tAuthorization: 'Bearer ' + this.userToken\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconsole.log('responseMessage = ', responseMessage);\n\t\t\t\t\t\tif (responseStatus === 202) {\n\t\t\t\t\t\t\t// either group is full or event is full\n\t\t\t\t\t\t\tthis.fullMessage = responseMessage;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// if status is 200, we want to print out Total Price so this is not a fullMessage\n\t\t\t\t\t\t\tthis.fullMessage = 'NO ' + responseMessage;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconsole.log('this.fullMessage = ', this.fullMessage);\n\t\t\t\t\t\tthis.getNewEntry(responseData.entry);\n\t\t\t\t\t} catch (err) {}\n\t\t\t\t} else {\n\t\t\t\t\t// this route is for NewEntryManager\n\t\t\t\t\tconsole.log('answer = ', answer);\n\t\t\t\t\tthis.props.returnFormAnswer(answer);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow new Error('Submit failed. Please select answers.');\n\t\t\t}\n\t\t}\n\t}\n\n\tvalidateForm() {\n\t\tconsole.log('validateForm');\n\t\tconst errors = [];\n\t\tlet data_items = this.props.data;\n\t\tif (this.props.display_short) {\n\t\t\tdata_items = this.props.data.filter(\n\t\t\t\ti => i.alternateForm === true\n\t\t\t);\n\t\t}\n\n\t\tdata_items.forEach(item => {\n\t\t\tconsole.log('item = ', item);\n\t\t\tif (item.element === 'Signature') {\n\t\t\t\tthis._getSignatureImg(item);\n\t\t\t}\n\n\t\t\tif (this._isInvalid(item)) {\n\t\t\t\terrors.push(`${item.label} is required!`);\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tthis.props.validateForCorrectness &&\n\t\t\t\tthis._isIncorrect(item)\n\t\t\t) {\n\t\t\t\terrors.push(`${item.label} was answered incorrectly!`);\n\t\t\t}\n\t\t});\n\n\t\treturn errors;\n\t}\n\n\tgetInputElement(item) {\n\t\tconsole.log('getInputElement');\n\t\tconsole.log('item = ', item);\n\t\tconst Input = FormElements[item.element];\n\t\tconsole.log('Input = ', Input);\n\t\treturn (\n\t\t\t<Input\n\t\t\t\thandleChange={this.handleChange}\n\t\t\t\tref={c => (this.inputs[item.field_name] = c)}\n\t\t\t\tmutable={true}\n\t\t\t\tkey={`form_${item.id}`}\n\t\t\t\tdata={item}\n\t\t\t\tread_only={this.props.read_only}\n\t\t\t\tdefaultValue={this._getDefaultValue(item)}\n\t\t\t/>\n\t\t);\n\t}\n\n\t_getMultipleInputDefaultValues(item) {\n\t\tlet answers = [];\n\t\tconsole.log('this.answerData = ', this.answerData);\n\t\titem.options.forEach(option => {\n\t\t\tlet optAnswer = {};\n\t\t\tif (option.field_name && this.answerData) {\n\t\t\t\tif (this.answerData[option.field_name]) {\n\t\t\t\t\toptAnswer[option.field_name] = this.answerData[\n\t\t\t\t\t\toption.field_name\n\t\t\t\t\t][0];\n\t\t\t\t\tanswers.push(optAnswer);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tconsole.log('464 answers = ', answers);\n\t\treturn answers;\n\t}\n\n\tgetMultipleInputElement(item) {\n\t\tconsole.log('getMultipleInputElement');\n\t\tconsole.log('item = ', item);\n\t\tconst Input = FormElements[item.element];\n\n\t\treturn (\n\t\t\t<Input\n\t\t\t\thandleChange={this.handleChange}\n\t\t\t\tref={c => (this.inputs[item.options[0].field_name] = c)}\n\t\t\t\tmutable={true}\n\t\t\t\tkey={`form_${item.id}`}\n\t\t\t\tdata={item}\n\t\t\t\tread_only={this.props.read_only}\n\t\t\t\tdefaultValue={this._getMultipleInputDefaultValues(item)}\n\t\t\t/>\n\t\t);\n\t}\n\n\tgetSimpleElement(item) {\n\t\tconsole.log('getSimpleElement');\n\t\tconst Element = FormElements[item.element];\n\t\treturn (\n\t\t\t<Element mutable={true} key={`form_${item.id}`} data={item} />\n\t\t);\n\t}\n\n\trender() {\n\t\tlet data_items = this.props.data;\n\n\t\tif (!data_items) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.props.display_short) {\n\t\t\tdata_items = this.props.data.filter(\n\t\t\t\ti => i.alternateForm === true\n\t\t\t);\n\t\t}\n\n\t\tdata_items.forEach(item => {\n\t\t\tif (\n\t\t\t\titem &&\n\t\t\t\titem.readOnly &&\n\t\t\t\titem.variableKey &&\n\t\t\t\tthis.props.variables[item.variableKey]\n\t\t\t) {\n\t\t\t\tthis.answerData[item.field_name] = this.props.variables[\n\t\t\t\t\titem.variableKey\n\t\t\t\t];\n\t\t\t}\n\t\t});\n\n\t\tconst items = data_items.map(item => {\n\t\t\tif (!item) return null;\n\t\t\tswitch (item.element) {\n\t\t\t\tcase 'TextInput':\n\t\t\t\tcase 'NumberInput':\n\t\t\t\tcase 'TextArea':\n\t\t\t\tcase 'Dropdown':\n\t\t\t\tcase 'DatePicker':\n\t\t\t\tcase 'RadioButtons':\n\t\t\t\tcase 'Rating':\n\t\t\t\tcase 'Tags':\n\t\t\t\tcase 'Range':\n\t\t\t\t\treturn this.getInputElement(item);\n\t\t\t\tcase 'Signature':\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Signature\n\t\t\t\t\t\t\tref={c => (this.inputs[item.field_name] = c)}\n\t\t\t\t\t\t\tread_only={this.props.read_only || item.readOnly}\n\t\t\t\t\t\t\tmutable={true}\n\t\t\t\t\t\t\tkey={`form_${item.id}`}\n\t\t\t\t\t\t\tdata={item}\n\t\t\t\t\t\t\tdefaultValue={this._getDefaultValue(item)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\tcase 'Checkboxes':\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Checkboxes\n\t\t\t\t\t\t\tref={c => (this.inputs[item.field_name] = c)}\n\t\t\t\t\t\t\tread_only={this.props.read_only}\n\t\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\t\tmutable={true}\n\t\t\t\t\t\t\tkey={`form_${item.id}`}\n\t\t\t\t\t\t\tdata={item}\n\t\t\t\t\t\t\tdefaultValue={this._optionsDefaultValue(item)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\tcase 'ParagraphCheckbox':\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ParagraphCheckbox\n\t\t\t\t\t\t\tref={c => (this.inputs[item.field_name] = c)}\n\t\t\t\t\t\t\tread_only={this.props.read_only}\n\t\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\t\tmutable={true}\n\t\t\t\t\t\t\tkey={`form_${item.id}`}\n\t\t\t\t\t\t\tdata={item}\n\t\t\t\t\t\t\tdefaultValue={this._optionsDefaultValue(item)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\tcase 'MultipleRadioButtonGroup':\n\t\t\t\t\tconsole.log('inside MultipleRadioButtonGroup');\n\t\t\t\t\tconsole.log('this.inputs = ', this.inputs);\n\t\t\t\t\tconsole.log('item = ', item);\n\t\t\t\t\tconsole.log('item.id = ', item.id);\n\n\t\t\t\t\treturn this.getMultipleInputElement(item);\n\t\t\t\tcase 'Image':\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\tref={c => (this.inputs[item.field_name] = c)}\n\t\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\t\tmutable={true}\n\t\t\t\t\t\t\tkey={`form_${item.id}`}\n\t\t\t\t\t\t\tdata={item}\n\t\t\t\t\t\t\tdefaultValue={this._getDefaultValue(item)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\tcase 'Download':\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Download\n\t\t\t\t\t\t\tdownload_path={this.props.download_path}\n\t\t\t\t\t\t\tmutable={true}\n\t\t\t\t\t\t\tkey={`form_${item.id}`}\n\t\t\t\t\t\t\tdata={item}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\tcase 'Camera':\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Camera\n\t\t\t\t\t\t\tref={c => (this.inputs[item.field_name] = c)}\n\t\t\t\t\t\t\tread_only={this.props.read_only || item.readOnly}\n\t\t\t\t\t\t\tmutable={true}\n\t\t\t\t\t\t\tkey={`form_${item.id}`}\n\t\t\t\t\t\t\tdata={item}\n\t\t\t\t\t\t\tdefaultValue={this._getDefaultValue(item)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\tdefault:\n\t\t\t\t\treturn this.getSimpleElement(item);\n\t\t\t}\n\t\t});\n\n\t\tconst formTokenStyle = {\n\t\t\tdisplay: 'none'\n\t\t};\n\n\t\tconst actionName = this.props.action_name\n\t\t\t? this.props.action_name\n\t\t\t: 'Submit';\n\t\tconst backName = this.props.back_name\n\t\t\t? this.props.back_name\n\t\t\t: 'Cancel';\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tborderStyle: 'double',\n\t\t\t\t\t\tborderColor: '#a3aeae'\n\t\t\t\t\t}}>\n\t\t\t\t\t<HookWrapper>\n\t\t\t\t\t\t{({\n\t\t\t\t\t\t\tisLoading,\n\t\t\t\t\t\t\terror,\n\t\t\t\t\t\t\tsendRequest,\n\t\t\t\t\t\t\tclearError,\n\t\t\t\t\t\t\tuserToken,\n\t\t\t\t\t\t\teventId\n\t\t\t\t\t\t}) => {\n\t\t\t\t\t\t\t// assignments\n\t\t\t\t\t\t\tthis.sendRQ = sendRequest;\n\t\t\t\t\t\t\tthis.userToken = userToken;\n\t\t\t\t\t\t\tthis.eventId = eventId;\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t{isLoading && (\n\t\t\t\t\t\t\t\t\t\t<div className=\"center\">\n\t\t\t\t\t\t\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t{error && (\n\t\t\t\t\t\t\t\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}}\n\t\t\t\t\t</HookWrapper>\n\t\t\t\t\t<FormValidator emitter={this.emitter} />\n\t\t\t\t\t<div className=\"react-form-builder-form\">\n\t\t\t\t\t\t<form\n\t\t\t\t\t\t\tencType=\"multipart/form-data\"\n\t\t\t\t\t\t\tref={c => (this.form = c)}\n\t\t\t\t\t\t\taction={this.props.form_action}\n\t\t\t\t\t\t\tonSubmit={this.handleSubmit.bind(this)}\n\t\t\t\t\t\t\tmethod={this.props.form_method}>\n\t\t\t\t\t\t\t{this.props.authenticity_token && (\n\t\t\t\t\t\t\t\t<div style={formTokenStyle}>\n\t\t\t\t\t\t\t\t\t<input name=\"utf8\" type=\"hidden\" value=\"&#x2713;\" />\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tname=\"authenticity_token\"\n\t\t\t\t\t\t\t\t\t\ttype=\"hidden\"\n\t\t\t\t\t\t\t\t\t\tvalue={this.props.authenticity_token}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tname=\"task_id\"\n\t\t\t\t\t\t\t\t\t\ttype=\"hidden\"\n\t\t\t\t\t\t\t\t\t\tvalue={this.props.task_id}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{items}\n\t\t\t\t\t\t\t<div className=\"btn-toolbar\">\n\t\t\t\t\t\t\t\t{!this.props.hide_actions && (\n\t\t\t\t\t\t\t\t\t// <input\n\t\t\t\t\t\t\t\t\t// \ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t// \tclassName=\"btn btn-school btn-big\"\n\t\t\t\t\t\t\t\t\t// \tvalue={actionName}\n\t\t\t\t\t\t\t\t\t// />\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\t\t\t\tmargin-left=\"1.5rem\">\n\t\t\t\t\t\t\t\t\t\t{actionName}\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t{!this.props.hide_actions && this.props.back_action && (\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\thref={this.props.back_action}\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-default btn-cancel btn-big\">\n\t\t\t\t\t\t\t\t\t\t{backName}\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{this.fullMessage &&\n\t\t\t\t\t\t\t\t!this.fullMessage.startsWith('NO') && (\n\t\t\t\t\t\t\t\t\t<p\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tcolor: 'red'\n\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t\t{this.fullMessage}{' '}\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{this.fullMessage && this.fullMessage.startsWith('NO') && (\n\t\t\t\t\t\t\t\t<p\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tcolor: 'green'\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\tYour entry is successfully submitted.{' '}\n\t\t\t\t\t\t\t\t\t{this.fullMessage.slice(3)}{' '}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nReactForm.defaultProps = { validateForCorrectness: false };\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/toolbar-draggable-item.jsx",[],["631","632"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/sortable-element.jsx",["633"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport { DragSource, DropTarget } from 'react-dnd';\nimport ItemTypes from './ItemTypes';\n\nconst style = {\n\tborder: '1px dashed gray',\n\tpadding: '0.5rem 1rem',\n\tmarginBottom: '.5rem',\n\tbackgroundColor: 'white',\n\tcursor: 'move'\n};\n\nconst cardSource = {\n\tbeginDrag(props) {\n\t\treturn {\n\t\t\tid: props.id,\n\t\t\tindex: props.index\n\t\t};\n\t}\n};\n\nconst cardTarget = {\n\thover(props, monitor, component) {\n\t\tconst item = monitor.getItem();\n\t\t// console.log('item = ', item);\n\t\tconst dragIndex = item.index;\n\t\t// console.log('dragIndex = ', dragIndex);\n\t\tconst hoverIndex = props.index;\n\t\t// console.log('hoverIndex = ', hoverIndex);\n\n\t\t// Don't replace items with themselves\n\t\tif (dragIndex === hoverIndex) {\n\t\t\treturn;\n\t\t}\n\t\tif (dragIndex === -1) {\n\t\t\titem.index = hoverIndex;\n\t\t\t// console.log('item.data = ', item.data);\n\t\t\tprops.insertCard(item.onCreate(item.data), hoverIndex);\n\t\t}\n\n\t\t// Determine rectangle on screen\n\t\tconst hoverBoundingRect = findDOMNode(\n\t\t\tcomponent\n\t\t).getBoundingClientRect();\n\n\t\t// Get vertical middle\n\t\tconst hoverMiddleY =\n\t\t\t(hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n\n\t\t// Determine mouse position\n\t\tconst clientOffset = monitor.getClientOffset();\n\n\t\t// Get pixels to the top\n\t\tconst hoverClientY = clientOffset.y - hoverBoundingRect.top;\n\n\t\t// Only perform the move when the mouse has crossed half of the items height\n\t\t// When dragging downwards, only move when the cursor is below 50%\n\t\t// When dragging upwards, only move when the cursor is above 50%\n\n\t\t// Dragging downwards\n\t\tif (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Dragging upwards\n\t\tif (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Time to actually perform the action\n\t\tprops.moveCard(dragIndex, hoverIndex);\n\n\t\t// Note: we're mutating the monitor item here!\n\t\t// Generally it's better to avoid mutations,\n\t\t// but it's good here for the sake of performance\n\t\t// to avoid expensive index searches.\n\t\titem.index = hoverIndex;\n\t}\n};\n\n// eslint-disable-next-line no-unused-vars\nexport default function (ComposedComponent) {\n\tclass Card extends Component {\n\t\tstatic propTypes = {\n\t\t\tconnectDragSource: PropTypes.func,\n\t\t\tconnectDropTarget: PropTypes.func,\n\t\t\tindex: PropTypes.number.isRequired,\n\t\t\tisDragging: PropTypes.bool,\n\t\t\tid: PropTypes.any.isRequired,\n\t\t\t// text: PropTypes.string.isRequired,\n\t\t\tmoveCard: PropTypes.func.isRequired,\n\t\t\tseq: PropTypes.number\n\t\t};\n\n\t\tstatic defaultProps = {\n\t\t\tseq: -1\n\t\t};\n\n\t\trender() {\n\t\t\tconst {\n\t\t\t\tisDragging,\n\t\t\t\tconnectDragSource,\n\t\t\t\tconnectDropTarget\n\t\t\t} = this.props;\n\t\t\tconst opacity = isDragging ? 0 : 1;\n\n\t\t\treturn connectDragSource(\n\t\t\t\tconnectDropTarget(\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<ComposedComponent\n\t\t\t\t\t\t\t{...this.props}\n\t\t\t\t\t\t\tstyle={{ ...style, opacity }}></ComposedComponent>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}\n\n\tconst x = DropTarget(ItemTypes.CARD, cardTarget, connect => ({\n\t\tconnectDropTarget: connect.dropTarget()\n\t}))(Card);\n\treturn DragSource(\n\t\tItemTypes.CARD,\n\t\tcardSource,\n\t\t(connect, monitor) => ({\n\t\t\tconnectDragSource: connect.dragSource(),\n\t\t\tisDragging: monitor.isDragging()\n\t\t})\n\t)(x);\n}\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/ClubAccount.js",["634","635","636","637"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/entryDashboard/pages/SubmitEntry.js",["638","639","640","641","642","643","644","645","646","647"],"import React, { useContext, useEffect, useState } from 'react';\nimport { Link, useLocation, useHistory } from 'react-router-dom';\nimport { Field, Form, Formik } from 'formik';\nimport moment from 'moment';\nimport NavigationPrompt from 'react-router-navigation-prompt';\n\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport Modal from '../../shared/components/UIElements/Modal';\n\nimport Button from '../../shared/components/FormElements/Button';\nimport PromptModal from '../../shared/components/UIElements/PromptModal';\nimport { UserAuthContext } from '../../shared/context/auth-context';\nimport { FormContext } from '../../shared/context/form-context';\n\nimport '../../shared/css/EventForm.css';\nimport './Entry.css';\n\nimport STRIPE from '../../shared/utils/webp/Stripe.webp';\nimport CardSetupForm from '../components/CardSetupForm';\nimport { Elements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport CardAuthentication from '../components/CardAuthentication';\n\nimport './Entry.css';\n\nconst PAID = 'Paid';\nconst DECLINED = 'Declined';\nconst AUTHENTICATION = 'Require Authentication';\n\nconst SubmitEntry = props => {\n\tconst history = useHistory();\n\tlet entryId = props.entryId;\n\tlet eventId = props.eventId;\n\tlet eventName = props.eventName;\n\tlet carId = props.carId;\n\tlet carNumber = props.carNumber;\n\t// let raceClass = props.raceClass;\n\tlet formAnswer = props.formAnswer;\n\tconst editingMode = props.editingMode;\n\tconst [paymentStatus, setPaymentStatus] = useState(\n\t\tprops.paymentStatus\n\t);\n\n\tconst updatePaymentStatus = paymentStatus => {\n\t\tsetPaymentStatus(paymentStatus);\n\t};\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\n\tconst [stripePromise, setStripePromise] = useState(\n\t\tloadStripe(\n\t\t\t// process.env.STRIPE_PUBLISHABLE_KEY\n\t\t\t'pk_test_51HpjVQG10ZElXQJ4LAk8pnnOuC23BzzmIBwNdIQgZf8ZjbLg5XjelbRjRP2pUWfDY556b3Y8JpJKG2hXXvBIxr830094NIq6Vu'\n\t\t)\n\t);\n\n\t// control wheather to show the field or not\n\tconst disableOnSite = paymentStatus => {\n\t\tif (\n\t\t\tpaymentStatus === PAID ||\n\t\t\tpaymentStatus === DECLINED ||\n\t\t\tpaymentStatus === AUTHENTICATION\n\t\t) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t};\n\tconst disableStripe = paymentStatus => {\n\t\tif (paymentStatus === PAID) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t};\n\tconst paymentStatusMessage = () => {\n\t\tif (paymentStatus === PAID) {\n\t\t\treturn (\n\t\t\t\t<p className=\"paymentmessage-paid\">\n\t\t\t\t\tYour payment has been charged. Thanks for your payment.\n\t\t\t\t</p>\n\t\t\t);\n\t\t} else if (paymentStatus === 'Unpaid') {\n\t\t\treturn (\n\t\t\t\t<p className=\"paymentmessage-unpaid\">\n\t\t\t\t\tYou can modify your payment method.\n\t\t\t\t</p>\n\t\t\t);\n\t\t} else if (paymentStatus === DECLINED) {\n\t\t\treturn (\n\t\t\t\t<p className=\"paymentmessage-declined\">\n\t\t\t\t\tYour card was declined. Please provide a new card.\n\t\t\t\t</p>\n\t\t\t);\n\t\t} else if (paymentStatus === AUTHENTICATION) {\n\t\t\treturn (\n\t\t\t\t<p className=\"paymentmessage-declined\">\n\t\t\t\t\tYour authentication is required for payment charge. Please\n\t\t\t\t\tauthenticate by clicking the button below.\n\t\t\t\t</p>\n\t\t\t);\n\t\t}\n\t};\n\tconst disableCancel = paymentStatus => {\n\t\tif (\n\t\t\tpaymentStatus === PAID ||\n\t\t\tpaymentStatus === DECLINED ||\n\t\t\tpaymentStatus === AUTHENTICATION\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t};\n\n\t// entry fee for the event\n\tconst [entryFee, setEntryFee] = useState(0);\n\t// club payment options\n\tconst [stripePay, setStripePay] = useState(false);\n\tconst [onSite, setOnSite] = useState(false);\n\t// initial values for payment method, this is where we want to set the radio button initially\n\tconst [paymentMethodInit, setPaymentMethodInit] = useState(\n\t\t'stripe'\n\t);\n\t// For EditingMode, user previously select payment method\n\tconst [paymentMethod, setPaymentMethod] = useState();\n\t// controller to hide Stripe credit card field\n\tconst [hideCCField, setHideCCField] = useState(true);\n\t// controller to show Stripe Authentication Button\n\tconst [showAuthentication, setShowAuthentication] = useState(false);\n\tconst [succeed, setSucceed] = useState(false);\n\tconst [email, setEmail] = useState('');\n\tconst [\n\t\tstripePaymentMethodId,\n\t\tsetStripePaymentMethodId\n\t] = useState();\n\tconst [stripeError, setStripeError] = useState();\n\tconst [stripeSetupIntentId, setStripeSetupIntentId] = useState();\n\n\t// clear error modal\n\tconst clearErrorCallback = () => {\n\t\tsetFoundError(null);\n\t};\n\n\t// Error Modal error message\n\tconst [foundError, setFoundError] = useState();\n\tuseEffect(() => {\n\t\tif (error) {\n\t\t\tconsole.log('http error');\n\t\t\tsetFoundError(error);\n\t\t}\n\t\tif (stripeError) {\n\t\t\tconsole.log('stripe error');\n\t\t\tsetFoundError(stripeError.message);\n\t\t}\n\t}, [error, stripeError]);\n\n\t// controller of DELETE event modal\n\tconst [showDELModal, setShowDELModal] = useState(false);\n\tconst openDELHandler = () => {\n\t\tsetShowDELModal(true);\n\t};\n\tconst closeDELHandler = () => {\n\t\tsetShowDELModal(false);\n\t};\n\n\tconst [initialized, setInitialized] = useState(false);\n\tconst userAuthContext = useContext(UserAuthContext);\n\tconst formContext = useContext(FormContext);\n\tconst [statusMessage, setStatusMessage] = useState('');\n\n\tconst userName = userAuthContext.userName;\n\n\tuseEffect(() => {\n\t\tlet mounted = true;\n\t\tif (mounted) {\n\t\t\tformContext.setIsInsideForm(true);\n\t\t}\n\t\treturn () => {\n\t\t\tmounted = false;\n\t\t};\n\t}, [formContext]);\n\n\t// If we are re-directing to this page, we want to clear up clubRedirectURL\n\tlet location = useLocation();\n\tReact.useEffect(() => {\n\t\tlet path = location.pathname;\n\t\tlet userRedirectURL = userAuthContext.userRedirectURL;\n\t\tif (path === userRedirectURL) {\n\t\t\t// re-init redirectURL after re-direction route\n\t\t\tuserAuthContext.setUserRedirectURL(null);\n\t\t}\n\t}, [location, userAuthContext]);\n\n\tuseEffect(() => {\n\t\tconst getEntryFeePaymentOption = async () => {\n\t\t\tconst [\n\t\t\t\tresponseData,\n\t\t\t\tresponseStatus,\n\t\t\t\tresponseMessage\n\t\t\t] = await sendRequest(\n\t\t\t\tprocess.env.REACT_APP_BACKEND_URL +\n\t\t\t\t\t`/entries/entryFee/${eventId}`,\n\t\t\t\t'POST',\n\t\t\t\tJSON.stringify({\n\t\t\t\t\tanswer: formAnswer\n\t\t\t\t}),\n\t\t\t\t{\n\t\t\t\t\t'Content-type': 'application/json',\n\t\t\t\t\t// adding JWT to header for authentication\n\t\t\t\t\tAuthorization: 'Bearer ' + userAuthContext.userToken\n\t\t\t\t}\n\t\t\t);\n\t\t\tsetEntryFee(responseData.entryFee);\n\n\t\t\t// for EditingMode\n\t\t\t// paymentMethod is what user chose how to pay for the entry fee\n\t\t\tlet paymentMethod = responseData.paymentMethod;\n\t\t\tsetPaymentMethod(paymentMethod);\n\n\t\t\t// paymentOptions is the payment options offered by club that contains \"stripe\" and/or \"onSite\"\n\t\t\tlet paymentOptions = responseData.paymentOptions;\n\t\t\tif (paymentOptions.indexOf('onSite') > -1) {\n\t\t\t\tsetOnSite(true);\n\t\t\t}\n\t\t\tif (paymentOptions.indexOf('stripe') > -1) {\n\t\t\t\tsetStripePay(true);\n\t\t\t}\n\t\t};\n\t\tgetEntryFeePaymentOption();\n\t}, [\n\t\teditingMode,\n\t\tsendRequest,\n\t\tsetEntryFee,\n\t\tsetOnSite,\n\t\tsetStripePay,\n\t\teventId,\n\t\tformAnswer,\n\t\tuserAuthContext.userToken\n\t]);\n\n\tconst [disclaimer, setDisclaimer] = useState(false);\n\n\t// initialize local storage\n\t// Get the existing data\n\tvar eventFormData = localStorage.getItem('eventFormData');\n\n\t// If no existing data, create an array; otherwise retrieve it\n\teventFormData = eventFormData ? JSON.parse(eventFormData) : {};\n\n\tconst [OKLeavePage, setOKLeavePage] = useState(true);\n\t// local storage gets the higest priority\n\t// get from localStorage\n\tif (\n\t\t!initialized &&\n\t\teventFormData &&\n\t\tmoment(eventFormData.expirationDate) > moment()\n\t) {\n\t\tsetInitialized(true);\n\t\t// Form data\n\t\tif (eventFormData.disclaimer) {\n\t\t\tsetDisclaimer(eventFormData.disclaimer);\n\t\t}\n\t} else if (!initialized) {\n\t\tsetInitialized(true);\n\t\t// initialize localStorage\n\t\teventFormData['expirationDate'] = moment(\n\t\t\tmoment().add(1, 'days'),\n\t\t\tmoment.ISO_8601\n\t\t);\n\t\teventFormData['disclaimer'] = false;\n\t\tlocalStorage.setItem(\n\t\t\t'eventFormData',\n\t\t\tJSON.stringify(eventFormData)\n\t\t);\n\t}\n\n\tconst removeEventFormData = () => {\n\t\tlocalStorage.removeItem('eventFormData');\n\t};\n\n\tuseEffect(() => {\n\t\tif (paymentMethod) {\n\t\t\tsetPaymentMethodInit(paymentMethod);\n\t\t\tif (paymentMethod === 'stripe') {\n\t\t\t\tif (paymentStatus === AUTHENTICATION) {\n\t\t\t\t\t// showing Authentication button instead\n\t\t\t\t\tsetHideCCField(true);\n\t\t\t\t\tsetShowAuthentication(true);\n\t\t\t\t} else {\n\t\t\t\t\tsetHideCCField(false);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetHideCCField(true);\n\t\t\t}\n\t\t} else if (stripePay) {\n\t\t\tsetPaymentMethodInit('stripe');\n\t\t\tif (paymentStatus === AUTHENTICATION) {\n\t\t\t\t// showing Authentication button instead\n\t\t\t\tsetHideCCField(true);\n\t\t\t\tsetShowAuthentication(true);\n\t\t\t} else {\n\t\t\t\tsetHideCCField(false);\n\t\t\t}\n\t\t} else {\n\t\t\tsetPaymentMethodInit('onSite');\n\t\t\tsetHideCCField(true);\n\t\t}\n\t}, [stripePay, onSite, paymentMethod, paymentStatus]);\n\n\tconst initialValues = {\n\t\tacceptDisclaimer: editingMode ? true : false,\n\t\tpaymentMethod: paymentMethodInit\n\t};\n\n\tconst [validateDisclaimer, setValidateDisclaimer] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'You must agree with disclaimer to register event.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\tconst [validatePaymentMethod, setValidatePaymentMethod] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'You must select a payment method.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\n\tconst submitHandler = async values => {\n\t\t// wipe out credit card info if paymentMethod is onSite\n\t\tlet disclaimer = values.acceptDisclaimer;\n\t\tlet paymentMethod = values.paymentMethod;\n\t\tif (editingMode) {\n\t\t\ttry {\n\t\t\t\t// we need to use JSON.stringify to send array objects.\n\t\t\t\t// FormData with JSON.stringify not working\n\t\t\t\tconst [\n\t\t\t\t\tresponseData,\n\t\t\t\t\tresponseStatus,\n\t\t\t\t\tresponseMessage\n\t\t\t\t] = await sendRequest(\n\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL +\n\t\t\t\t\t\t`/entries/payment/${entryId}`,\n\t\t\t\t\t'PATCH',\n\t\t\t\t\tJSON.stringify({\n\t\t\t\t\t\tpaymentMethod: paymentMethod,\n\t\t\t\t\t\tstripeSetupIntentId: stripeSetupIntentId,\n\t\t\t\t\t\tstripePaymentMethodId: stripePaymentMethodId\n\t\t\t\t\t}),\n\t\t\t\t\t{\n\t\t\t\t\t\t'Content-type': 'application/json',\n\t\t\t\t\t\t// adding JWT to header for authentication\n\t\t\t\t\t\tAuthorization: 'Bearer ' + userAuthContext.userToken\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tif (responseData.entry) {\n\t\t\t\t\t// add entry to localStrorage, in EventItem.js, we look for entries from there\n\t\t\t\t\t// to identify entry status. This is for performance boost.\n\t\t\t\t\tconst userData = JSON.parse(\n\t\t\t\t\t\tlocalStorage.getItem('userData')\n\t\t\t\t\t);\n\t\t\t\t\tif (userData) {\n\t\t\t\t\t\tuserData.userEntries.push(responseData.entry);\n\t\t\t\t\t\tlocalStorage.setItem(\n\t\t\t\t\t\t\t'userData',\n\t\t\t\t\t\t\tJSON.stringify(userData)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t// add entry to userAuthContext to have data persistency.\n\t\t\t\t\tuserAuthContext.userEntries.push(responseData.entry);\n\t\t\t\t}\n\t\t\t\tif (responseStatus === 200) {\n\t\t\t\t\tsetStatusMessage(\n\t\t\t\t\t\t'Registration Payment Method Changed Successfully.'\n\t\t\t\t\t);\n\t\t\t\t\tsetSucceed(true);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log('err = ', err);\n\t\t\t}\n\t\t} else {\n\t\t\ttry {\n\t\t\t\t// we need to use JSON.stringify to send array objects.\n\t\t\t\t// FormData with JSON.stringify not working\n\t\t\t\tconst [\n\t\t\t\t\tresponseData,\n\t\t\t\t\tresponseStatus,\n\t\t\t\t\tresponseMessage\n\t\t\t\t] = await sendRequest(\n\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL +\n\t\t\t\t\t\t`/entries/submit/${eventId}`,\n\t\t\t\t\t'POST',\n\t\t\t\t\tJSON.stringify({\n\t\t\t\t\t\tcarId: carId,\n\t\t\t\t\t\tcarNumber: carNumber,\n\t\t\t\t\t\t// raceClass: raceClass,\n\t\t\t\t\t\tanswer: formAnswer,\n\t\t\t\t\t\tdisclaimer: disclaimer,\n\t\t\t\t\t\tpaymentMethod: paymentMethod,\n\t\t\t\t\t\tentryFee: entryFee,\n\t\t\t\t\t\tstripeSetupIntentId: stripeSetupIntentId,\n\t\t\t\t\t\tstripePaymentMethodId: stripePaymentMethodId\n\t\t\t\t\t}),\n\t\t\t\t\t{\n\t\t\t\t\t\t'Content-type': 'application/json',\n\t\t\t\t\t\t// adding JWT to header for authentication\n\t\t\t\t\t\tAuthorization: 'Bearer ' + userAuthContext.userToken\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tif (responseData.entry) {\n\t\t\t\t\t// add entry to localStrorage, in EventItem.js, we look for entries from there\n\t\t\t\t\t// to identify entry status. This is for performance boost.\n\t\t\t\t\tconst userData = JSON.parse(\n\t\t\t\t\t\tlocalStorage.getItem('userData')\n\t\t\t\t\t);\n\t\t\t\t\tif (userData) {\n\t\t\t\t\t\tuserData.userEntries.push(responseData.entry);\n\t\t\t\t\t\tlocalStorage.setItem(\n\t\t\t\t\t\t\t'userData',\n\t\t\t\t\t\t\tJSON.stringify(userData)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t// add entry to userAuthContext to have data persistency.\n\t\t\t\t\tuserAuthContext.userEntries.push(responseData.entry);\n\t\t\t\t}\n\t\t\t\tsetEntryFee(responseData.totalPrice);\n\t\t\t\tsetEmail(responseData.email);\n\n\t\t\t\tif (responseStatus === 202) {\n\t\t\t\t\t// either group is full or event is full\n\t\t\t\t\tsetStatusMessage(responseMessage);\n\t\t\t\t\tsetSucceed(true);\n\t\t\t\t} else if (responseStatus === 200) {\n\t\t\t\t\tsetStatusMessage('Registration Submitted Successfully.');\n\t\t\t\t\tsetSucceed(true);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log('err = ', err);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst deleteHandler = async () => {\n\t\tsetShowDELModal(false);\n\t\ttry {\n\t\t\tconst [\n\t\t\t\tresponseData,\n\t\t\t\tresponseStatus,\n\t\t\t\tresponseMessage\n\t\t\t] = await sendRequest(\n\t\t\t\tprocess.env.REACT_APP_BACKEND_URL + `/entries/${entryId}`,\n\t\t\t\t'DELETE',\n\t\t\t\tnull,\n\t\t\t\t{\n\t\t\t\t\t// No need for content-type since body is null,\n\t\t\t\t\tAuthorization: 'Bearer ' + userAuthContext.userToken\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tif (responseStatus === 200) {\n\t\t\t\t// remove entry from localStorage\n\t\t\t\tlet userData = JSON.parse(localStorage.getItem('userData'));\n\t\t\t\tlet index = userData.userEntries.indexOf(entryId);\n\t\t\t\tuserData.userEntries.splice(index, 1);\n\t\t\t\tlocalStorage.setItem('userData', JSON.stringify(userData));\n\t\t\t}\n\n\t\t\t// after deleting event, forward to eventManager, we do not want to send null event back\n\t\t\t// even we have a callback from EditEventManager\n\t\t\thistory.push(`/users/events/${userAuthContext.userId}`);\n\t\t} catch (err) {}\n\t};\n\n\tconst [submitButtonClass, setSubmitButtonClass] = useState(\n\t\t'small-block'\n\t);\n\tuseEffect(() => {\n\t\tif (onSite && stripePay) {\n\t\t\tsetSubmitButtonClass('small-block-onsite-stripe');\n\t\t} else if (stripePay) {\n\t\t\tsetSubmitButtonClass('small-block-stripe');\n\t\t} else {\n\t\t\t// onSite\n\t\t\tsetSubmitButtonClass('small-block');\n\t\t}\n\t}, [stripePay, onSite, setSubmitButtonClass]);\n\n\tconst eventForm = values => (\n\t\t<div className=\"event-form\">\n\t\t\t<div className=\"event-form-header\">\n\t\t\t\t{!editingMode && <h4>Event Submission</h4>}\n\t\t\t\t{editingMode && <h4>Payment Method</h4>}\n\t\t\t\t<hr className=\"event-form__hr\" />\n\t\t\t</div>\n\t\t\t<Formik\n\t\t\t\tenableReinitialize={true}\n\t\t\t\tinitialValues={initialValues}\n\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\tsubmitHandler(values);\n\t\t\t\t\tif (!actions.isSubmitting) {\n\t\t\t\t\t\tsetValidateDisclaimer(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\tconsole.log('error disclaimer');\n\t\t\t\t\t\t\t\terror =\n\t\t\t\t\t\t\t\t\t'You must agree with disclaimer to register event.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidatePaymentMethod(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\tconsole.log('error payment');\n\t\t\t\t\t\t\t\terror = 'You must select a payment method.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}}>\n\t\t\t\t{({\n\t\t\t\t\tvalues,\n\t\t\t\t\terrors,\n\t\t\t\t\tisSubmitting,\n\t\t\t\t\tisValid,\n\t\t\t\t\tdirty,\n\t\t\t\t\tsetFieldValue,\n\t\t\t\t\tsubmitted,\n\t\t\t\t\ttouched,\n\t\t\t\t\thandleBlur,\n\t\t\t\t\thandleChange,\n\t\t\t\t\tvalidate\n\t\t\t\t}) => (\n\t\t\t\t\t<Form className=\"event-form-container\">\n\t\t\t\t\t\t<label className=\"event-form__paymentmethod\">\n\t\t\t\t\t\t\tMySeatTime waiver <br />\n\t\t\t\t\t\t\tBy registering for this event, you acknowledge that all\n\t\t\t\t\t\t\tthe charges are handled by event organizers.\n\t\t\t\t\t\t\tMySeatTime.com does not handle transaction thus makes no\n\t\t\t\t\t\t\trefunds of any kind. View the MySeatTime.com terms for\n\t\t\t\t\t\t\tdetails.{' '}\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<label className=\"event-form__paymentmethod\">\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tname=\"acceptDisclaimer\"\n\t\t\t\t\t\t\t\tvalidate={validateDisclaimer}\n\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tdisabled={editingMode}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t&nbsp; I accept the charge and cancellation terms and\n\t\t\t\t\t\t\tconditions.\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<b className=\"event-form__checkbox\">\n\t\t\t\t\t\t\tTotal Entry Due: ${entryFee}\n\t\t\t\t\t\t</b>\n\t\t\t\t\t\t<b className=\"event-form__checkbox\">\n\t\t\t\t\t\t\t{paymentStatusMessage()}\n\t\t\t\t\t\t</b>\n\t\t\t\t\t\t{stripePay && onSite && (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tid=\"paymentMethod\"\n\t\t\t\t\t\t\t\tclassName=\"event-form__paymentmethod\">\n\t\t\t\t\t\t\t\tPlease Select Payment Methord:\n\t\t\t\t\t\t\t\t<div role=\"group\" aria-labelledby=\"paymentMethod\">\n\t\t\t\t\t\t\t\t\t<label className=\"event-form__field_paymentOption\">\n\t\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\t\tlable=\"On-Site Payment\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"paymentMethod\"\n\t\t\t\t\t\t\t\t\t\t\tvalue=\"onSite\"\n\t\t\t\t\t\t\t\t\t\t\tvalidate={validatePaymentMethod}\n\t\t\t\t\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\t\t\t\t\t(stripePay && stripePaymentMethodId) ||\n\t\t\t\t\t\t\t\t\t\t\t\tdisableOnSite(paymentStatus)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tchecked={values.paymentMethod === 'onSite'}\n\t\t\t\t\t\t\t\t\t\t\tonChange={event => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue('paymentMethod', 'onSite');\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(event);\n\t\t\t\t\t\t\t\t\t\t\t\tsetHideCCField(true);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp; On-Site Payment &nbsp;&nbsp;\n\t\t\t\t\t\t\t\t\t\t<i className=\"fal fa-money-bill fa-2x \" />\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<label className=\"event-form__field_paymentOption\">\n\t\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Stripe\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"paymentMethod\"\n\t\t\t\t\t\t\t\t\t\t\tvalue=\"stripe\"\n\t\t\t\t\t\t\t\t\t\t\tvalidate={validatePaymentMethod}\n\t\t\t\t\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\t\t\t\t\t(stripePay && stripePaymentMethodId) ||\n\t\t\t\t\t\t\t\t\t\t\t\tdisableStripe(paymentStatus)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tchecked={values.paymentMethod === 'stripe'}\n\t\t\t\t\t\t\t\t\t\t\tonChange={event => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue('paymentMethod', 'stripe');\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(event);\n\t\t\t\t\t\t\t\t\t\t\t\tsetHideCCField(false);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>{' '}\n\t\t\t\t\t\t\t\t\t\tStripe &nbsp;\n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\tsrc={STRIPE}\n\t\t\t\t\t\t\t\t\t\t\talt=\"Stripe\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"stripe\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t{!hideCCField && !disableStripe(paymentStatus) && (\n\t\t\t\t\t\t\t\t\t\t<div className=\"\">\n\t\t\t\t\t\t\t\t\t\t\t<label className=\"event-form__label\">\n\t\t\t\t\t\t\t\t\t\t\t\tCharge will be made by event organizer. Credit\n\t\t\t\t\t\t\t\t\t\t\t\tcard information is saved at Stripe.\n\t\t\t\t\t\t\t\t\t\t\t\tMYSeatTime does not store credit card\n\t\t\t\t\t\t\t\t\t\t\t\tinformation.{' '}\n\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t<Elements stripe={stripePromise}>\n\t\t\t\t\t\t\t\t\t\t\t\t<CardSetupForm\n\t\t\t\t\t\t\t\t\t\t\t\t\tuserName={userName}\n\t\t\t\t\t\t\t\t\t\t\t\t\temail={email}\n\t\t\t\t\t\t\t\t\t\t\t\t\teventId={eventId}\n\t\t\t\t\t\t\t\t\t\t\t\t\tgetStripePaymentMethodId={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetStripePaymentMethodId\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tgetStripeError={getStripeError}\n\t\t\t\t\t\t\t\t\t\t\t\t\tgetStripeSetupIntentId={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetStripeSetupIntentId\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Elements>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t{showAuthentication && (\n\t\t\t\t\t\t\t\t\t\t<Elements stripe={stripePromise}>\n\t\t\t\t\t\t\t\t\t\t\t<CardAuthentication\n\t\t\t\t\t\t\t\t\t\t\t\tentryId={entryId}\n\t\t\t\t\t\t\t\t\t\t\t\tupdatePaymentStatus={updatePaymentStatus}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Elements>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{stripePay && !onSite && (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tid=\"paymentMethod\"\n\t\t\t\t\t\t\t\tclassName=\"event-form__paymentmethod\">\n\t\t\t\t\t\t\t\tPlease Select Payment Methord:\n\t\t\t\t\t\t\t\t<div role=\"group\" aria-labelledby=\"paymentMethod\">\n\t\t\t\t\t\t\t\t\t<label className=\"event-form__field_radio\">\n\t\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"paymentMethod\"\n\t\t\t\t\t\t\t\t\t\t\tvalue=\"stripe\"\n\t\t\t\t\t\t\t\t\t\t\tvalidate={validatePaymentMethod}\n\t\t\t\t\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\t\t\t\t\t(stripePay && stripePaymentMethodId) ||\n\t\t\t\t\t\t\t\t\t\t\t\tdisableStripe(paymentStatus)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tchecked={values.paymentMethod === 'stripe'}\n\t\t\t\t\t\t\t\t\t\t\tonChange={event => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue('paymentMethod', 'stripe');\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(event);\n\t\t\t\t\t\t\t\t\t\t\t\tsetHideCCField(false);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>{' '}\n\t\t\t\t\t\t\t\t\t\tStripe &nbsp;\n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\tsrc={STRIPE}\n\t\t\t\t\t\t\t\t\t\t\talt=\"Stripe\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"stripe\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t{!hideCCField && !disableStripe(paymentStatus) && (\n\t\t\t\t\t\t\t\t\t\t<div className=\"\">\n\t\t\t\t\t\t\t\t\t\t\t<label className=\"event-form__label\">\n\t\t\t\t\t\t\t\t\t\t\t\tCharge will be made by event organizer. Credit\n\t\t\t\t\t\t\t\t\t\t\t\tcard information is saved at Stripe.\n\t\t\t\t\t\t\t\t\t\t\t\tMYSeatTime does not store credit card\n\t\t\t\t\t\t\t\t\t\t\t\tinformation.{' '}\n\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t<Elements stripe={stripePromise}>\n\t\t\t\t\t\t\t\t\t\t\t\t<CardSetupForm\n\t\t\t\t\t\t\t\t\t\t\t\t\tuserName={userName}\n\t\t\t\t\t\t\t\t\t\t\t\t\temail={email}\n\t\t\t\t\t\t\t\t\t\t\t\t\teventId={eventId}\n\t\t\t\t\t\t\t\t\t\t\t\t\tgetStripePaymentMethodId={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetStripePaymentMethodId\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tgetStripeError={getStripeError}\n\t\t\t\t\t\t\t\t\t\t\t\t\tgetStripeSetupIntentId={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetStripeSetupIntentId\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Elements>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{!stripePay && onSite && (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tid=\"paymentMethod\"\n\t\t\t\t\t\t\t\tclassName=\"event-form__checkbox\">\n\t\t\t\t\t\t\t\tPlease Select Payment Methord:\n\t\t\t\t\t\t\t\t<div role=\"group\" aria-labelledby=\"paymentMethod\">\n\t\t\t\t\t\t\t\t\t<label className=\"event-form__field_radio\">\n\t\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"paymentMethod\"\n\t\t\t\t\t\t\t\t\t\t\tvalue=\"onSite\"\n\t\t\t\t\t\t\t\t\t\t\tvalidate={validatePaymentMethod}\n\t\t\t\t\t\t\t\t\t\t\tdisabled={disableOnSite(paymentStatus)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;\n\t\t\t\t\t\t\t\t\t\t<i className=\"fal fa-money-bill fa-2x \" />\n\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp; On-Site\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{/* cannot add !dirty here because Stripe Element is not part of our form*/}\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tsize=\"small-block-payment\"\n\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\tisSubmitting ||\n\t\t\t\t\t\t\t\t!isValid ||\n\t\t\t\t\t\t\t\tsubmitted ||\n\t\t\t\t\t\t\t\t(values.paymentMethod === 'stripe' &&\n\t\t\t\t\t\t\t\t\tstripePay &&\n\t\t\t\t\t\t\t\t\t!stripePaymentMethodId)\n\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\tSUBMIT\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t{editingMode && !disableCancel(paymentStatus) && (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\tsize=\"small-block-warning\"\n\t\t\t\t\t\t\t\tmargin-left=\"1.5rem\"\n\t\t\t\t\t\t\t\tdisabled={isSubmitting || !isValid}\n\t\t\t\t\t\t\t\tonClick={openDELHandler}>\n\t\t\t\t\t\t\t\tCANCEL REGISTRATION\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{(editingMode || succeed) && (\n\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\tto={{\n\t\t\t\t\t\t\t\t\tpathname: `/events/entrylist/${eventId}`,\n\t\t\t\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\t\t\t\tdisplayName: true,\n\t\t\t\t\t\t\t\t\t\teventName: eventName,\n\t\t\t\t\t\t\t\t\t\teventId: eventId\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tclassName=\"event-form__link\">\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\tsize=\"small-block\"\n\t\t\t\t\t\t\t\t\tmargin-left=\"1.5rem\"\n\t\t\t\t\t\t\t\t\tdisabled={!editingMode && !succeed}>\n\t\t\t\t\t\t\t\t\tVIEW EVENT ENTRY LIST\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<div className=\"event-form-errmsg\">\n\t\t\t\t\t\t\t{statusMessage && <p> {statusMessage} </p>}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<NavigationPrompt\n\t\t\t\t\t\t\tafterConfirm={() => {\n\t\t\t\t\t\t\t\tformContext.setIsInsideForm(false);\n\t\t\t\t\t\t\t\tremoveEventFormData();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t// Confirm navigation if going to a path that does not start with current path.\n\t\t\t\t\t\t\t// We don't want to confirm navigation when OKLeavePage === true and redirect to '/clubs/auth' due to\n\t\t\t\t\t\t\t// authentication issue\n\t\t\t\t\t\t\twhen={(crntLocation, nextLocation) => {\n\t\t\t\t\t\t\t\t// remove UserRedirectURL from memory\n\t\t\t\t\t\t\t\tuserAuthContext.setUserRedirectURL(null);\n\t\t\t\t\t\t\t\t// OKLeavePage meaning form was not touched yet\n\t\t\t\t\t\t\t\tif (OKLeavePage) {\n\t\t\t\t\t\t\t\t\tformContext.setIsInsideForm(false);\n\t\t\t\t\t\t\t\t\tremoveEventFormData();\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// nextLocation.pathname !== '/clubs/auth' &&  --- adding this line causing state update on an\n\t\t\t\t\t\t\t\t\t// unmounted component issue.  Without it, confirmation modal will pop up\n\t\t\t\t\t\t\t\t\t// always gives the warning, because we want to be able to\n\t\t\t\t\t\t\t\t\t// clear localStorage after confirm\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t!nextLocation ||\n\t\t\t\t\t\t\t\t\t\t!nextLocation.pathname.startsWith(\n\t\t\t\t\t\t\t\t\t\t\tcrntLocation.pathname\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t{({ isActive, onCancel, onConfirm }) => {\n\t\t\t\t\t\t\t\tif (isActive) {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<PromptModal\n\t\t\t\t\t\t\t\t\t\t\tonCancel={onCancel}\n\t\t\t\t\t\t\t\t\t\t\tonConfirm={onConfirm}\n\t\t\t\t\t\t\t\t\t\t\tcontentclassName=\"event-item__modal-content\"\n\t\t\t\t\t\t\t\t\t\t\tfooterclassName=\"event-item__modal-actions\"\n\t\t\t\t\t\t\t\t\t\t\terror=\"You sure want to leave? Unsaved data will be lost.\">\n\t\t\t\t\t\t\t\t\t\t\t{/* render props.children */}\n\t\t\t\t\t\t\t\t\t\t</PromptModal>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\tThis is probably an anti-pattern but ya know...\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t</NavigationPrompt>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t</div>\n\t);\n\n\tconst getStripeSetupIntentId = setupIntentId => {\n\t\t// send back to backend to save for future payment\n\t\tif (setupIntentId) {\n\t\t\tsetStripeSetupIntentId(setupIntentId);\n\t\t}\n\t};\n\n\tconst getStripePaymentMethodId = paymentMethodId => {\n\t\t// send back to backend to save for future payment\n\t\tif (paymentMethodId) {\n\t\t\tsetStripePaymentMethodId(paymentMethodId);\n\t\t}\n\t};\n\n\tconst getStripeError = error => {\n\t\t// send back to backend to save for future payment\n\t\tif (error) {\n\t\t\tconsole.log('stripeError = ', error);\n\t\t\tsetStripeError(error);\n\t\t}\n\t};\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t{showDELModal && (\n\t\t\t\t<Modal\n\t\t\t\t\tclassName=\"modal-delete\"\n\t\t\t\t\tshow={showDELModal}\n\t\t\t\t\tcontentClass=\"event-item__modal-delete\"\n\t\t\t\t\tonCancel={closeDELHandler}\n\t\t\t\t\theader=\"Warning!\"\n\t\t\t\t\tfooterClass=\"event-item__modal-actions\"\n\t\t\t\t\tfooter={\n\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t<Button inverse onClick={closeDELHandler}>\n\t\t\t\t\t\t\t\tNO\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button danger onClick={deleteHandler}>\n\t\t\t\t\t\t\t\tYES\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t}>\n\t\t\t\t\t<p className=\"modal__content\">\n\t\t\t\t\t\tDo you really want to cancel registration of {eventName}?\n\t\t\t\t\t\tIt cannot be recovered after cancellation.\n\t\t\t\t\t</p>\n\t\t\t\t</Modal>\n\t\t\t)}\n\t\t\t<ErrorModal error={foundError} onClear={clearErrorCallback} />\n\t\t\t{isLoading && (\n\t\t\t\t<div className=\"center\">\n\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{eventForm()}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default SubmitEntry;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/users/components/UserCarsItem.js",["648","649","650","651","652","653","654","655","656","657"],"import React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Avatar from '../../shared/components/UIElements/Avatar';\nimport Card from '../../shared/components/UIElements/Card';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { UserAuthContext } from '../../shared/context/auth-context';\n\nimport '../../shared/css/EventsItem.css';\nimport './UserCarsItem.css';\n\n// UserCarItem renders a card for each event\nconst UserCarsItem = props => {\n\tlet carSelector = props.carSelector;\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\tconst userAuthContext = useContext(UserAuthContext);\n\tconst [overlay, setOverlay] = useState();\n\n\tuseEffect(() => {\n\t\t// if props.entryCar is true meaning this car is used for event entry\n\t\tif (props.isEntryCar) {\n\t\t\tsetOverlay('ON DUTY');\n\t\t} else {\n\t\t\tif (props.active) {\n\t\t\t\tsetOverlay('ACTIVE');\n\t\t\t} else {\n\t\t\t\tsetOverlay('RETIRED');\n\t\t\t}\n\t\t}\n\t}, [props.isEntryCar, props.active, setOverlay]);\n\n\tconst submitHandler = () => {\n\t\tprops.carSelectorStatus(true);\n\t\tprops.carIdHandler(props.id);\n\t};\n\n\tconst [newEntry, setNewEntry] = useState();\n\n\tconst changeCarHandler = async () => {\n\t\ttry {\n\t\t\tconst [\n\t\t\t\tresponseData,\n\t\t\t\tresponseStatus,\n\t\t\t\tresponseMessage\n\t\t\t] = await sendRequest(\n\t\t\t\tprocess.env.REACT_APP_BACKEND_URL +\n\t\t\t\t\t`/entries/car/${props.entryId}`,\n\t\t\t\t'PATCH',\n\t\t\t\tJSON.stringify({ carId: props.id }),\n\t\t\t\t{\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t// adding JWT to header for authentication, JWT contains clubId\n\t\t\t\t\tAuthorization: 'Bearer ' + userAuthContext.userToken\n\t\t\t\t}\n\t\t\t);\n\t\t\tconsole.log('new Entry = ', responseData.entry);\n\t\t\tsetNewEntry(responseData.entry);\n\t\t\tprops.getNewEntry(responseData.entry);\n\t\t} catch (err) {}\n\t};\n\n\treturn (\n\t\t<li className=\"events-item\">\n\t\t\t<Card className=\"events-item__content\">\n\t\t\t\t{/* Display car in User garage */}\n\t\t\t\t{!carSelector && (\n\t\t\t\t\t<Link to={`/users/cars/${props.id}`}>\n\t\t\t\t\t\t<div className=\"events-item__image\">\n\t\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\t\timage={props.image}\n\t\t\t\t\t\t\t\talt={props.model}\n\t\t\t\t\t\t\t\tclassName=\"avatar__event\"\n\t\t\t\t\t\t\t\t// for car published is always true\n\t\t\t\t\t\t\t\tpublished={true}\n\t\t\t\t\t\t\t\tpublishDescription={overlay}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"events-item__info\">\n\t\t\t\t\t\t\t<h2>{props.year}</h2>\n\t\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\t\t{props.make}&nbsp;{props.model}&nbsp;{props.trimLevel}\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t{/* <h1>{props.model}</h1> */}\n\t\t\t\t\t\t\t{/* <h4>by {props.clubName}</h4> */}\n\t\t\t\t\t\t\t<h2></h2>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Link>\n\t\t\t\t)}\n\t\t\t\t{/* <Link to={`/users/cars/${props.id}`}> */}\n\t\t\t\t{/* Create buttion for selecting a car to enter an event */}\n\t\t\t\t{carSelector && props.isNewEntry && (\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"carselector-button\"\n\t\t\t\t\t\tonClick={submitHandler}>\n\t\t\t\t\t\t<div className=\"events-item__image\">\n\t\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\t\timage={props.image}\n\t\t\t\t\t\t\t\talt={props.model}\n\t\t\t\t\t\t\t\tclassName=\"avatar__event\"\n\t\t\t\t\t\t\t\t// for car published is always true\n\t\t\t\t\t\t\t\tpublished={true}\n\t\t\t\t\t\t\t\tpublishDescription={overlay}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"events-item__info\">\n\t\t\t\t\t\t\t<h2>{props.year}</h2>\n\t\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\t\t{props.make}&nbsp;{props.model}&nbsp;{props.trimLevel}\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t{/* <h1>{props.model}</h1> */}\n\t\t\t\t\t\t\t{/* <h4>by {props.clubName}</h4> */}\n\t\t\t\t\t\t\t<h2></h2>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\t\t\t\t{/* This is the car been entered to the event. We don't want to create a link for it*/}\n\t\t\t\t{carSelector && props.isEntryCar && !props.isNewEntry && (\n\t\t\t\t\t<button className=\"pickedcar-button\">\n\t\t\t\t\t\t<div className=\"events-item__image\">\n\t\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\t\timage={props.image}\n\t\t\t\t\t\t\t\talt={props.model}\n\t\t\t\t\t\t\t\tclassName=\"avatar__event\"\n\t\t\t\t\t\t\t\t// for car published is always true\n\t\t\t\t\t\t\t\tpublished={true}\n\t\t\t\t\t\t\t\tpublishDescription={overlay}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"events-item__info\">\n\t\t\t\t\t\t\t<h2>{props.year}</h2>\n\t\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\t\t{props.make}&nbsp;{props.model}&nbsp;{props.trimLevel}\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t{/* <h1>{props.model}</h1> */}\n\t\t\t\t\t\t\t{/* <h4>by {props.clubName}</h4> */}\n\t\t\t\t\t\t\t<h2></h2>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\t\t\t\t{carSelector && !props.isEntryCar && !props.isNewEntry && (\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"carselector-button\"\n\t\t\t\t\t\tonClick={changeCarHandler}>\n\t\t\t\t\t\t<div className=\"events-item__image\">\n\t\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\t\timage={props.image}\n\t\t\t\t\t\t\t\talt={props.model}\n\t\t\t\t\t\t\t\tclassName=\"avatar__event\"\n\t\t\t\t\t\t\t\t// for car published is always true\n\t\t\t\t\t\t\t\tpublished={true}\n\t\t\t\t\t\t\t\tpublishDescription={overlay}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"events-item__info\">\n\t\t\t\t\t\t\t<h2>{props.year}</h2>\n\t\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\t\t{props.make}&nbsp;{props.model}&nbsp;{props.trimLevel}\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t{/* <h1>{props.model}</h1> */}\n\t\t\t\t\t\t\t{/* <h4>by {props.clubName}</h4> */}\n\t\t\t\t\t\t\t<h2></h2>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\t\t\t</Card>\n\t\t</li>\n\t);\n};\n\nexport default UserCarsItem;\n",["658","659"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/pages/EventForm.js",["660","661","662","663","664","665","666","667","668"],"import React, { useState, useContext, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { ReactFormGenerator } from '../../formbuilder/src/index';\nimport { useParams } from 'react-router-dom';\n\nimport { useUserLoginValidation } from '../../shared/hooks/userLoginValidation-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { UserAuthContext } from '../../shared/context/auth-context';\n\nimport '../../shared/css/EventForm.css';\nconst EventForm = props => {\n\tlet eId = props.eventId;\n\tlet entryId = props.entryId;\n\tlet editingMode = props.editingMode;\n\n\tconst userAuthContext = useContext(UserAuthContext);\n\tconst [formData, setFormData] = useState();\n\tconst [formAnswer, setFormAnswer] = useState();\n\tconst [eventName, setEventName] = useState();\n\tconst [submittedEntry, setSubmittedEntry] = useState(false);\n\tconst [newEntry, setNewEntry] = useState();\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\n\t// this is a callback for ReactFormGenerator\n\tconst getNewEntry = newEntry => {\n\t\tprops.getNewEntry(newEntry);\n\t};\n\n\t// Check if userAuthContext.redirectURL is same as the path.\n\t// If they are the same meaning it's coming back from re-direction that user click on register event without logging in.\n\t// In this case, we want to skip login validation\n\tuseUserLoginValidation(`/events/form/${eId}`);\n\n\tlet location = useLocation();\n\tReact.useEffect(() => {\n\t\tlet path = location.pathname;\n\t\tlet redirectURL = userAuthContext.userRedirectURL;\n\t\tif (path === redirectURL) {\n\t\t\t// re-init redirectURL after re-direction route\n\t\t\tuserAuthContext.setUserRedirectURL(null);\n\t\t}\n\t}, [location, userAuthContext]);\n\n\tif (!eId || eId === 'error') {\n\t\t// possibly page refresh, look for localStorage\n\t\tconst storageData = JSON.parse(localStorage.getItem('eventData'));\n\t\tif (storageData && storageData.eId) {\n\t\t\teId = storageData.eId;\n\t\t\t// Correct URL on browser, without it URL is showing '/events/form/error'\n\t\t\t// history.pushState(state object, title, url) 'title' is ignored in most browsers\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/API/History/pushState\n\t\t\twindow.history.pushState(\n\t\t\t\t// props.state,\n\t\t\t\t'',\n\t\t\t\t`/events/newentry/${eId}`\n\t\t\t);\n\t\t}\n\t} else {\n\t\t// set eId to localStorage for potential page refresh\n\t\t// we will remove it when the form gets submitted\n\t\t// @todo remove data when user leaves this page\n\t\tlocalStorage.setItem(\n\t\t\t'eventData',\n\t\t\tJSON.stringify({\n\t\t\t\teId: eId\n\t\t\t})\n\t\t);\n\t}\n\n\t// // combine eId and uId to send to backend,\n\t// // url is /events/form/:eId/:uId\n\t// let url = '/events/form/' + eId;\n\t// const storageData = JSON.parse(localStorage.getItem('userData'));\n\t// if (storageData && storageData.userId) {\n\t// \turl += '/' + storageData.userId;\n\t// }\n\n\tuseEffect(() => {\n\t\tlet mounted = true;\n\t\tconst fetchForm = async () => {\n\t\t\ttry {\n\t\t\t\tif (editingMode) {\n\t\t\t\t\tconst [\n\t\t\t\t\t\tresponseData,\n\t\t\t\t\t\tresponseStatus,\n\t\t\t\t\t\tresponseMessage\n\t\t\t\t\t] = await sendRequest(\n\t\t\t\t\t\t// process.env.REACT_APP_BACKEND_URL + `/events/form/${eId}`,\n\t\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL +\n\t\t\t\t\t\t\t`/users/formWithAnswer/${eId}`,\n\t\t\t\t\t\t'GET',\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// adding JWT to header for authentication, JWT contains clubId\n\t\t\t\t\t\t\tAuthorization: 'Bearer ' + userAuthContext.userToken\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tif (responseData) {\n\t\t\t\t\t\tsetEventName(responseData.eventName);\n\t\t\t\t\t\tsetNewEntry(responseData.entry);\n\t\t\t\t\t\tsetFormAnswer(responseData.entry.answer);\n\t\t\t\t\t\tsetFormData(responseData.entryFormData);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst [\n\t\t\t\t\t\tresponseData,\n\t\t\t\t\t\tresponseStatus,\n\t\t\t\t\t\tresponseMessage\n\t\t\t\t\t] = await sendRequest(\n\t\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL + `/users/form/${eId}`,\n\t\t\t\t\t\t'GET',\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// adding JWT to header for authentication, JWT contains clubId\n\t\t\t\t\t\t\tAuthorization: 'Bearer ' + userAuthContext.userToken\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tif (responseData) {\n\t\t\t\t\t\tsetEventName(responseData.eventName);\n\t\t\t\t\t\tsetFormData(responseData.entryFormData);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log('err = ', err);\n\t\t\t}\n\t\t};\n\n\t\tfetchForm();\n\t\treturn () => {\n\t\t\tmounted = false;\n\t\t};\n\t}, [\n\t\tsendRequest,\n\t\teId,\n\t\tuserAuthContext.userToken,\n\t\tsetEventName,\n\t\tsetFormData,\n\t\tsetFormAnswer,\n\t\teditingMode\n\t]);\n\n\tuseEffect(() => {\n\t\tif (!editingMode && submittedEntry) {\n\t\t\t// return true back to NewEntryManager to move to Submit tab\n\t\t\tprops.eventFormStatus(true);\n\t\t} else if (editingMode && newEntry) {\n\t\t\tprops.getNewEntry(newEntry);\n\t\t}\n\t}, [submittedEntry, editingMode, newEntry]);\n\n\tconst getFormAnswer = answer => {\n\t\tsetFormAnswer(answer);\n\t};\n\n\tuseEffect(() => {\n\t\tif (!editingMode && formAnswer) {\n\t\t\tprops.returnFormAnswer(formAnswer);\n\t\t\tsetSubmittedEntry(true);\n\t\t}\n\t}, [formAnswer, props.returnFormAnswer, editingMode]);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t{isLoading && (\n\t\t\t\t<div className=\"center\">\n\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t\t{formData && formData.length > 0 && (\n\t\t\t\t<div className=\"event-formgenerator-container\">\n\t\t\t\t\t<div className=\"modal-content\">\n\t\t\t\t\t\t<ReactFormGenerator\n\t\t\t\t\t\t\tanswer_data={formAnswer}\n\t\t\t\t\t\t\taction_name={\n\t\t\t\t\t\t\t\teditingMode ? 'SUBMIT' : 'SUBMIT & CONTINUE'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdata={formData}\n\t\t\t\t\t\t\treturnFormAnswer={getFormAnswer}\n\t\t\t\t\t\t\tentryId={entryId}\n\t\t\t\t\t\t\teditingMode={editingMode}\n\t\t\t\t\t\t\tgetNewEntry={getNewEntry}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t// </div>\n\t\t\t)}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default EventForm;\n",["669","670"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/context/form-context.js",[],["671","672"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/UIElements/Card.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/pages/UpdateEventRegistration.js",["673","674","675","676","677","678","679","680","681","682","683","684","685","686","687","688","689","690","691"],"import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Field, Form, Formik } from 'formik';\nimport moment from 'moment';\nimport NavigationPrompt from 'react-router-navigation-prompt';\n\n// import { EditorState } from 'draft-js';\n// import { RichEditorExample } from '../components/RichEditor';\nimport 'draft-js/dist/Draft.css';\n\nimport { useClubLoginValidation } from '../../shared/hooks/clubLoginValidation-hook';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport Modal from '../../shared/components/UIElements/Modal';\nimport PromptModal from '../../shared/components/UIElements/PromptModal';\n\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { ClubAuthContext } from '../../shared/context/auth-context';\nimport { FormContext } from '../../shared/context/form-context';\n\nimport '../../shared/css/EventForm.css';\n\nconst UpdateEventRegistration = props => {\n\tconst history = useHistory();\n\tlet eventId = props.event.id;\n\tconst [initialized, setInitialized] = useState(false);\n\tconst clubAuthContext = useContext(ClubAuthContext);\n\tconst clubId = clubAuthContext.clubId;\n\tconst formContext = useContext(FormContext);\n\tconst [showSaveBtn, setShowSaveBtn] = useState(false);\n\tconst [published, setPublished] = useState(props.event.published);\n\tconst [publishBtnName, setPublishBtnName] = useState('PUBLISH');\n\tconst [registrationClosed, setRegistrationClosed] = useState(\n\t\tprops.event.closed\n\t);\n\n\t// controller of DELETE event modal\n\tconst [showDELModal, setShowDELModal] = useState(false);\n\tconst openDELHandler = () => {\n\t\tsetShowDELModal(true);\n\t};\n\tconst closeDELHandler = () => {\n\t\tsetShowDELModal(false);\n\t};\n\n\t// controller of close registration modal\n\tconst [showCloseRegModal, setShowCloseRegModal] = useState(false);\n\tconst openCloseRegHandler = () => {\n\t\tsetShowCloseRegModal(true);\n\t};\n\tconst closeCloseRegHandler = () => {\n\t\tsetShowCloseRegModal(false);\n\t};\n\n\t// controller of close registration modal\n\tconst [showOpenRegModal, setShowOpenRegModal] = useState(false);\n\tconst openOpenRegHandler = () => {\n\t\tsetShowOpenRegModal(true);\n\t};\n\tconst closeOpenRegHandler = () => {\n\t\tsetShowOpenRegModal(false);\n\t};\n\n\tuseEffect(() => {\n\t\tif (published) {\n\t\t\tsetPublishBtnName('PUBLISHED');\n\t\t}\n\t}, [published, publishBtnName, props]);\n\n\tuseEffect(() => {\n\t\tlet mounted = true;\n\t\tif (mounted) {\n\t\t\tformContext.setIsInsideForm(true);\n\t\t}\n\t\treturn () => {\n\t\t\tmounted = false;\n\t\t};\n\t}, [formContext]);\n\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\n\t// authentication check\n\tuseClubLoginValidation('/clubs/events/registration');\n\n\t// If we are re-directing to this page, we want to clear up clubRedirectURL\n\tlet location = useLocation();\n\tReact.useEffect(() => {\n\t\tlet path = location.pathname;\n\t\tlet clubRedirectURL = clubAuthContext.clubRedirectURL;\n\t\tif (path === clubRedirectURL) {\n\t\t\t// re-init redirectURL after re-direction route\n\t\t\tclubAuthContext.setClubRedirectURL(null);\n\t\t}\n\t}, [location, clubAuthContext]);\n\n\tconst [totalCap, setTotalCap] = useState('');\n\tconst [numGroups, setNumGroups] = useState('');\n\tconst [capDistribution, setCapDistribution] = useState('');\n\tconst [hostPrivateEvent, setHostPrivateEvent] = useState(false);\n\tconst [privateEvent, setPrivateEvent] = useState(false);\n\n\tuseEffect(() => {\n\t\tconst getClubAccount = async () => {\n\t\t\ttry {\n\t\t\t\tconst [\n\t\t\t\t\tresponseData,\n\t\t\t\t\tresponseStatus,\n\t\t\t\t\tresponseMessage\n\t\t\t\t] = await sendRequest(\n\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL +\n\t\t\t\t\t\t`/clubs/account/${clubId}`,\n\t\t\t\t\t'GET',\n\t\t\t\t\tnull,\n\t\t\t\t\t{\n\t\t\t\t\t\t// adding JWT to header for authentication\n\t\t\t\t\t\tAuthorization: 'Bearer ' + clubAuthContext.clubToken\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tsetHostPrivateEvent(\n\t\t\t\t\tresponseData.clubAccount.hostPrivateEvent\n\t\t\t\t);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log('err = ', err);\n\t\t\t}\n\t\t};\n\t\tgetClubAccount();\n\t}, []);\n\n\t// initialize local storage\n\t// Get the existing data\n\tvar eventFormData = localStorage.getItem('eventFormData');\n\n\t// If no existing data, create an array; otherwise retrieve it\n\teventFormData = eventFormData ? JSON.parse(eventFormData) : {};\n\n\tconst [OKLeavePage, setOKLeavePage] = useState(true);\n\t// local storage gets the higest priority\n\t// get from localStorage\n\tif (\n\t\t!initialized &&\n\t\teventFormData &&\n\t\tmoment(eventFormData.expirationDate) > moment()\n\t) {\n\t\tsetInitialized(true);\n\t\t// Form data\n\t\tif (eventFormData.totalCap) {\n\t\t\tsetTotalCap(eventFormData.totalCap);\n\t\t}\n\t\tif (eventFormData.numGroups) {\n\t\t\tsetNumGroups(eventFormData.numGroups);\n\t\t}\n\t\tif (eventFormData.capDistribution) {\n\t\t\tsetCapDistribution(eventFormData.capDistribution);\n\t\t}\n\t\tif (eventFormData.privateEvent) {\n\t\t\tsetPrivateEvent(eventFormData.privateEvent);\n\t\t}\n\t} else if (!initialized) {\n\t\tsetInitialized(true);\n\t\t// initialize localStorage\n\t\teventFormData['expirationDate'] = moment(\n\t\t\tmoment().add(1, 'days'),\n\t\t\tmoment.ISO_8601\n\t\t);\n\t\teventFormData['totalCap'] = '';\n\t\teventFormData['numGroups'] = '';\n\t\teventFormData['capDistribution'] = '';\n\t\teventFormData['privateEvent'] = '';\n\t\tlocalStorage.setItem(\n\t\t\t'eventFormData',\n\t\t\tJSON.stringify(eventFormData)\n\t\t);\n\t}\n\n\tconst removeEventFormData = () => {\n\t\tlocalStorage.removeItem('eventFormData');\n\t};\n\n\tconst initialValues = {\n\t\t// editorState: new EditorState.createEmpty(),\n\t\ttotalCap: props.event.totalCap,\n\t\tnumGroups: props.event.numGroups,\n\t\tcapDistribution: props.event.capDistribution,\n\t\tmultiDayEvent: props.event.multiDayEvent,\n\t\tprivateEvent: props.event.privateEvent\n\t};\n\n\tconst updateEventFormData = (key, value) => {\n\t\tconst storageData = JSON.parse(\n\t\t\tlocalStorage.getItem('eventFormData')\n\t\t);\n\t\tstorageData[key] = value;\n\t\tlocalStorage.setItem(\n\t\t\t'eventFormData',\n\t\t\tJSON.stringify(storageData)\n\t\t);\n\t};\n\n\tconst saveHandler = async (values, actions) => {\n\t\ttry {\n\t\t\tconst [\n\t\t\t\tresponseData,\n\t\t\t\tresponseStatus,\n\t\t\t\tresponseMessage\n\t\t\t] = await sendRequest(\n\t\t\t\tprocess.env.REACT_APP_BACKEND_URL +\n\t\t\t\t\t`/events/registration/${eventId}`,\n\t\t\t\t'PATCH',\n\t\t\t\tJSON.stringify({\n\t\t\t\t\ttotalCap: values.totalCap,\n\t\t\t\t\tnumGroups: values.numGroups,\n\t\t\t\t\tcapDistribution: values.capDistribution,\n\t\t\t\t\tmultiDayEvent: values.multiDayEvent,\n\t\t\t\t\tprivateEvent: values.privateEvent\n\t\t\t\t}),\n\t\t\t\t{\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t// adding JWT to header for authentication\n\t\t\t\t\tAuthorization: 'Bearer ' + clubAuthContext.clubToken\n\t\t\t\t}\n\t\t\t);\n\t\t\tsetOKLeavePage(true);\n\t\t\tsetPublished(false);\n\t\t\tsetShowSaveBtn(false);\n\t\t\tprops.returnNewEvent(responseData.event);\n\t\t} catch (err) {}\n\t};\n\n\t/***** Form Validation Section  *****/\n\tconst [validateTotalCap, setValidateTotalCap] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Total participants is required.';\n\t\t\t}\n\t\t\tlet numVal = parseInt(value);\n\t\t\tif (isNaN(numVal)) {\n\t\t\t\terror = 'Please inputer a number.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\n\tconst [validateNumGroups, setValidateNumGroups] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Number of groups is required.';\n\t\t\t}\n\t\t\tlet numVal = parseInt(value);\n\t\t\tif (isNaN(numVal)) {\n\t\t\t\terror = 'Please inputer a number.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\t/***** End of Form Validation *****/\n\n\tconst publishHandler = async () => {\n\t\ttry {\n\t\t\tconst [\n\t\t\t\tresponseData,\n\t\t\t\tresponseStatus,\n\t\t\t\tresponseMessage\n\t\t\t] = await sendRequest(\n\t\t\t\tprocess.env.REACT_APP_BACKEND_URL +\n\t\t\t\t\t`/clubs/publish/${eventId}`,\n\t\t\t\t'PATCH',\n\t\t\t\tJSON.stringify({ published: true }),\n\t\t\t\t{\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t// adding JWT to header for authentication\n\t\t\t\t\tAuthorization: 'Bearer ' + clubAuthContext.clubToken\n\t\t\t\t}\n\t\t\t);\n\t\t\tsetPublished(true);\n\t\t\tprops.returnNewEvent(responseData.event);\n\t\t} catch (err) {}\n\t};\n\n\tconst deleteHandler = async () => {\n\t\tsetShowDELModal(false);\n\t\ttry {\n\t\t\tconst [\n\t\t\t\tresponseData,\n\t\t\t\tresponseStatus,\n\t\t\t\tresponseMessage\n\t\t\t] = await sendRequest(\n\t\t\t\tprocess.env.REACT_APP_BACKEND_URL + `/events/${eventId}`,\n\t\t\t\t'DELETE',\n\t\t\t\tnull,\n\t\t\t\t{\n\t\t\t\t\t// No need for content-type since body is null,\n\t\t\t\t\tAuthorization: 'Bearer ' + clubAuthContext.clubToken\n\t\t\t\t}\n\t\t\t);\n\t\t\t// after deleting event, forward to eventManager, we do not want to send null event back\n\t\t\t// even we have a callback from EditEventManager\n\t\t\thistory.push(\n\t\t\t\t`/clubs/editEventSelector/${clubAuthContext.clubId}`\n\t\t\t);\n\t\t} catch (err) {}\n\t};\n\n\tconst closeRegHandler = async () => {\n\t\tsetShowCloseRegModal(false);\n\t\ttry {\n\t\t\tconst [\n\t\t\t\tresponseData,\n\t\t\t\tresponseStatus,\n\t\t\t\tresponseMessage\n\t\t\t] = await sendRequest(\n\t\t\t\tprocess.env.REACT_APP_BACKEND_URL +\n\t\t\t\t\t`/events/closeEventRegistration/${eventId}`,\n\t\t\t\t'PATCH',\n\t\t\t\tJSON.stringify({ closed: true }),\n\t\t\t\t{\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\tAuthorization: 'Bearer ' + clubAuthContext.clubToken\n\t\t\t\t}\n\t\t\t);\n\t\t\tsetRegistrationClosed(true);\n\t\t\tprops.returnNewEvent(responseData.event);\n\t\t} catch (err) {}\n\t};\n\n\tconst openRegHandler = async () => {\n\t\tsetShowOpenRegModal(false);\n\t\ttry {\n\t\t\tconst [\n\t\t\t\tresponseData,\n\t\t\t\tresponseStatus,\n\t\t\t\tresponseMessage\n\t\t\t] = await sendRequest(\n\t\t\t\tprocess.env.REACT_APP_BACKEND_URL +\n\t\t\t\t\t`/events/closeEventRegistration/${eventId}`,\n\t\t\t\t'PATCH',\n\t\t\t\tJSON.stringify({ closed: false }),\n\t\t\t\t{\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\tAuthorization: 'Bearer ' + clubAuthContext.clubToken\n\t\t\t\t}\n\t\t\t);\n\t\t\tsetRegistrationClosed(false);\n\t\t\tprops.returnNewEvent(responseData.event);\n\t\t} catch (err) {}\n\t};\n\n\tconst eventForm = values => (\n\t\t<div className=\"event-form\">\n\t\t\t<div className=\"event-form-header\">\n\t\t\t\t<h4>Please enter event registration information</h4>\n\t\t\t\t{/* <h5>&nbsp;All fields are required</h5> */}\n\t\t\t\t<hr className=\"event-form__hr\" />\n\t\t\t</div>\n\t\t\t<Formik\n\t\t\t\tenableReinitialize={true}\n\t\t\t\tinitialValues={initialValues}\n\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\tsaveHandler(values);\n\t\t\t\t\tif (!actions.isSubmitting) {\n\t\t\t\t\t\tsetValidateTotalCap(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Total number of participants is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlet numVal = parseInt(value);\n\t\t\t\t\t\t\tif (isNaN(numVal)) {\n\t\t\t\t\t\t\t\terror = 'Please inputer a number.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateNumGroups(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Number of groups is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlet numVal = parseInt(value);\n\t\t\t\t\t\t\tif (isNaN(numVal)) {\n\t\t\t\t\t\t\t\terror = 'Please inputer a number.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}}>\n\t\t\t\t{({\n\t\t\t\t\tvalues,\n\t\t\t\t\tdirty,\n\t\t\t\t\terrors,\n\t\t\t\t\tisSubmitting,\n\t\t\t\t\tisValid,\n\t\t\t\t\tsetFieldValue,\n\t\t\t\t\tsubmitted,\n\t\t\t\t\ttouched,\n\t\t\t\t\thandleBlur\n\t\t\t\t}) => (\n\t\t\t\t\t<Form className=\"event-form-container\">\n\t\t\t\t\t\t<label htmlFor=\"totalCap\" className=\"event-form__label\">\n\t\t\t\t\t\t\t<i className=\"fal fa-users\"></i>\n\t\t\t\t\t\t\t&nbsp; Total Participants\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"totalCap\"\n\t\t\t\t\t\t\tname=\"totalCap\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tvalidate={validateTotalCap}\n\t\t\t\t\t\t\tdisabled={published}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.name will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateEventFormData('totalCap', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\tsetShowSaveBtn(true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.totalCap && errors.totalCap && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error_quarter\">\n\t\t\t\t\t\t\t\t{errors.totalCap}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label htmlFor=\"numGroups\" className=\"event-form__label\">\n\t\t\t\t\t\t\t<i className=\"fal fa-users-class\"></i>\n\t\t\t\t\t\t\t&nbsp; Number of Groups\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"numGroups\"\n\t\t\t\t\t\t\tname=\"numGroups\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tvalidate={validateNumGroups}\n\t\t\t\t\t\t\tdisabled={published}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateEventFormData('numGroups', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\tsetShowSaveBtn(true);\n\t\t\t\t\t\t\t}}></Field>\n\t\t\t\t\t\t{touched.numGroups && errors.numGroups && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error_quarter\">\n\t\t\t\t\t\t\t\t{errors.numGroups}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label className=\"event-form__checkbox\">\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tid=\"capDistribution\"\n\t\t\t\t\t\t\t\tname=\"capDistribution\"\n\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\tdisabled={published}\n\t\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\t\tsetShowSaveBtn(true);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t&nbsp; Check the box if you want to evenly distribute\n\t\t\t\t\t\t\ttotal participant number to each group.\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t{props.event.multiDayEvent && (\n\t\t\t\t\t\t\t<label className=\"event-form__checkbox\">\n\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\tid=\"multiDayEvent\"\n\t\t\t\t\t\t\t\t\tname=\"multiDayEvent\"\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\tdisabled={published}\n\t\t\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tdisabled={true}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t&nbsp; You are creating a multiple day event. Please\n\t\t\t\t\t\t\t\tcheck the box if each day represent a single event.\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{hostPrivateEvent && (\n\t\t\t\t\t\t\t<label className=\"event-form__checkbox\">\n\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\tid=\"privateEvent\"\n\t\t\t\t\t\t\t\t\tname=\"privateEvent\"\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\tdisabled={published}\n\t\t\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t&nbsp; Check the box if this is a private event. (A\n\t\t\t\t\t\t\t\tprivate event is only visivle with the event link.)\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\tmargin-left=\"1.5rem\"\n\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\tisSubmitting || (!isValid && dirty) || !showSaveBtn\n\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\tSAVE\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\tmargin-left=\"1.5rem\"\n\t\t\t\t\t\t\tdisabled={published || showSaveBtn}\n\t\t\t\t\t\t\tonClick={publishHandler}>\n\t\t\t\t\t\t\t{publishBtnName}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\tmargin-left=\"1.5rem\"\n\t\t\t\t\t\t\tdisabled={published}\n\t\t\t\t\t\t\tonClick={openDELHandler}>\n\t\t\t\t\t\t\tDELETE\n\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t{published && !registrationClosed && (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\t\tmargin-left=\"1.5rem\"\n\t\t\t\t\t\t\t\tonClick={openCloseRegHandler}>\n\t\t\t\t\t\t\t\tClose Registration\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{published && registrationClosed && (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\t\tmargin-left=\"1.5rem\"\n\t\t\t\t\t\t\t\tonClick={openOpenRegHandler}>\n\t\t\t\t\t\t\t\tOpen Registration\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<NavigationPrompt\n\t\t\t\t\t\t\tafterConfirm={() => {\n\t\t\t\t\t\t\t\tformContext.setIsInsideForm(false);\n\t\t\t\t\t\t\t\tremoveEventFormData();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t// Confirm navigation if going to a path that does not start with current path.\n\t\t\t\t\t\t\t// We don't want to confirm navigation when OKLeavePage === true and redirect to '/clubs/auth' due to\n\t\t\t\t\t\t\t// authentication issue\n\t\t\t\t\t\t\twhen={(crntLocation, nextLocation) => {\n\t\t\t\t\t\t\t\t// remove ClubRedirectURL from memory\n\t\t\t\t\t\t\t\tclubAuthContext.setClubRedirectURL(null);\n\t\t\t\t\t\t\t\t// OKLeavePage meaning form was not touched yet\n\t\t\t\t\t\t\t\tif (OKLeavePage) {\n\t\t\t\t\t\t\t\t\tformContext.setIsInsideForm(false);\n\t\t\t\t\t\t\t\t\tremoveEventFormData();\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// nextLocation.pathname !== '/clubs/auth' &&  --- adding this line causing state update on an\n\t\t\t\t\t\t\t\t\t// unmounted component issue.  Without it, confirmation modal will pop up\n\t\t\t\t\t\t\t\t\t// always gives the warning, because we want to be able to\n\t\t\t\t\t\t\t\t\t// clear localStorage after confirm\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t!nextLocation ||\n\t\t\t\t\t\t\t\t\t\t!nextLocation.pathname.startsWith(\n\t\t\t\t\t\t\t\t\t\t\tcrntLocation.pathname\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t{({ isActive, onCancel, onConfirm }) => {\n\t\t\t\t\t\t\t\tif (isActive) {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<PromptModal\n\t\t\t\t\t\t\t\t\t\t\tonCancel={onCancel}\n\t\t\t\t\t\t\t\t\t\t\tonConfirm={onConfirm}\n\t\t\t\t\t\t\t\t\t\t\tcontentclassName=\"event-item__modal-content\"\n\t\t\t\t\t\t\t\t\t\t\tfooterclassName=\"event-item__modal-actions\"\n\t\t\t\t\t\t\t\t\t\t\terror=\"You sure want to leave? Unsaved data will be lost.\">\n\t\t\t\t\t\t\t\t\t\t\t{/* render props.children */}\n\t\t\t\t\t\t\t\t\t\t</PromptModal>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\tThis is probably an anti-pattern but ya know...\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t</NavigationPrompt>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t{showDELModal && (\n\t\t\t\t<Modal\n\t\t\t\t\tclassName=\"modal-delete\"\n\t\t\t\t\tshow={showDELModal}\n\t\t\t\t\tcontentClass=\"event-item__modal-delete\"\n\t\t\t\t\tonCancel={closeDELHandler}\n\t\t\t\t\theader=\"Warning!\"\n\t\t\t\t\tfooterClass=\"event-item__modal-actions\"\n\t\t\t\t\tfooter={\n\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t<Button inverse onClick={closeDELHandler}>\n\t\t\t\t\t\t\t\tCANCEL\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button danger onClick={deleteHandler}>\n\t\t\t\t\t\t\t\tDELETE\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t}>\n\t\t\t\t\t<p className=\"modal__content\">\n\t\t\t\t\t\tDo you really want to delete {props.event.name}? It cannot\n\t\t\t\t\t\tbe recovered after deletion.\n\t\t\t\t\t</p>\n\t\t\t\t</Modal>\n\t\t\t)}\n\t\t\t{showCloseRegModal && (\n\t\t\t\t<Modal\n\t\t\t\t\tclassName=\"modal-delete\"\n\t\t\t\t\tshow={showCloseRegModal}\n\t\t\t\t\tcontentClass=\"event-item__modal-delete\"\n\t\t\t\t\tonCancel={closeCloseRegHandler}\n\t\t\t\t\theader=\"Warning!\"\n\t\t\t\t\tfooterClass=\"event-item__modal-actions\"\n\t\t\t\t\tfooter={\n\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t<Button inverse onClick={closeCloseRegHandler}>\n\t\t\t\t\t\t\t\tCANCEL\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button danger onClick={closeRegHandler}>\n\t\t\t\t\t\t\t\tCLOSE REGISTRATION\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t}>\n\t\t\t\t\t<p className=\"modal__content\">\n\t\t\t\t\t\tPlease confirm you really want to close registration for{' '}\n\t\t\t\t\t\t{props.event.name}.\n\t\t\t\t\t</p>\n\t\t\t\t</Modal>\n\t\t\t)}\n\t\t\t{showOpenRegModal && (\n\t\t\t\t<Modal\n\t\t\t\t\tclassName=\"modal-delete\"\n\t\t\t\t\tshow={showOpenRegModal}\n\t\t\t\t\tcontentClass=\"event-item__modal-delete\"\n\t\t\t\t\tonCancel={closeOpenRegHandler}\n\t\t\t\t\theader=\"Warning!\"\n\t\t\t\t\tfooterClass=\"event-item__modal-actions\"\n\t\t\t\t\tfooter={\n\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t<Button inverse onClick={closeOpenRegHandler}>\n\t\t\t\t\t\t\t\tCANCEL\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button danger onClick={openRegHandler}>\n\t\t\t\t\t\t\t\tOPEN REGISTRATION\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t}>\n\t\t\t\t\t<p className=\"modal__content\">\n\t\t\t\t\t\tPlease confirm you really want to open registration for{' '}\n\t\t\t\t\t\t{props.event.name}.\n\t\t\t\t\t</p>\n\t\t\t\t</Modal>\n\t\t\t)}\n\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t{isLoading && (\n\t\t\t\t<div className=\"center\">\n\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{eventForm()}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default UpdateEventRegistration;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/FormElements/ImageUploader.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/entryDashboard/pages/EditClassification.js",["692","693","694"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/events/components/EventsItem.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/EntryReportManager.js",["695"],"import React, { useState } from 'react';\nimport EntryReport from './EntryReport';\nimport './ClubManager.css';\n\nconst EntryReportManager = props => {\n\tlet entryReportData = props.entryReportData;\n\tconst [eventName, setEventName] = useState(\n\t\tprops.entryReportData.eventName !== ''\n\t\t\t? props.entryReportData.eventName\n\t\t\t: ''\n\t);\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div className=\"list-header clearfix\">\n\t\t\t\t<div className=\"eventname\">\n\t\t\t\t\tEntry Report - {eventName} &nbsp;&nbsp;&nbsp;{' '}\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{/* Edit Event Manager Tabs*/}\n\t\t\t<div className=\"eventmanager\">\n\t\t\t\t<div className=\"dashboard-tabs activity-sections\">\n\t\t\t\t\t<div className=\"tab-content\">\n\t\t\t\t\t\t<EntryReport entryReportData={entryReportData} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default EntryReportManager;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/sortable-form-elements.jsx",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/dynamic-option-group.jsx",["696","697","698"],"/**\n * <DynamicOptionList />\n */\nimport React from 'react';\nimport ID from './UUID';\nimport {\n\tContentState,\n\tEditorState,\n\tconvertFromHTML,\n\tconvertToRaw\n} from 'draft-js';\n\nimport draftToHtml from 'draftjs-to-html';\nimport { Editor } from 'react-draft-wysiwyg';\nimport DynamicOptionList from './dynamic-option-list';\n\nconst toolbar = {\n\toptions: [\n\t\t'inline',\n\t\t'list',\n\t\t'textAlign',\n\t\t'fontSize',\n\t\t'link',\n\t\t'history'\n\t],\n\tinline: {\n\t\tinDropdown: false,\n\t\tclassName: undefined,\n\t\toptions: [\n\t\t\t'bold',\n\t\t\t'italic',\n\t\t\t'underline',\n\t\t\t'superscript',\n\t\t\t'subscript'\n\t\t]\n\t}\n};\n\nexport default class DynamicOptionGroup extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tconsole.log(\n\t\t\t'this.props.editElementProp = ',\n\t\t\tthis.props.editElementProp\n\t\t);\n\t\tconsole.log('this.props.element = ', this.props.element);\n\t\tconsole.log('this.props.data = ', this.props.data);\n\n\t\tthis.state = {\n\t\t\telement: this.props.element,\n\t\t\tdata: this.props.data,\n\t\t\tdirty: false,\n\t\t\tindex: this.props.index,\n\t\t\tparent: this.props.parent\n\t\t};\n\n\t\tconsole.log('57 this.state = ', this.state);\n\t}\n\n\t_setValue(text) {\n\t\treturn text.replace(/[^A-Z0-9]+/gi, '_').toLowerCase();\n\t}\n\n\teditElementProp(elemProperty, targProperty, e) {\n\t\t// elemProperty could be content or label\n\t\t// targProperty could be value or checked\n\t\tconst this_element = this.state.element;\n\t\tthis_element[elemProperty] = e.target[targProperty];\n\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\telement: this_element,\n\t\t\t\tdirty: true\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tif (targProperty === 'checked') {\n\t\t\t\t\tthis.updateElement();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\teditOption(option_index, e) {\n\t\tconsole.log('I am in editOption');\n\t\tconst this_element = this.state.element;\n\t\tconst val =\n\t\t\tthis_element.options[option_index].value !==\n\t\t\tthis._setValue(this_element.options[option_index].text)\n\t\t\t\t? this_element.options[option_index].value\n\t\t\t\t: this._setValue(e.target.value);\n\n\t\tthis_element.options[option_index].text = e.target.value;\n\t\tthis_element.options[option_index].value = val;\n\t\tthis.setState({\n\t\t\telement: this_element,\n\t\t\tdirty: true\n\t\t});\n\t}\n\n\teditValue(option_index, e) {\n\t\tconsole.log('I am in editValue');\n\t\tconst this_element = this.state.element;\n\t\tconst val =\n\t\t\te.target.value === ''\n\t\t\t\t? this._setValue(this_element.options[option_index].text)\n\t\t\t\t: e.target.value;\n\t\tthis_element.options[option_index].value = val;\n\t\tthis.setState({\n\t\t\telement: this_element,\n\t\t\tdirty: true\n\t\t});\n\t}\n\n\t// eslint-disable-next-line no-unused-vars\n\teditOptionCorrect(option_index, e) {\n\t\tconst this_element = this.state.element;\n\t\tif (\n\t\t\tthis_element.options[option_index].hasOwnProperty('correct')\n\t\t) {\n\t\t\tdelete this_element.options[option_index].correct;\n\t\t} else {\n\t\t\tthis_element.options[option_index].correct = true;\n\t\t}\n\t\tthis.setState({ element: this_element });\n\t\tthis.props.updateElement.call(this.props.preview, this_element);\n\t}\n\n\tupdateOption() {\n\t\tconsole.log('I am in updateOption');\n\t\tconst this_element = this.state.element;\n\t\t// to prevent ajax calls with no change\n\t\tif (this.state.dirty) {\n\t\t\tthis.props.updateElement.call(this.props.preview, this_element);\n\t\t\tthis.setState({ dirty: false });\n\t\t}\n\t}\n\n\taddOption(index) {\n\t\tconsole.log('in addOption');\n\t\tconsole.log('index = ', index);\n\t\tconsole.log('parent = ', this.props.parent);\n\t\tconsole.log('element = ', this.state.element);\n\n\t\t// adding a Radio Button to parent Group\n\t\t// Make a copy of this.state.element and modify properties\n\t\t// We need to use Deep Copy to make sure all the information is disconnected\n\t\t// between this.state.element and newItem\n\t\tlet newItem = JSON.parse(JSON.stringify(this.state.element));\n\n\t\t// parse parent text such as: \"Lunch Selection\"\n\t\t// get rid of SPACE in parent text + uuid\n\t\tnewItem.field_name =\n\t\t\tthis.props.parent.text.split(' ').join('') + '_' + ID.uuid();\n\t\tnewItem.id = ID.uuid();\n\t\tnewItem.parentId = this.props.parent.id;\n\n\t\tthis.props.parent.options.splice(index + 1, 0, newItem);\n\t\tconsole.log('this.props.parent = ', this.props.parent);\n\n\t\tthis.props.updateElement.call(\n\t\t\tthis.props.preview,\n\t\t\tthis.props.parent\n\t\t);\n\t}\n\n\tremoveOption(index) {\n\t\tconsole.log('remove index = ', index);\n\t\tconst this_element = this.state.element;\n\t\tconsole.log('this_element = ', this_element);\n\t\t// splice parent.options\n\t\tthis.props.parent.options.splice(index, 1);\n\t\tthis.props.updateElement.call(\n\t\t\tthis.props.preview,\n\t\t\tthis.props.parent\n\t\t);\n\t}\n\n\tupdateElement() {\n\t\tconst this_element = this.state.element;\n\t\tconsole.log('this_element = ', this_element);\n\t\t// to prevent ajax calls with no change\n\t\tconsole.log('this.props.preview = ', this.props.preview);\n\t\tconsole.log('this.props.parent = ', this.props.parent);\n\t\tconst { options } = this.state.parent;\n\t\tconsole.log('options = ', options);\n\t\tfor (let i = 0; i < options.length; ++i) {\n\t\t\tif (this_element.id === options[i].id) {\n\t\t\t\toptions[i] = this_element;\n\t\t\t\tconsole.log('parent 2 = ', this.state.parent);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (this.state.dirty) {\n\t\t\t// this.props.updateElement.call(this.props.preview, this_element);\n\t\t\tthis.props.updateElement.call(\n\t\t\t\tthis.props.preview,\n\t\t\t\tthis.state.parent\n\t\t\t);\n\t\t\tthis.setState({ dirty: false });\n\t\t}\n\t}\n\n\tconvertFromHTML(content) {\n\t\tconsole.log('content = ', content);\n\t\tconst newContent = convertFromHTML(content);\n\t\tif (\n\t\t\t!newContent.contentBlocks ||\n\t\t\t!newContent.contentBlocks.length\n\t\t) {\n\t\t\t// to prevent crash when no contents in editor\n\t\t\treturn EditorState.createEmpty();\n\t\t}\n\t\tconst contentState = ContentState.createFromBlockArray(\n\t\t\tnewContent\n\t\t);\n\t\treturn EditorState.createWithContent(contentState);\n\t}\n\n\tonEditorStateChange(index, property, editorContent) {\n\t\t// const html = draftToHtml(convertToRaw(editorContent.getCurrentContent())).replace(/<p>/g, '<div>').replace(/<\\/p>/g, '</div>');\n\t\tconst html = draftToHtml(\n\t\t\tconvertToRaw(editorContent.getCurrentContent())\n\t\t)\n\t\t\t.replace(/<p>/g, '')\n\t\t\t.replace(/<\\/p>/g, '')\n\t\t\t.replace(/(?:\\r\\n|\\r|\\n)/g, ' ');\n\t\tconst this_element = this.state.element;\n\n\t\tconsole.log('html = ', html);\n\t\tconsole.log('this.state = ', this.state);\n\t\tconsole.log('this_element = ', this_element);\n\n\t\tconsole.log('property = ', property);\n\t\tthis_element[property] = html;\n\t\tthis_element['text'] = html;\n\t\tthis.setState({\n\t\t\telement: this_element,\n\t\t\tdirty: true\n\t\t});\n\t\tconsole.log('this.state = ', this.state);\n\t}\n\n\trender() {\n\t\tif (this.state.dirty) {\n\t\t\tthis.state.element.dirty = true;\n\t\t}\n\n\t\tconst this_checked = this.props.hasOwnProperty('required')\n\t\t\t? this.props.required\n\t\t\t: false;\n\n\t\tconst this_checked_inline = this.props.hasOwnProperty('inline')\n\t\t\t? this.props.inline\n\t\t\t: false;\n\n\t\tconsole.log('this.props in 228 = ', this.props);\n\n\t\tlet editorState;\n\t\tif (this.props.element.hasOwnProperty('name')) {\n\t\t\tconsole.log('name this.props = ', this.props);\n\t\t\teditorState = this.convertFromHTML(this.props.element.name);\n\t\t}\n\t\tif (this.props.element.hasOwnProperty('content')) {\n\t\t\tconsole.log('content this.props = ', this.props);\n\t\t\teditorState = this.convertFromHTML(this.props.element.content);\n\t\t}\n\t\tif (this.props.element.hasOwnProperty('label')) {\n\t\t\tconsole.log('label this.props = ', this.props);\n\t\t\teditorState = this.convertFromHTML(this.props.element.label);\n\t\t}\n\t\tif (this.props.element.label) {\n\t\t\tconsole.log('label2 this.props = ', this.props.element.label);\n\t\t\teditorState = this.convertFromHTML(this.props.element.label);\n\t\t}\n\n\t\tconsole.log('ALL this.props = ', this.props);\n\t\tconsole.log('editorState = ', editorState);\n\t\treturn (\n\t\t\t<div className=\"form-group\">\n\t\t\t\t<label>Display Label &nbsp; &nbsp; &nbsp; &nbsp;</label>\n\t\t\t\t{/* <div className=\"col-sm-3\">\n\t\t\t\t\t<div className=\"dynamic-options-actions-buttons\"> */}\n\t\t\t\t<button\n\t\t\t\t\tonClick={this.addOption.bind(this, this.state.index)}\n\t\t\t\t\tclassName=\"btn btn-success\">\n\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\n\t\t\t\t</button>\n\t\t\t\t{this.state.index > 0 && (\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={this.removeOption.bind(this, this.state.index)}\n\t\t\t\t\t\tclassName=\"btn btn-danger\">\n\t\t\t\t\t\t<i className=\"fas fa-minus-circle\"></i>\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\t\t\t\t{/* </div>\n\t\t\t\t</div> */}\n\t\t\t\t<Editor\n\t\t\t\t\ttoolbar={toolbar}\n\t\t\t\t\tdefaultEditorState={editorState}\n\t\t\t\t\tonBlur={this.updateElement.bind(this)}\n\t\t\t\t\tonEditorStateChange={this.onEditorStateChange.bind(\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\t'label'\n\t\t\t\t\t)}\n\t\t\t\t\tstripPastedStyles={true}\n\t\t\t\t\tplaceholder=\"Please enter label\"\n\t\t\t\t\t// editorClassName=\"rdw-editor-label\"\n\t\t\t\t/>\n\t\t\t\t{(this.state.element.element === 'RadioButtons' ||\n\t\t\t\t\tthis.state.element.element === 'Checkboxes') && (\n\t\t\t\t\t// canHaveDisplayHorizontal &&\n\t\t\t\t\t<div className=\"custom-control custom-checkbox\">\n\t\t\t\t\t\t{/* this input is for Display Horizontally */}\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid=\"display-horizontal\"\n\t\t\t\t\t\t\tclassName=\"custom-control-input\"\n\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t// checked={this_checked_inline}\n\t\t\t\t\t\t\tvalue={true}\n\t\t\t\t\t\t\tonChange={this.editElementProp.bind(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'inline',\n\t\t\t\t\t\t\t\t'checked'\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<DynamicOptionList\n\t\t\t\t\t\t\tshowCorrectColumn={this.props.element.showCorrectColumn}\n\t\t\t\t\t\t\tcanHaveOptionCorrect={\n\t\t\t\t\t\t\t\tthis.state.element.canHaveOptionCorrect\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcanHaveOptionValue={\n\t\t\t\t\t\t\t\tthis.state.element.canHaveOptionValue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// data can be obtained from parent of this_element\n\t\t\t\t\t\t\t// we will just get from parent\n\t\t\t\t\t\t\tdata={this.props.data}\n\t\t\t\t\t\t\t// updateElement and preview are from parents, because this\n\t\t\t\t\t\t\t// is an option not a main component\n\t\t\t\t\t\t\tupdateElement={this.props.updateElement}\n\t\t\t\t\t\t\tpreview={this.props.preview}\n\t\t\t\t\t\t\telement={this.state.element}\n\t\t\t\t\t\t\tkey={this.props.element.options.length}\n\t\t\t\t\t\t\tparent={this.props.parent}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\tclassName=\"custom-control-label\"\n\t\t\t\t\t\t\thtmlFor=\"display-horizontal\">\n\t\t\t\t\t\t\tDisplay horizontally\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/utils/error.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/hooks/userLoginValidation-hook.js",[],["699","700"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/events/components/EventsList.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/components/EntryFormOptions.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/index.jsx",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/preview.jsx",["701","702"],"/**\n * <Preview />\n */\n\nimport React from 'react';\nimport update from 'immutability-helper';\nimport store from './stores/store';\nimport FormElementsEdit from './form-elements-edit';\nimport SortableFormElements from './sortable-form-elements';\nimport { couldStartTrivia } from 'typescript';\nimport { connect } from 'formik';\n\nconst { PlaceHolder } = SortableFormElements;\nconst DEBUG = process.env.DEBUG_MODE;\n\nexport default class Preview extends React.Component {\n\t_isMounted = false;\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tif (DEBUG) {\n\t\t\tconsole.log('props = ', props);\n\t\t}\n\t\tconst { onLoad, onPost } = props;\n\t\tstore.setExternalHandler(onLoad, onPost);\n\n\t\tthis.editForm = React.createRef();\n\t\tthis.state = {\n\t\t\tdata: [],\n\t\t\tanswer_data: {}\n\t\t};\n\t\tthis.seq = 0;\n\t\tconst onUpdate = this._onChange.bind(this);\n\t\tstore.subscribe(state => onUpdate(state.data));\n\n\t\tthis.moveCard = this.moveCard.bind(this);\n\t\tthis.insertCard = this.insertCard.bind(this);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (DEBUG) {\n\t\t\tconsole.log('componentWillReceiveProps');\n\t\t}\n\t\tif (this.props.data !== nextProps.data) {\n\t\t\tif (DEBUG) {\n\t\t\t\tconsole.log('nextProps.data = ', nextProps.data);\n\t\t\t}\n\t\t\tstore.dispatch('updateOrder', nextProps.data);\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif (DEBUG) {\n\t\t\tconsole.log('componentDidMount');\n\t\t}\n\t\tthis._isMounted = true;\n\t\tconst { data, url, saveUrl } = this.props;\n\t\tif (DEBUG) {\n\t\t\tconsole.log('componentDidMount data = ', data);\n\t\t}\n\t\tstore.dispatch('load', {\n\t\t\tloadUrl: url,\n\t\t\tsaveUrl,\n\t\t\tdata: data || []\n\t\t});\n\t\tdocument.addEventListener('mousedown', this.editModeOff);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis._isMounted = false;\n\t\tdocument.removeEventListener('mousedown', this.editModeOff);\n\t}\n\n\teditModeOff = e => {\n\t\tif (DEBUG) {\n\t\t\tconsole.log('editModeOff');\n\t\t}\n\t\tif (\n\t\t\tthis.editForm.current &&\n\t\t\t!this.editForm.current.contains(e.target)\n\t\t) {\n\t\t\tthis.manualEditModeOff();\n\t\t}\n\t};\n\n\tmanualEditModeOff = () => {\n\t\tif (DEBUG) {\n\t\t\tconsole.log('in manualEditOff ');\n\t\t}\n\t\tconst { editElement } = this.props;\n\t\tif (DEBUG) {\n\t\t\tconsole.log('editElement = ', editElement);\n\t\t}\n\t\tif (editElement && editElement.dirty) {\n\t\t\tif (DEBUG) {\n\t\t\t\tconsole.log('77 editElement dirty = ');\n\t\t\t}\n\t\t\teditElement.dirty = false;\n\t\t\tthis.updateElement(editElement);\n\t\t}\n\t\tthis.props.manualEditModeOff();\n\t};\n\n\t_setValue(text) {\n\t\tif (DEBUG) {\n\t\t\tconsole.log('_setValue');\n\t\t}\n\t\treturn text.replace(/[^A-Z0-9]+/gi, '_').toLowerCase();\n\t}\n\n\t// element: the component that needs to be updated\n\tupdateElement(element) {\n\t\tif (DEBUG) {\n\t\t\tconsole.log('in updateElement');\n\t\t\tconsole.log('element = ', element);\n\t\t}\n\t\t// this.state is the array that has all the components on the form\n\t\tconst { data } = this.state;\n\t\tif (DEBUG) {\n\t\t\tconsole.log('preview updateElement data = ', data);\n\t\t}\n\t\tlet found = false;\n\n\t\t// loop through all the components matching ID with element.id\n\t\t// if matches, update the component with new element\n\t\tfor (let i = 0, len = data.length; i < len; i++) {\n\t\t\tif (element.id === data[i].id) {\n\t\t\t\tdata[i] = element;\n\t\t\t\tif (DEBUG) {\n\t\t\t\t\tconsole.log('found updateElement');\n\t\t\t\t}\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// else if (element.parentId === data[i].id) {\n\t\t\t// \tconsole.log('Found parent');\n\t\t\t// \tconsole.log('i = ', i);\n\t\t\t// \t// for nested component, to add a new RadioButtons option\n\t\t\t// \t// element is the RadioButtons\n\t\t\t// \tdata[i].options.push(element);\n\t\t\t// \tconsole.log('data = ', data);\n\t\t\t// \tfound = true;\n\t\t\t// \tbreak;\n\t\t\t// } else if (data[i].nested) {\n\t\t\t// \t// for nested component, we need to match its option items with\n\t\t\t// \t// elment because element could be option component.\n\t\t\t// \tfor (let j = 0; j < data[i].options.length; ++j) {\n\t\t\t// \t\tif (data[i].options[j].id === element.id) {\n\t\t\t// \t\t\tdata[i].options[j] = element;\n\t\t\t// \t\t\tfound = true;\n\t\t\t// \t\t\tbreak;\n\t\t\t// \t\t}\n\t\t\t// \t}\n\t\t\t// }\n\t\t}\n\n\t\tif (found) {\n\t\t\tthis.seq = this.seq > 100000 ? 0 : this.seq + 1;\n\t\t\t// change the state tree\n\t\t\tstore.dispatch('updateOrder', data);\n\t\t}\n\t}\n\n\t_onChange(data) {\n\t\tif (DEBUG) {\n\t\t\tconsole.log('_onChange');\n\t\t}\n\t\tif (!this._isMounted) {\n\t\t\treturn;\n\t\t}\n\t\tconst answer_data = {};\n\n\t\tif (!data || data.entryFormData === '[]') {\n\t\t\treturn;\n\t\t}\n\n\t\tif (DEBUG) {\n\t\t\tconsole.log('data = ', data);\n\t\t}\n\t\tdata.forEach(item => {\n\t\t\tif (DEBUG) {\n\t\t\t\tconsole.log('item = ', item);\n\t\t\t}\n\t\t\tif (\n\t\t\t\titem &&\n\t\t\t\titem.readOnly &&\n\t\t\t\tthis.props.variables[item.variableKey]\n\t\t\t) {\n\t\t\t\tanswer_data[item.field_name] = this.props.variables[\n\t\t\t\t\titem.variableKey\n\t\t\t\t];\n\t\t\t}\n\t\t});\n\t\tif (this._isMounted) {\n\t\t\tthis.setState({\n\t\t\t\tdata,\n\t\t\t\tanswer_data\n\t\t\t});\n\t\t}\n\t}\n\n\t_onDestroy(item) {\n\t\tstore.dispatch('delete', item);\n\t}\n\n\tinsertCard(item, hoverIndex) {\n\t\tif (DEBUG) {\n\t\t\tconsole.log('insertCard');\n\t\t\tconsole.log('item = ', item);\n\t\t}\n\t\tconst { data } = this.state;\n\t\tdata.splice(hoverIndex, 0, item);\n\t\tthis.saveData(item, hoverIndex, hoverIndex);\n\t}\n\n\tmoveCard(dragIndex, hoverIndex) {\n\t\tif (DEBUG) {\n\t\t\tconsole.log('moveCard');\n\t\t}\n\t\tconst { data } = this.state;\n\t\tconst dragCard = data[dragIndex];\n\t\tthis.saveData(dragCard, dragIndex, hoverIndex);\n\t}\n\n\t// eslint-disable-next-line no-unused-vars\n\tcardPlaceHolder(dragIndex, hoverIndex) {\n\t\t// Dummy\n\t}\n\n\tsaveData(dragCard, dragIndex, hoverIndex) {\n\t\tif (DEBUG) {\n\t\t\tconsole.log('saveData');\n\t\t}\n\t\tconst newData = update(this.state, {\n\t\t\tdata: {\n\t\t\t\t$splice: [\n\t\t\t\t\t[dragIndex, 1],\n\t\t\t\t\t[hoverIndex, 0, dragCard]\n\t\t\t\t]\n\t\t\t}\n\t\t});\n\t\tif (DEBUG) {\n\t\t\tconsole.log('newData = ', newData);\n\t\t}\n\t\tthis.setState(newData);\n\t\tstore.dispatch('updateOrder', newData.data);\n\t}\n\n\tgetElement(item, index) {\n\t\tif (DEBUG) {\n\t\t\tconsole.log('in getElement item = ', item);\n\t\t}\n\t\tconst SortableFormElement = SortableFormElements[item.element];\n\t\tif (DEBUG) {\n\t\t\tconsole.log('item id = ', item.id);\n\t\t\tconsole.log('index = ', index);\n\t\t\tconsole.log('this.moveCard = ', this.moveCard);\n\t\t\tconsole.log('this.insertCard = ', this.insertCard);\n\t\t}\n\t\treturn (\n\t\t\t<SortableFormElement\n\t\t\t\tid={item.id}\n\t\t\t\tseq={this.seq}\n\t\t\t\tindex={index}\n\t\t\t\tmoveCard={this.moveCard}\n\t\t\t\tinsertCard={this.insertCard}\n\t\t\t\tmutable={false}\n\t\t\t\tparent={this.props.parent}\n\t\t\t\teditModeOn={this.props.editModeOn}\n\t\t\t\tisDraggable={true}\n\t\t\t\tkey={item.id}\n\t\t\t\tsortData={item.id}\n\t\t\t\tdata={item}\n\t\t\t\t_onDestroy={this._onDestroy}\n\t\t\t/>\n\t\t);\n\t}\n\n\trender() {\n\t\tif (DEBUG) {\n\t\t\tconsole.log(\n\t\t\t\t'235 this.props.editElement = ',\n\t\t\t\tthis.props.editElement\n\t\t\t);\n\t\t}\n\t\tlet classes = this.props.className;\n\t\tif (this.props.editMode) {\n\t\t\tclasses += ' is-editing';\n\t\t}\n\t\tconst data = this.state.data.filter(x => !!x);\n\t\tif (DEBUG) {\n\t\t\tconsole.log('data = ', data);\n\t\t}\n\t\tconst items = data.map((item, index) => {\n\t\t\tif (DEBUG) {\n\t\t\t\tconsole.log('item = ', item);\n\t\t\t}\n\t\t\treturn this.getElement(item, index);\n\t\t});\n\t\treturn (\n\t\t\t<div className={classes}>\n\t\t\t\t<div className=\"edit-form\" ref={this.editForm}>\n\t\t\t\t\t{this.props.editElement !== null && (\n\t\t\t\t\t\t<FormElementsEdit\n\t\t\t\t\t\t\tshowCorrectColumn={this.props.showCorrectColumn}\n\t\t\t\t\t\t\tfiles={this.props.files}\n\t\t\t\t\t\t\tmanualEditModeOff={this.manualEditModeOff}\n\t\t\t\t\t\t\tpreview={this}\n\t\t\t\t\t\t\telement={this.props.editElement}\n\t\t\t\t\t\t\tupdateElement={this.updateElement}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"Sortable\">{items}</div>\n\t\t\t\t<PlaceHolder\n\t\t\t\t\tid=\"form-place-holder\"\n\t\t\t\t\tshow={items.length === 0}\n\t\t\t\t\tindex={items.length}\n\t\t\t\t\tmoveCard={this.cardPlaceHolder}\n\t\t\t\t\tinsertCard={this.insertCard}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\nPreview.defaultProps = {\n\tshowCorrectColumn: false,\n\tfiles: [],\n\teditMode: false,\n\teditElement: null,\n\tclassName: 'react-form-builder-preview float-left'\n};\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/form-elements-edit.jsx",["703","704","705","706","707","708"],"import React from 'react';\nimport TextAreaAutosize from 'react-textarea-autosize';\nimport {\n\tContentState,\n\tEditorState,\n\tconvertFromHTML,\n\tconvertToRaw\n} from 'draft-js';\nimport draftToHtml from 'draftjs-to-html';\nimport { Editor } from 'react-draft-wysiwyg';\n\nimport DynamicOptionList from './dynamic-option-list';\nimport DynamicOptionListForGroup from './dynamic-option-group';\nimport { get } from './stores/requests';\n\nimport ID from './UUID';\n\nconst toolbar = {\n\toptions: [\n\t\t'inline',\n\t\t'list',\n\t\t'textAlign',\n\t\t'fontSize',\n\t\t'link',\n\t\t'history'\n\t],\n\tinline: {\n\t\tinDropdown: false,\n\t\tclassName: undefined,\n\t\toptions: [\n\t\t\t'bold',\n\t\t\t'italic',\n\t\t\t'underline',\n\t\t\t'superscript',\n\t\t\t'subscript'\n\t\t]\n\t}\n};\n\nconst DEBUG = process.env.DEBUG_MODE;\n\nexport default class FormElementsEdit extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tif (DEBUG) {\n\t\t\tconsole.log('props = ', props);\n\t\t}\n\t\tthis.state = {\n\t\t\telement: this.props.element,\n\t\t\tdata: this.props.data,\n\t\t\tdirty: false\n\t\t};\n\t}\n\n\ttoggleRequired() {\n\t\t// const this_element = this.state.element;\n\t}\n\n\teditElementProp(elemProperty, targProperty, e) {\n\t\tif (DEBUG) {\n\t\t\tconsole.log('editElementProp');\n\t\t}\n\t\t// elemProperty could be content or label\n\t\t// targProperty could be value or checked\n\t\tconst this_element = this.state.element;\n\t\tthis_element[elemProperty] = e.target[targProperty];\n\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\telement: this_element,\n\t\t\t\tdirty: true\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tif (targProperty === 'checked') {\n\t\t\t\t\tthis.updateElement();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\t// index: index number of the Editor in the component\n\t// property: field where Editor is such as \"label\"\n\t// editorContent: EditorState (Editor Object), we can use editorContent.getCurrentContent() to get current\n\t//  content in the editor\n\tonEditorStateChange(index, property, editorContent) {\n\t\tif (DEBUG) {\n\t\t\tconsole.log('onEditStateChange');\n\t\t\tconsole.log('property = ', property);\n\t\t\tconsole.log('index = ', index);\n\t\t\tconsole.log('editorContent = ', editorContent);\n\t\t}\n\t\t// html is something like <strong>Registration Options</strong>\n\t\tconst html = draftToHtml(\n\t\t\tconvertToRaw(editorContent.getCurrentContent())\n\t\t)\n\t\t\t.replace(/<p>/g, '')\n\t\t\t.replace(/<\\/p>/g, '')\n\t\t\t.replace(/(?:\\r\\n|\\r|\\n)/g, ' ');\n\n\t\tconst this_element = this.state.element;\n\t\tif (DEBUG) {\n\t\t\tconsole.log('this.state = ', this.state);\n\t\t\tconsole.log('this_element = ', this_element);\n\t\t}\n\t\tthis_element[property] = html;\n\t\tif (DEBUG) {\n\t\t\tconsole.log('html = ', html);\n\t\t\tconsole.log('this_element2 = ', this_element);\n\t\t\tconsole.log(\n\t\t\t\t'this_element[property] = ',\n\t\t\t\tthis_element[property]\n\t\t\t);\n\t\t}\n\t\tthis.setState({\n\t\t\telement: this_element,\n\t\t\tdirty: true\n\t\t});\n\t}\n\n\tupdateElement() {\n\t\tif (DEBUG) {\n\t\t\tconsole.log('updateElement');\n\t\t}\n\t\tconst this_element = this.state.element;\n\t\t// to prevent ajax calls with no change\n\t\tif (this.state.dirty) {\n\t\t\tif (DEBUG) {\n\t\t\t\tconsole.log(\n\t\t\t\t\t'this.props.updateElement = ',\n\t\t\t\t\tthis.props.updateElement\n\t\t\t\t);\n\t\t\t\tconsole.log('this.props.preview = ', this.props.preview);\n\t\t\t}\n\t\t\t// calls this.props.preview.updateElement\n\t\t\tthis.props.updateElement.call(this.props.preview, this_element);\n\t\t\tthis.setState({ dirty: false });\n\t\t}\n\t}\n\n\tconvertFromHTML(content) {\n\t\tif (DEBUG) {\n\t\t\tconsole.log('convertFromHTML');\n\t\t}\n\t\tconst newContent = convertFromHTML(content);\n\t\tif (\n\t\t\t!newContent.contentBlocks ||\n\t\t\t!newContent.contentBlocks.length\n\t\t) {\n\t\t\t// to prevent crash when no contents in editor\n\t\t\treturn EditorState.createEmpty();\n\t\t}\n\t\tconst contentState = ContentState.createFromBlockArray(\n\t\t\tnewContent\n\t\t);\n\t\treturn EditorState.createWithContent(contentState);\n\t}\n\n\t// this is for option canPopulateFromApi\n\t// addOptions() {\n\t// \tconst optionsApiUrl = document.getElementById('optionsApiUrl')\n\t// \t\t.value;\n\t// \tconsole.log('optionsApiUrl = ', optionsApiUrl);\n\t// \tif (optionsApiUrl) {\n\t// \t\tget(optionsApiUrl).then(data => {\n\t// \t\t\tthis.props.element.options = [];\n\t// \t\t\tconst { options } = this.props.element;\n\t// \t\t\tdata.forEach(x => {\n\t// \t\t\t\t// eslint-disable-next-line no-param-reassign\n\t// \t\t\t\tx.key = ID.uuid();\n\t// \t\t\t\toptions.push(x);\n\t// \t\t\t});\n\t// \t\t\tconst this_element = this.state.element;\n\t// \t\t\tthis.setState({\n\t// \t\t\t\telement: this_element,\n\t// \t\t\t\tdirty: true\n\t// \t\t\t});\n\t// \t\t});\n\t// \t}\n\t// }\n\n\tcreate(item) {\n\t\tconst elementOptions = {\n\t\t\tid: ID.uuid(),\n\t\t\telement: item.element || item.key,\n\t\t\ttext: item.name,\n\t\t\tstatic: item.static,\n\t\t\trequired: item.required ? item.required : false,\n\t\t\tshowDescription: item.showDescription,\n\t\t\tnested: item.nested\n\t\t};\n\n\t\tif (this.props.showDescription === true && !item.static) {\n\t\t\telementOptions.showDescription = true;\n\t\t}\n\n\t\tif (item.static) {\n\t\t\telementOptions.bold = false;\n\t\t\telementOptions.italic = false;\n\t\t}\n\n\t\tif (item.canHaveAnswer) {\n\t\t\telementOptions.canHaveAnswer = item.canHaveAnswer;\n\t\t}\n\n\t\tif (item.canReadOnly) {\n\t\t\telementOptions.readOnly = false;\n\t\t}\n\n\t\tif (item.canDefaultToday) {\n\t\t\telementOptions.defaultToday = false;\n\t\t}\n\n\t\tif (item.content) {\n\t\t\telementOptions.content = item.content;\n\t\t}\n\n\t\tif (item.href) {\n\t\t\telementOptions.href = item.href;\n\t\t}\n\n\t\telementOptions.canHavePageBreakBefore =\n\t\t\titem.canHavePageBreakBefore !== false;\n\t\telementOptions.canHaveAlternateForm =\n\t\t\titem.canHaveAlternateForm !== false;\n\t\telementOptions.canHaveDisplayHorizontal =\n\t\t\titem.canHaveDisplayHorizontal !== false;\n\t\telementOptions.canHaveOptionCorrect =\n\t\t\titem.canHaveOptionCorrect !== false;\n\t\telementOptions.canHaveOptionValue =\n\t\t\titem.canHaveOptionValue !== false;\n\t\telementOptions.canPopulateFromApi =\n\t\t\titem.canPopulateFromApi !== false;\n\n\t\tif (item.key === 'Image') {\n\t\t\telementOptions.src = item.src;\n\t\t}\n\n\t\tif (item.key === 'DatePicker') {\n\t\t\telementOptions.dateFormat = item.dateFormat;\n\t\t\telementOptions.timeFormat = item.timeFormat;\n\t\t\telementOptions.showTimeSelect = item.showTimeSelect;\n\t\t\telementOptions.showTimeSelectOnly = item.showTimeSelectOnly;\n\t\t}\n\n\t\tif (item.key === 'Download') {\n\t\t\telementOptions._href = item._href;\n\t\t\telementOptions.file_path = item.file_path;\n\t\t}\n\n\t\tif (item.key === 'Range') {\n\t\t\telementOptions.step = item.step;\n\t\t\telementOptions.default_value = item.default_value;\n\t\t\telementOptions.min_value = item.min_value;\n\t\t\telementOptions.max_value = item.max_value;\n\t\t\telementOptions.min_label = item.min_label;\n\t\t\telementOptions.max_label = item.max_label;\n\t\t}\n\n\t\tif (item.defaultValue) {\n\t\t\telementOptions.defaultValue = item.defaultValue;\n\t\t}\n\n\t\tif (item.field_name) {\n\t\t\telementOptions.field_name = item.field_name + ID.uuid();\n\t\t}\n\n\t\tif (item.label) {\n\t\t\telementOptions.label = item.label;\n\t\t}\n\n\t\t// we only want to use default item option if it's not defined\n\t\tif (item.options) {\n\t\t\t// if (item.options.length === 0) {\n\t\t\t// \telementOptions.options = Toolbar._defaultItemOptions(\n\t\t\t// \t\telementOptions.element\n\t\t\t// \t);\n\t\t\t// } else {\n\t\t\telementOptions.options = item.options;\n\t\t\t// }\n\t\t}\n\t\treturn elementOptions;\n\t}\n\n\trender() {\n\t\tif (this.state.dirty) {\n\t\t\tthis.props.element.dirty = true;\n\t\t}\n\n\t\tconst this_checked = this.props.element.hasOwnProperty('required')\n\t\t\t? this.props.element.required\n\t\t\t: false;\n\t\tconst this_read_only = this.props.element.hasOwnProperty(\n\t\t\t'readOnly'\n\t\t)\n\t\t\t? this.props.element.readOnly\n\t\t\t: false;\n\t\tconst this_default_today = this.props.element.hasOwnProperty(\n\t\t\t'defaultToday'\n\t\t)\n\t\t\t? this.props.element.defaultToday\n\t\t\t: false;\n\t\tconst this_show_time_select = this.props.element.hasOwnProperty(\n\t\t\t'showTimeSelect'\n\t\t)\n\t\t\t? this.props.element.showTimeSelect\n\t\t\t: false;\n\t\tconst this_show_time_select_only = this.props.element.hasOwnProperty(\n\t\t\t'showTimeSelectOnly'\n\t\t)\n\t\t\t? this.props.element.showTimeSelectOnly\n\t\t\t: false;\n\t\tconst this_checked_inline = this.props.element.hasOwnProperty(\n\t\t\t'inline'\n\t\t)\n\t\t\t? this.props.element.inline\n\t\t\t: false;\n\t\tconst this_checked_bold = this.props.element.hasOwnProperty(\n\t\t\t'bold'\n\t\t)\n\t\t\t? this.props.element.bold\n\t\t\t: false;\n\t\tconst this_checked_italic = this.props.element.hasOwnProperty(\n\t\t\t'italic'\n\t\t)\n\t\t\t? this.props.element.italic\n\t\t\t: false;\n\t\tconst this_checked_center = this.props.element.hasOwnProperty(\n\t\t\t'center'\n\t\t)\n\t\t\t? this.props.element.center\n\t\t\t: false;\n\t\tconst this_checked_page_break = this.props.element.hasOwnProperty(\n\t\t\t'pageBreakBefore'\n\t\t)\n\t\t\t? this.props.element.pageBreakBefore\n\t\t\t: false;\n\t\tconst this_checked_alternate_form = this.props.element.hasOwnProperty(\n\t\t\t'alternateForm'\n\t\t)\n\t\t\t? this.props.element.alternateForm\n\t\t\t: false;\n\n\t\tconst {\n\t\t\tcanHavePageBreakBefore,\n\t\t\tcanHaveAlternateForm,\n\t\t\tcanHaveDisplayHorizontal,\n\t\t\tcanHaveOptionCorrect,\n\t\t\tcanHaveOptionValue,\n\t\t\tnested\n\t\t} = this.props.element;\n\n\t\tconst this_files = this.props.files.length\n\t\t\t? this.props.files\n\t\t\t: [];\n\t\tif (\n\t\t\tthis_files.length < 1 ||\n\t\t\t(this_files.length > 0 && this_files[0].id !== '')\n\t\t) {\n\t\t\tthis_files.unshift({ id: '', file_name: '' });\n\t\t}\n\n\t\t// this.props.element is the option entity such as \"RadioButton\", \"MultipleRadioButtonGroup\"\n\t\t// get current text for text editor, we will use it to set as default text of Editor\n\t\tlet editorState;\n\t\tif (this.props.element.hasOwnProperty('name')) {\n\t\t\tif (DEBUG) {\n\t\t\t\tconsole.log('name = ', this.props.element.name);\n\t\t\t}\n\t\t\teditorState = this.convertFromHTML(this.props.element.name);\n\t\t}\n\t\tif (this.props.element.hasOwnProperty('content')) {\n\t\t\tif (DEBUG) {\n\t\t\t\tconsole.log('content = ', this.props.element.content);\n\t\t\t}\n\t\t\teditorState = this.convertFromHTML(this.props.element.content);\n\t\t}\n\t\tif (this.props.element.hasOwnProperty('label')) {\n\t\t\tif (DEBUG) {\n\t\t\t\tconsole.log('label = ', this.props.element.label);\n\t\t\t}\n\t\t\teditorState = this.convertFromHTML(this.props.element.label);\n\t\t}\n\t\tif (DEBUG) {\n\t\t\tconsole.log('this.state.element = ', this.state.element);\n\t\t\tconsole.log(\n\t\t\t\t'this.state.element.element = ',\n\t\t\t\tthis.state.element.element\n\t\t\t);\n\t\t\tconsole.log('this.editElementProp = ', this.editElementProp);\n\t\t}\n\n\t\t// deal with nested option such as MultipleRadioButtonGroup options,\n\t\t// each option of nested option, we need to create an object\n\t\tif (nested) {\n\t\t\tlet optionComponents = [];\n\t\t\tthis.props.element.options.map(opt => {\n\t\t\t\t// We only create the object if opt.text is unavailable.\n\t\t\t\t// Because create(item) will add \"text\", if opt.text is there meaning it's been\n\t\t\t\t// created\n\t\t\t\tif (!opt.text) {\n\t\t\t\t\tif (DEBUG) {\n\t\t\t\t\t\tconsole.log('371 opt = ', opt);\n\t\t\t\t\t}\n\t\t\t\t\t// Create option as an component because here option is also a component,\n\t\t\t\t\t// so it has all the componenet info.\n\t\t\t\t\tlet elementOption = this.create(opt);\n\t\t\t\t\tif (DEBUG) {\n\t\t\t\t\t\tconsole.log('elementOption = ', elementOption);\n\t\t\t\t\t}\n\t\t\t\t\toptionComponents.push(elementOption);\n\t\t\t\t} else {\n\t\t\t\t\toptionComponents.push(opt);\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.props.element.options = optionComponents;\n\t\t}\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"clearfix\">\n\t\t\t\t\t<h4 className=\"float-left\">{this.props.element.text}</h4>\n\t\t\t\t\t<i\n\t\t\t\t\t\tclassName=\"float-right fas fa-times dismiss-edit\"\n\t\t\t\t\t\tonClick={this.props.manualEditModeOff}></i>\n\t\t\t\t</div>\n\t\t\t\t{/* this section is for ParagraphCheckbox */}\n\t\t\t\t{this.props.element.hasOwnProperty('content') &&\n\t\t\t\t\tthis.props.element.hasOwnProperty('label') && (\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<label>Display Label</label>\n\t\t\t\t\t\t\t<Editor\n\t\t\t\t\t\t\t\ttoolbar={toolbar}\n\t\t\t\t\t\t\t\tdefaultEditorState={editorState}\n\t\t\t\t\t\t\t\tonBlur={this.updateElement.bind(this)}\n\t\t\t\t\t\t\t\tonEditorStateChange={this.onEditorStateChange.bind(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t'label'\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\tstripPastedStyles={true}\n\t\t\t\t\t\t\t\tplaceholder=\"Please enter label\"\n\t\t\t\t\t\t\t\teditorClassName=\"rdw-editor-label\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<label className=\"control-label\">Content:</label>\n\t\t\t\t\t\t\t<Editor\n\t\t\t\t\t\t\t\ttoolbar={toolbar}\n\t\t\t\t\t\t\t\tdefaultEditorState={this.convertFromHTML(\n\t\t\t\t\t\t\t\t\tthis.props.element.content\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\tonBlur={this.updateElement.bind(this)}\n\t\t\t\t\t\t\t\tonEditorStateChange={this.onEditorStateChange.bind(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t'content'\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\tstripPastedStyles={true}\n\t\t\t\t\t\t\t\teditorClassName=\"rdw-editor-content\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<div className=\"custom-control custom-checkbox\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tid=\"is-required\"\n\t\t\t\t\t\t\t\t\tclassName=\"custom-control-input\"\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\tchecked={this_checked}\n\t\t\t\t\t\t\t\t\tvalue={true}\n\t\t\t\t\t\t\t\t\tonChange={this.editElementProp.bind(\n\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\t'required',\n\t\t\t\t\t\t\t\t\t\t'checked'\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\tclassName=\"custom-control-label\"\n\t\t\t\t\t\t\t\t\thtmlFor=\"is-required\">\n\t\t\t\t\t\t\t\t\tRequired\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{(this.state.element.element === 'RadioButtons' ||\n\t\t\t\t\t\t\t\tthis.state.element.element === 'Checkboxes') &&\n\t\t\t\t\t\t\t\tcanHaveDisplayHorizontal && (\n\t\t\t\t\t\t\t\t\t<div className=\"custom-control custom-checkbox\">\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tid=\"display-horizontal\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"custom-control-input\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\tchecked={this_checked_inline}\n\t\t\t\t\t\t\t\t\t\t\tvalue={true}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.editElementProp.bind(\n\t\t\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\t\t\t'inline',\n\t\t\t\t\t\t\t\t\t\t\t\t'checked'\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"custom-control-label\"\n\t\t\t\t\t\t\t\t\t\t\thtmlFor=\"display-horizontal\">\n\t\t\t\t\t\t\t\t\t\t\tDisplay horizontally\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t{/* this section is for Paragraph */}\n\t\t\t\t{this.props.element.hasOwnProperty('content') &&\n\t\t\t\t\t!this.props.element.hasOwnProperty('label') && (\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<label className=\"control-label\">\n\t\t\t\t\t\t\t\tText to display:\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<Editor\n\t\t\t\t\t\t\t\ttoolbar={toolbar}\n\t\t\t\t\t\t\t\tdefaultEditorState={editorState}\n\t\t\t\t\t\t\t\tonBlur={this.updateElement.bind(this)}\n\t\t\t\t\t\t\t\tonEditorStateChange={this.onEditorStateChange.bind(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t'content'\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\tstripPastedStyles={true}\n\t\t\t\t\t\t\t\teditorClassName=\"rdw-editor-content\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t{this.props.element.hasOwnProperty('file_path') && (\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label className=\"control-label\" htmlFor=\"fileSelect\">\n\t\t\t\t\t\t\tChoose file:\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<select\n\t\t\t\t\t\t\tid=\"fileSelect\"\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tdefaultValue={this.props.element.file_path}\n\t\t\t\t\t\t\tonBlur={this.updateElement.bind(this)}\n\t\t\t\t\t\t\tonChange={this.editElementProp.bind(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'file_path',\n\t\t\t\t\t\t\t\t'value'\n\t\t\t\t\t\t\t)}>\n\t\t\t\t\t\t\t{this_files.map(file => {\n\t\t\t\t\t\t\t\tconst this_key = `file_${file.id}`;\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<option value={file.id} key={this_key}>\n\t\t\t\t\t\t\t\t\t\t{file.file_name}\n\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t{this.props.element.hasOwnProperty('href') && (\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<TextAreaAutosize\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tdefaultValue={this.props.element.href}\n\t\t\t\t\t\t\tonBlur={this.updateElement.bind(this)}\n\t\t\t\t\t\t\tonChange={this.editElementProp.bind(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'href',\n\t\t\t\t\t\t\t\t'value'\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t{this.props.element.hasOwnProperty('src') && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<label className=\"control-label\" htmlFor=\"srcInput\">\n\t\t\t\t\t\t\t\tLink to:\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tid=\"srcInput\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\tdefaultValue={this.props.element.src}\n\t\t\t\t\t\t\t\tonBlur={this.updateElement.bind(this)}\n\t\t\t\t\t\t\t\tonChange={this.editElementProp.bind(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'src',\n\t\t\t\t\t\t\t\t\t'value'\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<div className=\"custom-control custom-checkbox\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tid=\"do-center\"\n\t\t\t\t\t\t\t\t\tclassName=\"custom-control-input\"\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\tchecked={this_checked_center}\n\t\t\t\t\t\t\t\t\tvalue={true}\n\t\t\t\t\t\t\t\t\tonChange={this.editElementProp.bind(\n\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\t'center',\n\t\t\t\t\t\t\t\t\t\t'checked'\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\tclassName=\"custom-control-label\"\n\t\t\t\t\t\t\t\t\thtmlFor=\"do-center\">\n\t\t\t\t\t\t\t\t\tCenter?\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"col-sm-3\">\n\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\tclassName=\"control-label\"\n\t\t\t\t\t\t\t\t\thtmlFor=\"elementWidth\">\n\t\t\t\t\t\t\t\t\tWidth:\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tid=\"elementWidth\"\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t\tdefaultValue={this.props.element.width}\n\t\t\t\t\t\t\t\t\tonBlur={this.updateElement.bind(this)}\n\t\t\t\t\t\t\t\t\tonChange={this.editElementProp.bind(\n\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\t'width',\n\t\t\t\t\t\t\t\t\t\t'value'\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col-sm-3\">\n\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\tclassName=\"control-label\"\n\t\t\t\t\t\t\t\t\thtmlFor=\"elementHeight\">\n\t\t\t\t\t\t\t\t\tHeight:\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tid=\"elementHeight\"\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t\tdefaultValue={this.props.element.height}\n\t\t\t\t\t\t\t\t\tonBlur={this.updateElement.bind(this)}\n\t\t\t\t\t\t\t\t\tonChange={this.editElementProp.bind(\n\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\t'height',\n\t\t\t\t\t\t\t\t\t\t'value'\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t{/* this section is for Radioboxes or Checkboxes */}\n\t\t\t\t{!nested &&\n\t\t\t\t\tthis.props.element.hasOwnProperty('label') &&\n\t\t\t\t\t!this.props.element.hasOwnProperty('content') && (\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<label>Display Label</label>\n\t\t\t\t\t\t\t<Editor\n\t\t\t\t\t\t\t\ttoolbar={toolbar}\n\t\t\t\t\t\t\t\tdefaultEditorState={editorState}\n\t\t\t\t\t\t\t\tonBlur={this.updateElement.bind(this)}\n\t\t\t\t\t\t\t\tonEditorStateChange={this.onEditorStateChange.bind(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t'label'\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\tstripPastedStyles={true}\n\t\t\t\t\t\t\t\tplaceholder=\"Please enter label\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<div className=\"custom-control custom-checkbox\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tid=\"is-required\"\n\t\t\t\t\t\t\t\t\tclassName=\"custom-control-input\"\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\tchecked={this_checked}\n\t\t\t\t\t\t\t\t\tvalue={true}\n\t\t\t\t\t\t\t\t\tonChange={this.editElementProp.bind(\n\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\t'required',\n\t\t\t\t\t\t\t\t\t\t'checked'\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\tclassName=\"custom-control-label\"\n\t\t\t\t\t\t\t\t\thtmlFor=\"is-required\">\n\t\t\t\t\t\t\t\t\tRequired\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{this.props.element.hasOwnProperty('readOnly') && (\n\t\t\t\t\t\t\t\t<div className=\"custom-control custom-checkbox\">\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tid=\"is-read-only\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"custom-control-input\"\n\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\tchecked={this_read_only}\n\t\t\t\t\t\t\t\t\t\tvalue={true}\n\t\t\t\t\t\t\t\t\t\tonChange={this.editElementProp.bind(\n\t\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\t\t'readOnly',\n\t\t\t\t\t\t\t\t\t\t\t'checked'\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\t\tclassName=\"custom-control-label\"\n\t\t\t\t\t\t\t\t\t\thtmlFor=\"is-read-only\">\n\t\t\t\t\t\t\t\t\t\tRead only\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{this.props.element.hasOwnProperty('defaultToday') && (\n\t\t\t\t\t\t\t\t<div className=\"custom-control custom-checkbox\">\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tid=\"is-default-to-today\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"custom-control-input\"\n\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\tchecked={this_default_today}\n\t\t\t\t\t\t\t\t\t\tvalue={true}\n\t\t\t\t\t\t\t\t\t\tonChange={this.editElementProp.bind(\n\t\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\t\t'defaultToday',\n\t\t\t\t\t\t\t\t\t\t\t'checked'\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\t\tclassName=\"custom-control-label\"\n\t\t\t\t\t\t\t\t\t\thtmlFor=\"is-default-to-today\">\n\t\t\t\t\t\t\t\t\t\tDefault to Today?\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{this.props.element.hasOwnProperty(\n\t\t\t\t\t\t\t\t'showTimeSelect'\n\t\t\t\t\t\t\t) && (\n\t\t\t\t\t\t\t\t<div className=\"custom-control custom-checkbox\">\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tid=\"show-time-select\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"custom-control-input\"\n\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\tchecked={this_show_time_select}\n\t\t\t\t\t\t\t\t\t\tvalue={true}\n\t\t\t\t\t\t\t\t\t\tonChange={this.editElementProp.bind(\n\t\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\t\t'showTimeSelect',\n\t\t\t\t\t\t\t\t\t\t\t'checked'\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\t\tclassName=\"custom-control-label\"\n\t\t\t\t\t\t\t\t\t\thtmlFor=\"show-time-select\">\n\t\t\t\t\t\t\t\t\t\tShow Time Select?\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{this_show_time_select &&\n\t\t\t\t\t\t\t\tthis.props.element.hasOwnProperty(\n\t\t\t\t\t\t\t\t\t'showTimeSelectOnly'\n\t\t\t\t\t\t\t\t) && (\n\t\t\t\t\t\t\t\t\t<div className=\"custom-control custom-checkbox\">\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tid=\"show-time-select-only\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"custom-control-input\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\tchecked={this_show_time_select_only}\n\t\t\t\t\t\t\t\t\t\t\tvalue={true}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.editElementProp.bind(\n\t\t\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\t\t\t'showTimeSelectOnly',\n\t\t\t\t\t\t\t\t\t\t\t\t'checked'\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"custom-control-label\"\n\t\t\t\t\t\t\t\t\t\t\thtmlFor=\"show-time-select-only\">\n\t\t\t\t\t\t\t\t\t\t\tShow Time Select Only?\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{(this.state.element.element === 'RadioButtons' ||\n\t\t\t\t\t\t\t\tthis.state.element.element === 'Checkboxes') &&\n\t\t\t\t\t\t\t\tcanHaveDisplayHorizontal && (\n\t\t\t\t\t\t\t\t\t<div className=\"custom-control custom-checkbox\">\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tid=\"display-horizontal\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"custom-control-input\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\tchecked={this_checked_inline}\n\t\t\t\t\t\t\t\t\t\t\tvalue={true}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.editElementProp.bind(\n\t\t\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\t\t\t'inline',\n\t\t\t\t\t\t\t\t\t\t\t\t'checked'\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"custom-control-label\"\n\t\t\t\t\t\t\t\t\t\t\thtmlFor=\"display-horizontal\">\n\t\t\t\t\t\t\t\t\t\t\tDisplay horizontally\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t{this.state.element.element === 'Signature' &&\n\t\t\t\tthis.props.element.readOnly ? (\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label className=\"control-label\" htmlFor=\"variableKey\">\n\t\t\t\t\t\t\tVariable Key:\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid=\"variableKey\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tdefaultValue={this.props.element.variableKey}\n\t\t\t\t\t\t\tonBlur={this.updateElement.bind(this)}\n\t\t\t\t\t\t\tonChange={this.editElementProp.bind(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'variableKey',\n\t\t\t\t\t\t\t\t'value'\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<p className=\"help-block\">\n\t\t\t\t\t\t\tThis will give the element a key that can be used to\n\t\t\t\t\t\t\treplace the content with a runtime value.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<div />\n\t\t\t\t)}\n\t\t\t\t{/* {canHavePageBreakBefore && (\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label className=\"control-label\">Print Options</label>\n\t\t\t\t\t\t<div className=\"custom-control custom-checkbox\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tid=\"page-break-before-element\"\n\t\t\t\t\t\t\t\tclassName=\"custom-control-input\"\n\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\tchecked={this_checked_page_break}\n\t\t\t\t\t\t\t\tvalue={true}\n\t\t\t\t\t\t\t\tonChange={this.editElementProp.bind(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'pageBreakBefore',\n\t\t\t\t\t\t\t\t\t'checked'\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\tclassName=\"custom-control-label\"\n\t\t\t\t\t\t\t\thtmlFor=\"page-break-before-element\">\n\t\t\t\t\t\t\t\tPage Break Before Element?\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)} */}\n\t\t\t\t{/* {canHaveAlternateForm && (\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label className=\"control-label\">\n\t\t\t\t\t\t\tAlternate/Signature Page\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<div className=\"custom-control custom-checkbox\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tid=\"display-on-alternate\"\n\t\t\t\t\t\t\t\tclassName=\"custom-control-input\"\n\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\tchecked={this_checked_alternate_form}\n\t\t\t\t\t\t\t\tvalue={true}\n\t\t\t\t\t\t\t\tonChange={this.editElementProp.bind(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'alternateForm',\n\t\t\t\t\t\t\t\t\t'checked'\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\tclassName=\"custom-control-label\"\n\t\t\t\t\t\t\t\thtmlFor=\"display-on-alternate\">\n\t\t\t\t\t\t\t\tDisplay on alternate/signature Page?\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)} */}\n\t\t\t\t{this.props.element.hasOwnProperty('step') && (\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<div className=\"form-group-range\">\n\t\t\t\t\t\t\t<label className=\"control-label\" htmlFor=\"rangeStep\">\n\t\t\t\t\t\t\t\tStep\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tid=\"rangeStep\"\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\tdefaultValue={this.props.element.step}\n\t\t\t\t\t\t\t\tonBlur={this.updateElement.bind(this)}\n\t\t\t\t\t\t\t\tonChange={this.editElementProp.bind(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'step',\n\t\t\t\t\t\t\t\t\t'value'\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t{this.props.element.hasOwnProperty('min_value') && (\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<div className=\"form-group-range\">\n\t\t\t\t\t\t\t<label className=\"control-label\" htmlFor=\"rangeMin\">\n\t\t\t\t\t\t\t\tMin\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tid=\"rangeMin\"\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\tdefaultValue={this.props.element.min_value}\n\t\t\t\t\t\t\t\tonBlur={this.updateElement.bind(this)}\n\t\t\t\t\t\t\t\tonChange={this.editElementProp.bind(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'min_value',\n\t\t\t\t\t\t\t\t\t'value'\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\tdefaultValue={this.props.element.min_label}\n\t\t\t\t\t\t\t\tonBlur={this.updateElement.bind(this)}\n\t\t\t\t\t\t\t\tonChange={this.editElementProp.bind(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'min_label',\n\t\t\t\t\t\t\t\t\t'value'\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t{this.props.element.hasOwnProperty('max_value') && (\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<div className=\"form-group-range\">\n\t\t\t\t\t\t\t<label className=\"control-label\" htmlFor=\"rangeMax\">\n\t\t\t\t\t\t\t\tMax\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tid=\"rangeMax\"\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\tdefaultValue={this.props.element.max_value}\n\t\t\t\t\t\t\t\tonBlur={this.updateElement.bind(this)}\n\t\t\t\t\t\t\t\tonChange={this.editElementProp.bind(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'max_value',\n\t\t\t\t\t\t\t\t\t'value'\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\tdefaultValue={this.props.element.max_label}\n\t\t\t\t\t\t\t\tonBlur={this.updateElement.bind(this)}\n\t\t\t\t\t\t\t\tonChange={this.editElementProp.bind(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'max_label',\n\t\t\t\t\t\t\t\t\t'value'\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t{this.props.element.hasOwnProperty('default_value') && (\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<div className=\"form-group-range\">\n\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\tclassName=\"control-label\"\n\t\t\t\t\t\t\t\thtmlFor=\"defaultSelected\">\n\t\t\t\t\t\t\t\tDefault Selected\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tid=\"defaultSelected\"\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\tdefaultValue={this.props.element.default_value}\n\t\t\t\t\t\t\t\tonBlur={this.updateElement.bind(this)}\n\t\t\t\t\t\t\t\tonChange={this.editElementProp.bind(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'default_value',\n\t\t\t\t\t\t\t\t\t'value'\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t{this.props.element.hasOwnProperty('static') &&\n\t\t\t\t\tthis.props.element.static && (\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<label className=\"control-label\">Text Style</label>\n\t\t\t\t\t\t\t<div className=\"custom-control custom-checkbox\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tid=\"do-bold\"\n\t\t\t\t\t\t\t\t\tclassName=\"custom-control-input\"\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\tchecked={this_checked_bold}\n\t\t\t\t\t\t\t\t\tvalue={true}\n\t\t\t\t\t\t\t\t\tonChange={this.editElementProp.bind(\n\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\t'bold',\n\t\t\t\t\t\t\t\t\t\t'checked'\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\tclassName=\"custom-control-label\"\n\t\t\t\t\t\t\t\t\thtmlFor=\"do-bold\">\n\t\t\t\t\t\t\t\t\tBold\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"custom-control custom-checkbox\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tid=\"do-italic\"\n\t\t\t\t\t\t\t\t\tclassName=\"custom-control-input\"\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\tchecked={this_checked_italic}\n\t\t\t\t\t\t\t\t\tvalue={true}\n\t\t\t\t\t\t\t\t\tonChange={this.editElementProp.bind(\n\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\t'italic',\n\t\t\t\t\t\t\t\t\t\t'checked'\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\tclassName=\"custom-control-label\"\n\t\t\t\t\t\t\t\t\thtmlFor=\"do-italic\">\n\t\t\t\t\t\t\t\t\tItalic\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t{this.props.element.showDescription && (\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\tclassName=\"control-label\"\n\t\t\t\t\t\t\thtmlFor=\"questionDescription\">\n\t\t\t\t\t\t\tDescription\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<TextAreaAutosize\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tid=\"questionDescription\"\n\t\t\t\t\t\t\tdefaultValue={this.props.element.description}\n\t\t\t\t\t\t\tonBlur={this.updateElement.bind(this)}\n\t\t\t\t\t\t\tonChange={this.editElementProp.bind(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'description',\n\t\t\t\t\t\t\t\t'value'\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t{this.props.showCorrectColumn &&\n\t\t\t\t\tthis.props.element.canHaveAnswer &&\n\t\t\t\t\t!this.props.element.hasOwnProperty('options') && (\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\tclassName=\"control-label\"\n\t\t\t\t\t\t\t\thtmlFor=\"correctAnswer\">\n\t\t\t\t\t\t\t\tCorrect Answer\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tid=\"correctAnswer\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\tdefaultValue={this.props.element.correct}\n\t\t\t\t\t\t\t\tonBlur={this.updateElement.bind(this)}\n\t\t\t\t\t\t\t\tonChange={this.editElementProp.bind(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'correct',\n\t\t\t\t\t\t\t\t\t'value'\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t{/* {this.props.element.canPopulateFromApi &&\n\t\t\t\t\tthis.props.element.hasOwnProperty('options') && (\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\tclassName=\"control-label\"\n\t\t\t\t\t\t\t\thtmlFor=\"optionsApiUrl\">\n\t\t\t\t\t\t\t\tPopulate Options from API\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t<div className=\"col-sm-6\">\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tid=\"optionsApiUrl\"\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"http://localhost:8080/api/optionsdata\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"col-sm-6\">\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tonClick={this.addOptions.bind(this)}\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-success\">\n\t\t\t\t\t\t\t\t\t\tPopulate\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)} */}\n\t\t\t\t{!nested && this.props.element.hasOwnProperty('options') && (\n\t\t\t\t\t<DynamicOptionList\n\t\t\t\t\t\tshowCorrectColumn={this.props.showCorrectColumn}\n\t\t\t\t\t\tcanHaveOptionCorrect={canHaveOptionCorrect}\n\t\t\t\t\t\tcanHaveOptionValue={canHaveOptionValue}\n\t\t\t\t\t\tdata={this.props.preview.state.data}\n\t\t\t\t\t\tupdateElement={this.props.updateElement}\n\t\t\t\t\t\tpreview={this.props.preview}\n\t\t\t\t\t\telement={this.props.element}\n\t\t\t\t\t\tkey={this.props.element.options.length}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\n\t\t\t\t{/* the following 2 sections are for MultipleRadioGroup, we define nested = true as we have nested option structur */}\n\t\t\t\t{/***** this section is for Group Title *****/}\n\t\t\t\t{nested && this.props.element.hasOwnProperty('options') && (\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label>Display Label</label>\n\t\t\t\t\t\t<Editor\n\t\t\t\t\t\t\ttoolbar={toolbar}\n\t\t\t\t\t\t\tdefaultEditorState={editorState}\n\t\t\t\t\t\t\tonBlur={this.updateElement.bind(this)}\n\t\t\t\t\t\t\tonEditorStateChange={this.onEditorStateChange.bind(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t'label'\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tstripPastedStyles={true}\n\t\t\t\t\t\t\tplaceholder=\"Please enter label\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<div className=\"custom-control custom-checkbox\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tid=\"is-required\"\n\t\t\t\t\t\t\t\tclassName=\"custom-control-input\"\n\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\tchecked={this_checked}\n\t\t\t\t\t\t\t\tvalue={true}\n\t\t\t\t\t\t\t\tonChange={this.editElementProp.bind(\n\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t'required',\n\t\t\t\t\t\t\t\t\t'checked'\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\tclassName=\"custom-control-label\"\n\t\t\t\t\t\t\t\thtmlFor=\"is-required\">\n\t\t\t\t\t\t\t\tRequired\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\n\t\t\t\t{/***** this section is for Group options *****/}\n\t\t\t\t{nested &&\n\t\t\t\t\tthis.props.element.hasOwnProperty('options') &&\n\t\t\t\t\tthis.props.element.options.map((opt, index) => {\n\t\t\t\t\t\tif (DEBUG) {\n\t\t\t\t\t\t\tconsole.log('1128 opt = ', opt);\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'1122 this.props.preview.state.data = ',\n\t\t\t\t\t\t\t\tthis.props.preview.state.data\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// this.props.element.options contains radioButton groups object such as \"Day 1 Lunch\" and \"Day 2 Lunch\"\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t// data, updateElement and preview are from parent because this is\n\t\t\t\t\t\t\t// an option not a main component which we don't create neither\n\t\t\t\t\t\t\t// for it\n\t\t\t\t\t\t\t<DynamicOptionListForGroup\n\t\t\t\t\t\t\t\tkey={opt.id}\n\t\t\t\t\t\t\t\tshowCorrectColumn={opt.showCorrectColumn}\n\t\t\t\t\t\t\t\tcanHaveOptionCorrect={opt.canHaveOptionCorrect}\n\t\t\t\t\t\t\t\tcanHaveOptionValue={opt.canHaveOptionValue}\n\t\t\t\t\t\t\t\tdata={this.props.preview.state.data}\n\t\t\t\t\t\t\t\tupdateElement={this.props.updateElement}\n\t\t\t\t\t\t\t\tpreview={this.props.preview}\n\t\t\t\t\t\t\t\telement={opt}\n\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t\tparent={this.props.element}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t</div>\n\t\t);\n\t}\n}\nFormElementsEdit.defaultProps = { className: 'edit-element-fields' };\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/dynamic-option-list.jsx",["709","710"],"/**\n * <DynamicOptionList />\n */\n\nimport React from 'react';\nimport ID from './UUID';\n\nexport default class DynamicOptionList extends React.Component {\n\tconstructor(props) {\n\t\tconst DEBUG = process.env.DEBUG_MODE;\n\t\tsuper(props);\n\t\tif (DEBUG) {\n\t\t\tconsole.log('this.props = ', this.props);\n\t\t}\n\t\tthis.state = {\n\t\t\telement: this.props.element,\n\t\t\tdata: this.props.data,\n\t\t\tdirty: false,\n\t\t\tparent: this.props.parent\n\t\t};\n\t}\n\n\t_setValue(text) {\n\t\treturn text.replace(/[^A-Z0-9]+/gi, '_').toLowerCase();\n\t}\n\n\teditOption(option_index, e) {\n\t\tif (this.DEBUG) {\n\t\t\tconsole.log('I am in editOption');\n\t\t}\n\t\tconst this_element = this.state.element;\n\t\tconst val =\n\t\t\tthis_element.options[option_index].value !==\n\t\t\tthis._setValue(this_element.options[option_index].text)\n\t\t\t\t? this_element.options[option_index].value\n\t\t\t\t: this._setValue(e.target.value);\n\n\t\tthis_element.options[option_index].text = e.target.value;\n\t\tthis_element.options[option_index].value = val;\n\t\tthis.setState({\n\t\t\telement: this_element,\n\t\t\tdirty: true\n\t\t});\n\t}\n\n\teditValue(option_index, e) {\n\t\tif (this.DEBUG) {\n\t\t\tconsole.log('I am in editValue');\n\t\t}\n\t\tconst this_element = this.state.element;\n\t\tconst val =\n\t\t\te.target.value === ''\n\t\t\t\t? this._setValue(this_element.options[option_index].text)\n\t\t\t\t: e.target.value;\n\t\tthis_element.options[option_index].value = val;\n\t\tthis.setState({\n\t\t\telement: this_element,\n\t\t\tdirty: true\n\t\t});\n\t}\n\n\t// eslint-disable-next-line no-unused-vars\n\teditOptionCorrect(option_index, e) {\n\t\tif (this.DEBUG) {\n\t\t\tconsole.log('I am in editOptionCorrect');\n\t\t}\n\t\tconst this_element = this.state.element;\n\t\tif (this.DEBUG) {\n\t\t\tconsole.log(\n\t\t\t\t'this_element.options[option_index] = ',\n\t\t\t\tthis_element.options[option_index]\n\t\t\t);\n\t\t}\n\t\tif (\n\t\t\tthis_element.options[option_index].hasOwnProperty('correct')\n\t\t) {\n\t\t\tdelete this_element.options[option_index].correct;\n\t\t} else {\n\t\t\tthis_element.options[option_index].correct = true;\n\t\t}\n\t\tif (this.DEBUG) {\n\t\t\tconsole.log('dynamic-option-list this_elemnt = ', this_element);\n\t\t}\n\t\tthis.setState({ element: this_element });\n\n\t\tthis.props.updateElement.call(this.props.preview, this_element);\n\t}\n\n\tupdateOption() {\n\t\tif (this.DEBUG) {\n\t\t\tconsole.log('I am in updateOption');\n\t\t}\n\t\tconst this_element = this.state.element;\n\t\t// to prevent ajax calls with no change\n\t\tif (this.state.dirty) {\n\t\t\tif (this.DEBUG) {\n\t\t\t\tconsole.log('in dirty');\n\t\t\t\tconsole.log('this.props.preview = ', this.props.preview);\n\t\t\t\tconsole.log('this_element = ', this_element);\n\t\t\t\tconsole.log('this.props.parent = ', this.props.parent);\n\t\t\t}\n\t\t\tthis.props.updateElement.call(this.props.preview, this_element);\n\t\t\t// ! crashes with the following line, need to investigate if there is any issue with the above line\n\t\t\t// this.props.updateElement.call(\n\t\t\t// \tthis.props.preview,\n\t\t\t// \tthis.props.parent\n\t\t\t// );\n\t\t\tthis.setState({ dirty: false });\n\t\t}\n\t}\n\n\taddOption(index) {\n\t\tif (this.DEBUG) {\n\t\t\tconsole.log('I am in addOption');\n\t\t\tconsole.log('index = ', index);\n\t\t\tconsole.log('element = ', this.state.element.options[0].key);\n\t\t\tconsole.log('this.props = ', this.props);\n\t\t}\n\t\tlet optionsLength = this.state.element.options.length;\n\t\tlet key;\n\t\tif (this.state.element.options[0].key.split('_').length > 0) {\n\t\t\tlet optionKey = this.state.element.options[0].key;\n\t\t\tlet optionName = optionKey.split('_')[0];\n\t\t\tkey = optionName + '_' + ID.uuid();\n\t\t\tif (this.DEBUG) {\n\t\t\t\tconsole.log('key = ', key);\n\t\t\t}\n\t\t}\n\n\t\tconst this_element = this.state.element;\n\t\tthis_element.options.splice(index + 1, 0, {\n\t\t\tvalue: '',\n\t\t\ttext: '',\n\t\t\tkey: key ? key : ID.uuid()\n\t\t});\n\t\tthis.props.updateElement.call(this.props.preview, this_element);\n\t}\n\n\tremoveOption(index) {\n\t\tif (this.DEBUG) {\n\t\t\tconsole.log('I am in removeOption');\n\t\t\tconsole.log('remove index = ', index);\n\t\t}\n\t\tconst this_element = this.state.element;\n\t\tthis_element.options.splice(index, 1);\n\t\tthis.props.updateElement.call(this.props.preview, this_element);\n\t}\n\n\trender() {\n\t\tif (this.state.dirty) {\n\t\t\tthis.state.element.dirty = true;\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"dynamic-option-list\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"col-sm-6\">\n\t\t\t\t\t\t\t\t<b>Options</b>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{this.props.canHaveOptionValue && (\n\t\t\t\t\t\t\t\t<div className=\"col-sm-2\">\n\t\t\t\t\t\t\t\t\t<b>Value</b>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{/* {this.props.canHaveOptionValue &&\n\t\t\t\t\t\t\t\tthis.props.canHaveOptionCorrect && (\n\t\t\t\t\t\t\t\t\t<div className=\"col-sm-4\">\n\t\t\t\t\t\t\t\t\t\t<b>Correct</b>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)} */}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</li>\n\t\t\t\t\t{this.props.element.options.map((option, index) => {\n\t\t\t\t\t\t// this is the place that handles adding options: [ ]\n\t\t\t\t\t\tif (this.DEBUG) {\n\t\t\t\t\t\t\tconsole.log('option = ', option);\n\t\t\t\t\t\t\tconsole.log('index = ', index);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst this_key = `edit_${option.key}`;\n\t\t\t\t\t\tconst val =\n\t\t\t\t\t\t\toption.value !== this._setValue(option.text)\n\t\t\t\t\t\t\t\t? option.value\n\t\t\t\t\t\t\t\t: '';\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li className=\"clearfix\" key={this_key}>\n\t\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t\t<div className=\"col-sm-6\">\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttabIndex={index + 1}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tname={`text_${index}`}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Option text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={option.text}\n\t\t\t\t\t\t\t\t\t\t\tonBlur={this.updateOption.bind(this)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.editOption.bind(this, index)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t{this.props.canHaveOptionValue && (\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-sm-2\">\n\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\tname={`value_${index}`}\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={val}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.editValue.bind(this, index)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t{/* {this.props.canHaveOptionValue &&\n\t\t\t\t\t\t\t\t\t\tthis.props.canHaveOptionCorrect && (\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-sm-1\">\n\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"1\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.editOptionCorrect.bind(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={option.hasOwnProperty('correct')}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t)} */}\n\t\t\t\t\t\t\t\t\t<div className=\"col-sm-3\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"dynamic-options-actions-buttons\">\n\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.addOption.bind(this, index)}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-success\">\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t{index > 0 && (\n\t\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.removeOption.bind(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-danger\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-minus-circle\"></i>\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/hooks/userAuth-hook.js",[],["711","712"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/pages/EventPhotos.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/components/FormBuilder.js",["713","714","715","716"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/pages/ClubDashboardToolbar.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/EventManager.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/ViewEventSelector.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/EditEventSelector.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/users/pages/UserAuth.js",["717","718"],"import React, { useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport { Field, Form, Formik } from 'formik';\nimport ImageUploader from '../../shared/components/FormElements/ImageUploader';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\n\nimport { UserAuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst UserAuth = () => {\n\tconst userAuthContext = useContext(UserAuthContext);\n\tconst [isLoginMode, setIsLoginMode] = useState(true);\n\tconst [passwordError, setPasswordError] = useState();\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\n\tconst switchModeHandler = () => {\n\t\tsetIsLoginMode(prevMode => !prevMode);\n\t};\n\n\tconst history = useHistory();\n\tconst userSubmitHandler = async values => {\n\t\t// meaning we don't want to reload the page after form submission\n\t\t// all the input values stay intact on the form\n\t\t// event.preventDefault();\n\n\t\tif (isLoginMode) {\n\t\t\ttry {\n\t\t\t\t// use custom hook. send login request to Backend\n\t\t\t\tconst [\n\t\t\t\t\tresponseData,\n\t\t\t\t\tresponseStatus,\n\t\t\t\t\tresponseMessage\n\t\t\t\t] = await sendRequest(\n\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL + '/users/login',\n\t\t\t\t\t'POST',\n\t\t\t\t\tJSON.stringify({\n\t\t\t\t\t\temail: values.email,\n\t\t\t\t\t\tpassword: values.password\n\t\t\t\t\t}),\n\t\t\t\t\t{\n\t\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tif (userAuthContext.userRedirectURL) {\n\t\t\t\t\t// for re-direction, we need to set login information to be able to send request to backend\n\t\t\t\t\tuserAuthContext.userLogin(\n\t\t\t\t\t\tresponseData.userId,\n\t\t\t\t\t\tresponseData.userName,\n\t\t\t\t\t\tresponseData.token,\n\t\t\t\t\t\t'',\n\t\t\t\t\t\tresponseData.entries,\n\t\t\t\t\t\tresponseData.image\n\t\t\t\t\t);\n\t\t\t\t\thistory.push(userAuthContext.userRedirectURL);\n\t\t\t\t} else {\n\t\t\t\t\t/**\n\t\t\t\t\t * Need to put redirect before calling userAuthContext.userLogin(responseData.user.id).\n\t\t\t\t\t * Otherwise App.js has UserAuthContext.provider will re-render App and go to\n\t\t\t\t\t * <Redirect to=\"/\"> If we have components that send http request in that Route\n\t\t\t\t\t * the http request will be aborted and got a warning:\n\t\t\t\t\t * Warning: Can't perform a React state update on an unmounted component. when\n\t\t\t\t\t * trying to redirect page after logging\n\t\t\t\t\t */\n\t\t\t\t\t// user.id is coming from usersController loginUser\n\t\t\t\t\t// id is from {getters: true}\n\t\t\t\t\tuserAuthContext.userLogin(\n\t\t\t\t\t\tresponseData.userId,\n\t\t\t\t\t\tresponseData.userName,\n\t\t\t\t\t\tresponseData.token,\n\t\t\t\t\t\t'', //expirationDate will be defined in userAuth-hook\n\t\t\t\t\t\tresponseData.entries,\n\t\t\t\t\t\tresponseData.image\n\t\t\t\t\t);\n\t\t\t\t\t// forward page needs to be after userAuthContext.userLoging() because <Route> is designed\n\t\t\t\t\t// only if (userToken), we are able to access the route\n\t\t\t\t\thistory.push(`/users/events/${responseData.userId}`);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t// empty. Custom hook takes care of it already\n\t\t\t\tconsole.log('UserAuth err= ', err);\n\t\t\t}\n\t\t} else {\n\t\t\t//user signup\n\t\t\ttry {\n\t\t\t\t// matching passwords\n\t\t\t\tif (values.password !== values.passwordValidation) {\n\t\t\t\t\tsetPasswordError('Passwords do not match!');\n\t\t\t\t\tthrow new Error('password no match');\n\t\t\t\t}\n\n\t\t\t\t// FormData() is a browser API. We can append text or binary data to FormData\n\t\t\t\tconst formData = new FormData();\n\t\t\t\tformData.append('userName', values.userName);\n\t\t\t\tformData.append('lastName', values.lastName);\n\t\t\t\tformData.append('firstName', values.firstName);\n\t\t\t\tformData.append('email', values.email);\n\t\t\t\tformData.append('password', values.password);\n\t\t\t\tformData.append(\n\t\t\t\t\t'passwordValidation',\n\t\t\t\t\tvalues.passwordValidation\n\t\t\t\t);\n\t\t\t\tformData.append('userImage', values.image);\n\n\t\t\t\t// the request needs to match backend usersRoutes /signup route\n\t\t\t\t// With fromData, headers cannot be {Content-Type: application/json}\n\t\t\t\tawait sendRequest(\n\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL + '/users/signup',\n\t\t\t\t\t'POST',\n\t\t\t\t\tformData\n\t\t\t\t);\n\t\t\t\t// set isLoginMode to true to render login page\n\t\t\t\tsetIsLoginMode(true);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log('UserAuth error = ', err);\n\t\t\t}\n\t\t}\n\t};\n\tconst clearErr = () => {\n\t\tclearError();\n\t\tsetPasswordError(null);\n\t};\n\n\t// Formik section\n\tconst initialValues = {\n\t\tuserName: '',\n\t\tlastName: '',\n\t\tfirstName: '',\n\t\temail: '',\n\t\timage: undefined,\n\t\tpassword: '',\n\t\tpasswordValidation: ''\n\t};\n\tconst validateUserName = value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'User Name is required.';\n\t\t}\n\t\treturn error;\n\t};\n\tconst validateLastName = value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Last Name is required.';\n\t\t}\n\t\treturn error;\n\t};\n\tconst validateFirstName = value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'First Name is required.';\n\t\t}\n\t\treturn error;\n\t};\n\tconst validateEmail = value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Email is required.';\n\t\t} else {\n\t\t\tconst pattern = /[a-z0-9A-Z!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9A-Z!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n\t\t\tif (!pattern.test(value)) {\n\t\t\t\terror = 'Please enter a valid email';\n\t\t\t}\n\t\t}\n\t\treturn error;\n\t};\n\tconst validatePassword = value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Password is required.';\n\t\t} else if (value.length < 6) {\n\t\t\terror = 'Minimum password length is 6 characters.';\n\t\t}\n\t\treturn error;\n\t};\n\tconst validateImage = value => {\n\t\tlet error;\n\t\tif (value && value.size > 1500000) {\n\t\t\terror = 'File size needs to be smaller than 1.5MB';\n\t\t} else {\n\t\t}\n\t\treturn error;\n\t};\n\n\tconst userAuthForm = values => (\n\t\t<div className=\"auth-div\">\n\t\t\t<h4 className=\"auth-form-header\">\n\t\t\t\t<i className=\"far fa-user\" />\n\t\t\t\t&nbsp;Driver Login\n\t\t\t</h4>\n\t\t\t<hr className=\"auth-form--hr\" />\n\n\t\t\t<Formik\n\t\t\t\tinitialValues={initialValues}\n\t\t\t\tonSubmit={userSubmitHandler}>\n\t\t\t\t{({ errors, isValid, touched }) => (\n\t\t\t\t\t<Form className=\"auth-from-container\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label htmlFor=\"email\" className=\"auth-form-label\">\n\t\t\t\t\t\t\t\tEmail\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tvalidate={validateEmail}\n\t\t\t\t\t\t\t\tclassName=\"auth-form-input\"\n\t\t\t\t\t\t\t\tautoComplete=\"username\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{touched.email && errors.email && (\n\t\t\t\t\t\t\t\t<div className=\"auth-form-error\">{errors.email}</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label htmlFor=\"password\" className=\"auth-form-label\">\n\t\t\t\t\t\t\t\tPassword\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tvalidate={validatePassword}\n\t\t\t\t\t\t\t\tclassName=\"auth-form-input\"\n\t\t\t\t\t\t\t\tautoComplete=\"new-password\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{touched.password && errors.password && (\n\t\t\t\t\t\t\t\t<div className=\"auth-form-error\">\n\t\t\t\t\t\t\t\t\t{errors.password}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Button disabled={!isValid} type=\"submit\" size=\"small\">\n\t\t\t\t\t\t\tLOGIN\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button size=\"small\" to=\"/\">\n\t\t\t\t\t\t\tCANCEL\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t</div>\n\t);\n\n\tconst userSignupForm = values => (\n\t\t<div className=\"auth-div\">\n\t\t\t<h4 className=\"auth-form-header\">\n\t\t\t\t<i className=\"fas fa-user-plus\" />\n\t\t\t\t&nbsp;Sign up a new account\n\t\t\t</h4>\n\t\t\t<hr className=\"auth-form--hr\" />\n\n\t\t\t<Formik\n\t\t\t\tinitialValues={initialValues}\n\t\t\t\tonSubmit={userSubmitHandler}>\n\t\t\t\t{({\n\t\t\t\t\terrors,\n\t\t\t\t\tisValid,\n\t\t\t\t\ttouched,\n\t\t\t\t\tsetFieldValue,\n\t\t\t\t\thandleBlur\n\t\t\t\t}) => (\n\t\t\t\t\t<Form className=\"auth-from-container\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label htmlFor=\"userName\" className=\"auth-form-label\">\n\t\t\t\t\t\t\t\tUser Name\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tid=\"userName\"\n\t\t\t\t\t\t\t\tname=\"userName\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tvalidate={validateUserName}\n\t\t\t\t\t\t\t\tclassName=\"auth-form-input\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{touched.userName && errors.userName && (\n\t\t\t\t\t\t\t\t<div className=\"auth-form-error\">\n\t\t\t\t\t\t\t\t\t{errors.userName}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label htmlFor=\"lastName\" className=\"auth-form-label\">\n\t\t\t\t\t\t\t\tLast Name\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tid=\"lastName\"\n\t\t\t\t\t\t\t\tname=\"lastName\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tvalidate={validateLastName}\n\t\t\t\t\t\t\t\tclassName=\"auth-form-input\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{touched.lastName && errors.lastName && (\n\t\t\t\t\t\t\t\t<div className=\"auth-form-error\">\n\t\t\t\t\t\t\t\t\t{errors.lastName}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label htmlFor=\"firstName\" className=\"auth-form-label\">\n\t\t\t\t\t\t\t\tFirst Name\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tid=\"firstName\"\n\t\t\t\t\t\t\t\tname=\"firstName\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tvalidate={validateFirstName}\n\t\t\t\t\t\t\t\tclassName=\"auth-form-input\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{touched.firstName && errors.firstName && (\n\t\t\t\t\t\t\t\t<div className=\"auth-form-error\">\n\t\t\t\t\t\t\t\t\t{errors.firstName}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label htmlFor=\"email\" className=\"auth-form-label\">\n\t\t\t\t\t\t\t\tEmail\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tvalidate={validateEmail}\n\t\t\t\t\t\t\t\tclassName=\"auth-form-input\"\n\t\t\t\t\t\t\t\tautoComplete=\"username\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{touched.email && errors.email && (\n\t\t\t\t\t\t\t\t<div className=\"auth-form-error\">{errors.email}</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"image\"\n\t\t\t\t\t\t\tname=\"image\"\n\t\t\t\t\t\t\ttitle=\"User Image\"\n\t\t\t\t\t\t\tcomponent={ImageUploader}\n\t\t\t\t\t\t\tvalidate={validateImage}\n\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\n\t\t\t\t\t\t\terrorMessage={errors.image ? errors.image : ''}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tlabelStyle=\"auth-form-label\"\n\t\t\t\t\t\t\tinputStyle=\"auth-form-input\"\n\t\t\t\t\t\t\tpreviewStyle=\"auth-form-image-upload__preview\"\n\t\t\t\t\t\t\terrorStyle=\"auth-form-error\"\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label htmlFor=\"password\" className=\"auth-form-label\">\n\t\t\t\t\t\t\t\tPassword (minimum 6 characters)\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tvalidate={validatePassword}\n\t\t\t\t\t\t\t\tclassName=\"auth-form-input\"\n\t\t\t\t\t\t\t\tautoComplete=\"new-password\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{touched.password && errors.password && (\n\t\t\t\t\t\t\t\t<div className=\"auth-form-error\">\n\t\t\t\t\t\t\t\t\t{errors.password}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\thtmlFor=\"passwordValidation\"\n\t\t\t\t\t\t\t\tclassName=\"auth-form-label\">\n\t\t\t\t\t\t\t\tPlease re-enter password\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tid=\"passwordValidation\"\n\t\t\t\t\t\t\t\tname=\"passwordValidation\"\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tvalidate={validatePassword}\n\t\t\t\t\t\t\t\tclassName=\"auth-form-input\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{touched.passwordValidation &&\n\t\t\t\t\t\t\t\terrors.passwordValidation && (\n\t\t\t\t\t\t\t\t\t<div className=\"auth-form-error\">\n\t\t\t\t\t\t\t\t\t\t{errors.passwordValidation}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Button size=\"small\" disabled={!isValid} type=\"submit\">\n\t\t\t\t\t\t\tSignup\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button to=\"/\" size=\"small\">\n\t\t\t\t\t\t\tCANCEL\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t</div>\n\t);\n\treturn (\n\t\t<React.Fragment>\n\t\t\t{/* error coming from const [error, setError] = useState(); */}\n\t\t\t<ErrorModal error={error || passwordError} onClear={clearErr} />\n\t\t\t{isLoading && <LoadingSpinner asOverlay />}\n\t\t\t{isLoginMode && userAuthForm()}\n\t\t\t{!isLoginMode && userSignupForm()}\n\t\t\t<div className=\"auth-footer-div\">\n\t\t\t\t<p>No Account? Please sign up a new account.</p>\n\t\t\t\t<Button size=\"small\" inverse onClick={switchModeHandler}>\n\t\t\t\t\tSWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default UserAuth;\n",["719","720"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/cars/pages/UpdateCar.js",["721","722","723"],"import React, { useContext, useEffect, useState } from 'react';\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\nimport { Field, Form, Formik } from 'formik';\nimport moment from 'moment';\nimport NavigationPrompt from 'react-router-navigation-prompt';\n\n// import { EditorState } from 'draft-js';\n// import { RichEditorExample } from '../components/RichEditor';\n// import 'draft-js/dist/Draft.css';\n\nimport { useUserLoginValidation } from '../../shared/hooks/userLoginValidation-hook';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport ImageUploader from '../../shared/components/FormElements/ImageUploader';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport PromptModal from '../../shared/components/UIElements/PromptModal';\n\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { UserAuthContext } from '../../shared/context/auth-context';\nimport { FormContext } from '../../shared/context/form-context';\n\nimport '../../shared/css/EventForm.css';\n\nconst UpdateCar = setFieldValue => {\n\tconst [initialized, setInitialized] = useState(false);\n\tconst userAuthContext = useContext(UserAuthContext);\n\tconst formContext = useContext(FormContext);\n\tlet userName = userAuthContext.userName;\n\tuseEffect(() => {\n\t\tlet mounted = true;\n\t\tif (mounted) {\n\t\t\tformContext.setIsInsideForm(true);\n\t\t}\n\t\treturn () => {\n\t\t\tmounted = false;\n\t\t};\n\t}, [formContext]);\n\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\n\tlet carId = useParams().carId;\n\t// authentication check\n\tuseUserLoginValidation(`/users/cars/update/:${carId}`);\n\n\t// If we are re-directing to this page, we want to clear up userRedirectURL\n\tlet location = useLocation();\n\tuseEffect(() => {\n\t\tlet path = location.pathname;\n\t\tlet userRedirectURL = userAuthContext.userRedirectURL;\n\t\tif (path === userRedirectURL) {\n\t\t\t// re-init redirectURL after re-direction route\n\t\t\tuserAuthContext.setUserRedirectURL(null);\n\t\t}\n\t}, [location, userAuthContext]);\n\n\tconst [year, setYear] = useState('');\n\tconst [make, setMake] = useState('');\n\tconst [model, setModel] = useState('');\n\tconst [trimLevel, setTrimLevel] = useState('');\n\tconst [share, setShare] = useState(false);\n\tconst [tireBrand, setTireBrand] = useState('');\n\tconst [tireName, setTireName] = useState('');\n\tconst [tireFrontWidth, setTireFrontWidth] = useState('');\n\tconst [tireFrontDiameter, setTireFrontDiameter] = useState('');\n\tconst [tireFrontRatio, setTireFrontRatio] = useState('');\n\tconst [tireRearWidth, setTireRearWidth] = useState('');\n\tconst [tireRearDiameter, setTireRearDiameter] = useState('');\n\tconst [tireRearRatio, setTireRearRatio] = useState('');\n\tconst [frontPressure, setFrontPressure] = useState('');\n\tconst [rearPressure, setRearPressure] = useState('');\n\tconst [LFCamber, setLFCamber] = useState('');\n\tconst [RFCamber, setRFCamber] = useState('');\n\tconst [LRCamber, setLRCamber] = useState('');\n\tconst [RRCamber, setRRCamber] = useState('');\n\tconst [LFCaster, setLFCaster] = useState('');\n\tconst [RFCaster, setRFCaster] = useState('');\n\tconst [LFToe, setLFToe] = useState('');\n\tconst [RFToe, setRFToe] = useState('');\n\tconst [frontToe, setFrontToe] = useState('');\n\tconst [LRToe, setLRToe] = useState('');\n\tconst [RRToe, setRRToe] = useState('');\n\tconst [rearToe, setRearToe] = useState('');\n\tconst [FBar, setFBar] = useState('');\n\tconst [RBar, setRBar] = useState('');\n\tconst [FRebound, setFRebound] = useState('');\n\tconst [RRebound, setRRebound] = useState('');\n\tconst [FCompression, setFCompression] = useState('');\n\tconst [RCompression, setRCompression] = useState('');\n\tconst [note, setNote] = useState('');\n\n\t// todo: retrieve file from Reader: const [image, setImage] = useState();\n\t// todo: const [courseMap, setCourseMap] = useState('');\n\tlet image = undefined;\n\n\tconst [OKLeavePage, setOKLeavePage] = useState(true);\n\tconst [loadedCar, setLoadedCar] = useState();\n\n\tlet initialValues = {};\n\n\tuseEffect(() => {\n\t\tconst queryCar = async () => {\n\t\t\ttry {\n\t\t\t\tconst [\n\t\t\t\t\tresponseData,\n\t\t\t\t\tresponseStatus,\n\t\t\t\t\tresponseMessage\n\t\t\t\t] = await sendRequest(\n\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL + `/cars/${carId}`,\n\t\t\t\t\t'GET',\n\t\t\t\t\tnull,\n\t\t\t\t\t{\n\t\t\t\t\t\t// adding JWT to header for authentication, JWT contains clubId\n\t\t\t\t\t\tAuthorization: 'Bearer ' + userAuthContext.userToken\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tif (!responseData.car) {\n\t\t\t\t\tthrow new Error('Request error, car data was not found');\n\t\t\t\t}\n\t\t\t\tsetLoadedCar(responseData.car);\n\t\t\t\tlet car = responseData.car;\n\t\t\t\tsetYear(car.year);\n\t\t\t\tsetMake(car.make);\n\t\t\t\tsetModel(car.model);\n\t\t\t\tsetTrimLevel(car.trimLevel);\n\t\t\t\tsetShare(car.share);\n\t\t\t\tsetTireBrand(car.tireBrand);\n\t\t\t\tsetTireName(car.tireName);\n\t\t\t\tsetTireFrontWidth(car.tireFrontWidth);\n\t\t\t\tsetTireFrontDiameter(car.tireFrontDiameter);\n\t\t\t\tsetTireFrontRatio(car.tireFrontRatio);\n\t\t\t\tsetTireRearWidth(car.tireRearWidth);\n\t\t\t\tsetTireRearDiameter(car.tireRearDiameter);\n\t\t\t\tsetTireRearRatio(car.tireRearRatio);\n\t\t\t\tsetFrontPressure(car.frontPressure);\n\t\t\t\tsetRearPressure(car.rearPressure);\n\t\t\t\tsetLFCamber(car.LFCamber);\n\t\t\t\tsetRFCamber(car.RFCamber);\n\t\t\t\tsetLRCamber(car.LRCamber);\n\t\t\t\tsetRRCamber(car.RRCamber);\n\t\t\t\tsetLFCaster(car.LFCaster);\n\t\t\t\tsetRFCaster(car.RFCaster);\n\t\t\t\tsetLFToe(car.LFToe);\n\t\t\t\tsetRFToe(car.RFToe);\n\t\t\t\tsetFrontToe(car.frontToe);\n\t\t\t\tsetLRToe(car.LRToe);\n\t\t\t\tsetRRToe(car.RRToe);\n\t\t\t\tsetRearToe(car.rearToe);\n\t\t\t\tsetFBar(car.FBar);\n\t\t\t\tsetRBar(car.RBar);\n\t\t\t\tsetFRebound(car.FRebound);\n\t\t\t\tsetRRebound(car.RRebound);\n\t\t\t\tsetFCompression(car.FCompression);\n\t\t\t\tsetRCompression(car.RCompression);\n\t\t\t\tsetNote(car.note);\n\t\t\t} catch (err) {}\n\t\t};\n\t\tqueryCar();\n\t}, [sendRequest, carId, initialized]);\n\n\t// initialize local storage\n\t// Get the existing data\n\tvar carFormData = localStorage.getItem('carFormData');\n\n\t// If no existing data, create an array; otherwise retrieve it\n\tcarFormData = carFormData ? JSON.parse(carFormData) : {};\n\n\t// local storage gets the higest priority\n\t// get from localStorage\n\tif (\n\t\t!initialized &&\n\t\tcarFormData &&\n\t\tmoment(carFormData.expirationDate) > moment()\n\t) {\n\t\tsetInitialized(true);\n\t\t// Form data\n\t\tif (carFormData.year) {\n\t\t\tsetYear(carFormData.year);\n\t\t}\n\t\tif (carFormData.make) {\n\t\t\tsetMake(carFormData.make);\n\t\t}\n\t\tif (carFormData.model) {\n\t\t\tsetModel(carFormData.model);\n\t\t}\n\t\tif (carFormData.trimLevel) {\n\t\t\tsetTrimLevel(carFormData.trimLevel);\n\t\t}\n\t\tif (carFormData.share) {\n\t\t\tsetShare(carFormData.share);\n\t\t}\n\t\tif (carFormData.tireBrand) {\n\t\t\tsetTireBrand(carFormData.tireBrand);\n\t\t}\n\t\tif (carFormData.tireName) {\n\t\t\tsetTireName(carFormData.tireName);\n\t\t}\n\t\tif (carFormData.tireFrontWidth) {\n\t\t\tsetTireFrontWidth(carFormData.tireFrontWidth);\n\t\t}\n\t\tif (carFormData.tireFrontDiameter) {\n\t\t\tsetTireFrontDiameter(carFormData.tireFrontDiameter);\n\t\t}\n\t\tif (carFormData.tireFrontRatio) {\n\t\t\tsetTireFrontRatio(carFormData.tireFrontRatio);\n\t\t}\n\t\tif (carFormData.tireRearWidth) {\n\t\t\tsetTireRearWidth(carFormData.tireRearWidth);\n\t\t}\n\t\tif (carFormData.tireRearDiameter) {\n\t\t\tsetTireRearDiameter(carFormData.tireRearDiameter);\n\t\t}\n\t\tif (carFormData.tireRearRatio) {\n\t\t\tsetTireRearRatio(carFormData.tireRearRatio);\n\t\t}\n\t\tif (carFormData.frontPressure) {\n\t\t\tsetFrontPressure(carFormData.frontPressure);\n\t\t}\n\t\tif (carFormData.rearPressure) {\n\t\t\tsetRearPressure(carFormData.rearPressure);\n\t\t}\n\t\tif (carFormData.LFCamber) {\n\t\t\tsetLFCamber(carFormData.LFCamber);\n\t\t}\n\t\tif (carFormData.RFCamber) {\n\t\t\tsetRFCamber(carFormData.RFCamber);\n\t\t}\n\t\tif (carFormData.LRCamber) {\n\t\t\tsetLRCamber(carFormData.LRCamber);\n\t\t}\n\t\tif (carFormData.RRCamber) {\n\t\t\tsetRRCamber(carFormData.RRCamber);\n\t\t}\n\t\tif (carFormData.LFCaster) {\n\t\t\tsetLFCaster(carFormData.LFCaster);\n\t\t}\n\t\tif (carFormData.RFCaster) {\n\t\t\tsetRFCaster(carFormData.RFCaster);\n\t\t}\n\t\tif (carFormData.LFToe) {\n\t\t\tsetLFToe(carFormData.LFToe);\n\t\t}\n\t\tif (carFormData.RFToe) {\n\t\t\tsetRFToe(carFormData.RFToe);\n\t\t}\n\t\tif (carFormData.frontToe) {\n\t\t\tsetLRToe(carFormData.frontToe);\n\t\t}\n\t\tif (carFormData.LRToe) {\n\t\t\tsetLRToe(carFormData.LRToe);\n\t\t}\n\t\tif (carFormData.RRToe) {\n\t\t\tsetRRToe(carFormData.RRToe);\n\t\t}\n\t\tif (carFormData.rearToe) {\n\t\t\tsetLRToe(carFormData.rearToe);\n\t\t}\n\t\tif (carFormData.FBar) {\n\t\t\tsetFBar(carFormData.FBar);\n\t\t}\n\t\tif (carFormData.RBar) {\n\t\t\tsetRBar(carFormData.RBar);\n\t\t}\n\t\tif (carFormData.FRebound) {\n\t\t\tsetFRebound(carFormData.FRebound);\n\t\t}\n\t\tif (carFormData.RRebound) {\n\t\t\tsetRRebound(carFormData.RRebound);\n\t\t}\n\t\tif (carFormData.FCompression) {\n\t\t\tsetFCompression(carFormData.FCompression);\n\t\t}\n\t\tif (carFormData.RCompression) {\n\t\t\tsetRCompression(carFormData.RCompression);\n\t\t}\n\t\tif (carFormData.note) {\n\t\t\tsetNote(carFormData.note);\n\t\t}\n\t\tif (carFormData.image) {\n\t\t\t//setImage(carFormData.image);\n\t\t\t// setImageOK(false);\n\t\t}\n\t} else if (!initialized && loadedCar) {\n\t\tsetInitialized(true);\n\t\t// initialize localStorage\n\t\tcarFormData['expirationDate'] = moment(\n\t\t\tmoment().add(1, 'days'),\n\t\t\tmoment.ISO_8601\n\t\t);\n\t\tcarFormData['year'] = loadedCar.year;\n\t\tcarFormData['make'] = loadedCar.make;\n\t\tcarFormData['model'] = loadedCar.model;\n\t\tcarFormData['trimLevel'] = loadedCar.trimLevel;\n\t\tcarFormData['share'] = loadedCar.share;\n\t\tcarFormData['tireBrand'] = loadedCar.tireBrand;\n\t\tcarFormData['tireName'] = loadedCar.tireName;\n\t\tcarFormData['tireFrontWidth'] = loadedCar.tireFrontWidth;\n\t\tcarFormData['tireFrontDiameter'] = loadedCar.tireFrontDiameter;\n\t\tcarFormData['tireFrontRatio'] = loadedCar.tireFrontRatio;\n\t\tcarFormData['tireRearWidth'] = loadedCar.tireRearWidth;\n\t\tcarFormData['tireRearDiameter'] = loadedCar.tireRearDiameter;\n\t\tcarFormData['tireRearRatio'] = loadedCar.tireRearRatio;\n\t\tcarFormData['frontPressure'] = loadedCar.frontPressure;\n\t\tcarFormData['rearPressure'] = loadedCar.rearPressure;\n\t\tcarFormData['LFCamber'] = loadedCar.LFCamber;\n\t\tcarFormData['RFCamber'] = loadedCar.RFCamber;\n\t\tcarFormData['LRCamber'] = loadedCar.LRCamber;\n\t\tcarFormData['RRCamber'] = loadedCar.RRCamber;\n\t\tcarFormData['LFCaster'] = loadedCar.LFCaster;\n\t\tcarFormData['RFCaster'] = loadedCar.RFCaster;\n\t\tcarFormData['LFToe'] = loadedCar.LFToe;\n\t\tcarFormData['RFToe'] = loadedCar.RFToe;\n\t\tcarFormData['frontToe'] = loadedCar.frontToe;\n\t\tcarFormData['LRToe'] = loadedCar.LRToe;\n\t\tcarFormData['RRToe'] = loadedCar.RRToe;\n\t\tcarFormData['rearToe'] = loadedCar.rearToe;\n\t\tcarFormData['FBar'] = loadedCar.FBar;\n\t\tcarFormData['RBar'] = loadedCar.RBar;\n\t\tcarFormData['FRebound'] = loadedCar.FRebound;\n\t\tcarFormData['RRebound'] = loadedCar.RRebound;\n\t\tcarFormData['FCompression'] = loadedCar.FCompression;\n\t\tcarFormData['RCompression'] = loadedCar.RCompression;\n\t\tcarFormData['note'] = loadedCar.note;\n\t\tcarFormData['image'] = undefined;\n\t\tlocalStorage.setItem('carFormData', JSON.stringify(carFormData));\n\t}\n\n\tconst removeCarFormData = () => {\n\t\tlocalStorage.removeItem('carFormData');\n\t};\n\n\tinitialValues = {\n\t\t// editorState: new EditorState.createEmpty(),\n\t\tyear: year,\n\t\tmake: make,\n\t\tmodel: model,\n\t\ttrimLevel: trimLevel,\n\t\tshare: share,\n\t\ttireBrand: tireBrand,\n\t\ttireName: tireName,\n\t\ttireFrontWidth: tireFrontWidth,\n\t\ttireFrontRatio: tireFrontRatio,\n\t\ttireFrontDiameter: tireFrontDiameter,\n\t\ttireRearWidth: tireRearWidth,\n\t\ttireRearRatio: tireRearRatio,\n\t\ttireRearDiameter: tireRearDiameter,\n\t\tfrontPressure: frontPressure,\n\t\trearPressure: rearPressure,\n\t\tLFCamber: LFCamber,\n\t\tRFCamber: RFCamber,\n\t\tLRCamber: LRCamber,\n\t\tRRCamber: RRCamber,\n\t\tLFCaster: LFCaster,\n\t\tRFCaster: RFCaster,\n\t\tLFToe: LFToe,\n\t\tRFToe: RFToe,\n\t\tfrontToe: frontToe,\n\t\tLRToe: LRToe,\n\t\tRRToe: RRToe,\n\t\trearToe: rearToe,\n\t\tFBar: FBar,\n\t\tRBar: RBar,\n\t\tFRebound: FRebound,\n\t\tRRebound: RRebound,\n\t\tFCompression: FCompression,\n\t\tRCompression: RCompression,\n\t\tnote: note,\n\t\timage: image\n\t};\n\n\tconst updateCarFormData = (key, value) => {\n\t\tconst storageData = JSON.parse(\n\t\t\tlocalStorage.getItem('carFormData')\n\t\t);\n\t\tstorageData[key] = value;\n\t\tlocalStorage.setItem('carFormData', JSON.stringify(storageData));\n\t};\n\n\tconst history = useHistory();\n\tconst submitHandler = async (values, actions) => {\n\t\ttry {\n\t\t\tconst formData = new FormData();\n\t\t\tformData.append('year', values.year);\n\t\t\tformData.append('make', values.make);\n\t\t\tformData.append('model', values.model);\n\t\t\tformData.append('trimLevel', values.trimLevel);\n\n\t\t\tformData.append('share', values.share);\n\n\t\t\tformData.append('tireBrand', values.tireBrand);\n\t\t\tformData.append('tireName', values.tireName);\n\t\t\tformData.append('tireFrontWidth', values.tireFrontWidth);\n\t\t\tformData.append('tireFrontRatio', values.tireFrontRatio);\n\t\t\tformData.append('tireFrontDiameter', values.tireFrontDiameter);\n\t\t\tformData.append('tireRearWidth', values.tireRearWidth);\n\t\t\tformData.append('tireRearRatio', values.tireRearRatio);\n\t\t\tformData.append('tireRearDiameter', values.tireRearDiameter);\n\t\t\tformData.append('frontPressure', values.frontPressure);\n\t\t\tformData.append('rearPressure', values.rearPressure);\n\n\t\t\tformData.append('LFCamber', values.LFCamber);\n\t\t\tformData.append('RFCamber', values.RFCamber);\n\t\t\tformData.append('LRCamber', values.LRCamber);\n\t\t\tformData.append('RRCamber', values.RRCamber);\n\t\t\tformData.append('LFCaster', values.LFCaster);\n\t\t\tformData.append('RFCaster', values.RFCaster);\n\t\t\tformData.append('LFToe', values.LFToe);\n\t\t\tformData.append('RFToe', values.RFToe);\n\t\t\tformData.append('frontToe', values.frontToe);\n\t\t\tformData.append('LRToe', values.LRToe);\n\t\t\tformData.append('RRToe', values.RRToe);\n\t\t\tformData.append('rearToe', values.rearToe);\n\t\t\tformData.append('FBar', values.FBar);\n\t\t\tformData.append('RBar', values.RBar);\n\n\t\t\tformData.append('FRebound', values.FRebound);\n\t\t\tformData.append('RRebound', values.RRebound);\n\t\t\tformData.append('FCompression', values.FCompression);\n\t\t\tformData.append('RCompression', values.RCompression);\n\t\t\tformData.append('note', values.note);\n\t\t\tformData.append('carImage', values.image);\n\n\t\t\tawait sendRequest(\n\t\t\t\tprocess.env.REACT_APP_BACKEND_URL + `/cars/${carId}`,\n\t\t\t\t'PATCH',\n\t\t\t\tformData,\n\t\t\t\t{\n\t\t\t\t\t// adding JWT to header for authentication\n\t\t\t\t\tAuthorization: 'Bearer ' + userAuthContext.userToken\n\t\t\t\t}\n\t\t\t);\n\t\t\tsetOKLeavePage(true);\n\t\t\t// Redirect to user garage page\n\t\t\thistory.push(`/users/garagewrapper/${userAuthContext.userId}`);\n\t\t} catch (err) {}\n\t};\n\n\t/***** Form Validation Section  *****/\n\t// 1. Field level: Field validate={validateName}. This validates when Field is onBlur\n\t// 3. Submit: use Formik isValid to enable the button.  Formik submission will validate everything.\n\tconst [validateYear, setValidateYear] = useState(() => value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Year is required.';\n\t\t}\n\t\treturn error;\n\t});\n\n\tconst [validateMake, setValidateMake] = useState(() => value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Make is required.';\n\t\t}\n\t\treturn error;\n\t});\n\n\tconst [validateModel, setValidateModel] = useState(() => value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Model is required.';\n\t\t}\n\t\treturn error;\n\t});\n\n\tconst [validateTireBrand, setValidateTireBrand] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Tire Brand is required.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\n\tconst [validateTireName, setValidateTireName] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Tire Name is required.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\n\tconst [\n\t\tvalidateTireFrontWidth,\n\t\tsetValidateTireFrontWidth\n\t] = useState(() => value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Front Tire Width is required.';\n\t\t}\n\t\treturn error;\n\t});\n\tconst [\n\t\tvalidateTireFrontRatio,\n\t\tsetValidateTireFrontRatio\n\t] = useState(() => value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Front Tire Ratio is required.';\n\t\t}\n\t\treturn error;\n\t});\n\tconst [\n\t\tvalidateTireFrontDiameter,\n\t\tsetValidateTireFrontDiameter\n\t] = useState(() => value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Front Tire Diameter is required.';\n\t\t}\n\t\treturn error;\n\t});\n\tconst [validateTireRearWidth, setValidateTireRearWidth] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Rear Tire Width is required.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\tconst [validateTireRearRatio, setValidateTireRearRatio] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Rear Tire Ratio is required.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\tconst [\n\t\tvalidateTireRearDiameter,\n\t\tsetValidateTireRearDiameter\n\t] = useState(() => value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Rear Tire Diameter is required.';\n\t\t}\n\t\treturn error;\n\t});\n\n\tconst validateImageSize = value => {\n\t\tlet error;\n\t\tif (value && value.size > 1500000) {\n\t\t\terror = 'File size needs to be smaller than 1.5MB';\n\t\t}\n\t\treturn error;\n\t};\n\t/***** End of Form Validation *****/\n\n\tconst carForm = values => (\n\t\t<div className=\"event-form\">\n\t\t\t<div className=\"event-form-header\">\n\t\t\t\t<h4>{userName}'s car</h4>\n\t\t\t\t<hr className=\"event-form__hr\" />\n\t\t\t</div>\n\t\t\t<Formik\n\t\t\t\tenableReinitialize={true}\n\t\t\t\tinitialValues={initialValues}\n\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\tsubmitHandler(values);\n\t\t\t\t\tif (!actions.isSubmitting) {\n\t\t\t\t\t\tsetValidateYear(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Year is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateMake(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Make is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateModel(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Model is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateTireBrand(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Tire Brand is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateTireName(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Tire Name is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateTireFrontWidth(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Front Tire Width is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateTireFrontRatio(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Front Tire Ratio is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateTireFrontDiameter(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Front Tire Diameter is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateTireRearWidth(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Rear Tire Width is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateTireRearRatio(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Rear Tire Ratio is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateTireRearDiameter(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Rear Tire Diameter is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}}>\n\t\t\t\t{({\n\t\t\t\t\tvalues,\n\t\t\t\t\terrors,\n\t\t\t\t\tisSubmitting,\n\t\t\t\t\tisValid,\n\t\t\t\t\tsetFieldValue,\n\t\t\t\t\ttouched,\n\t\t\t\t\thandleBlur\n\t\t\t\t}) => (\n\t\t\t\t\t<Form className=\"event-form-container\">\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"year\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\t<i className=\"far fa-car-side\" />\n\t\t\t\t\t\t\t&nbsp; Year &nbsp;\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"far fa-gas-pump\"\n\t\t\t\t\t\t\t\tstyle={{ color: 'Tomato' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"make\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\tMake &nbsp;\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"far fa-gas-pump\"\n\t\t\t\t\t\t\t\tstyle={{ color: 'Tomato' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"model\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\tModel &nbsp;\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"far fa-gas-pump\"\n\t\t\t\t\t\t\t\tstyle={{ color: 'Tomato' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"trimLevel\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\tTrim\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"year\"\n\t\t\t\t\t\t\tname=\"year\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tvalidate={validateYear}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.year will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('year', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.year && errors.year && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.year}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"make\"\n\t\t\t\t\t\t\tname=\"make\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tvalidate={validateMake}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.make will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('make', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.make && errors.make && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.make}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"model\"\n\t\t\t\t\t\t\tname=\"model\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tvalidate={validateModel}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.model will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('model', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.model && errors.model && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.model}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"trimLevel\"\n\t\t\t\t\t\t\tname=\"trimLevel\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.trimLevel will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('trimLevel', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.trimLevel && errors.trimLevel && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.trimLevel}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"tireBrand\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_half\">\n\t\t\t\t\t\t\t<i className=\"fad fa-tire\" />\n\t\t\t\t\t\t\t&nbsp; Tire Brand &nbsp;\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"far fa-gas-pump\"\n\t\t\t\t\t\t\t\tstyle={{ color: 'Tomato' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"tireName\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_half\">\n\t\t\t\t\t\t\tTire Name &nbsp;\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"far fa-gas-pump\"\n\t\t\t\t\t\t\t\tstyle={{ color: 'Tomato' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"tireBrand\"\n\t\t\t\t\t\t\tname=\"tireBrand\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_half\"\n\t\t\t\t\t\t\tvalidate={validateTireBrand}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.tireBrand will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('tireBrand', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.tireBrand && errors.tireBrand && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.tireBrand}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"tireName\"\n\t\t\t\t\t\t\tname=\"tireName\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_half\"\n\t\t\t\t\t\t\tvalidate={validateTireName}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.name will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('tireName', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.tireName && errors.tireName && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.tireName}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"tireFrontWidth\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\t<i className=\"far fa-ruler-horizontal\" />\n\t\t\t\t\t\t\t&nbsp; Front Tire Width &nbsp;\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"far fa-gas-pump\"\n\t\t\t\t\t\t\t\tstyle={{ color: 'Tomato' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"tireFrontRatio\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\tFront Tire Ratio &nbsp;\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"far fa-gas-pump\"\n\t\t\t\t\t\t\t\tstyle={{ color: 'Tomato' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"tireFrontDiameter\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\tFront Tire Diameter &nbsp;\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"far fa-gas-pump\"\n\t\t\t\t\t\t\t\tstyle={{ color: 'Tomato' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"tireFrontWidth\"\n\t\t\t\t\t\t\tname=\"tireFrontWidth\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tvalidate={validateTireFrontWidth}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.tireFrontWidth will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData(\n\t\t\t\t\t\t\t\t\t'tireFrontWidth',\n\t\t\t\t\t\t\t\t\tevent.target.value\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.tireFrontWidth && errors.tireFrontWidth && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.tireFrontWidth}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"tireFrontRatio\"\n\t\t\t\t\t\t\tname=\"tireFrontRatio\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tvalidate={validateTireFrontRatio}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.tireFrontRatio will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData(\n\t\t\t\t\t\t\t\t\t'tireFrontRatio',\n\t\t\t\t\t\t\t\t\tevent.target.value\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.tireFrontRatio && errors.tireFrontRatio && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.tireFrontRatio}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"tireFrontDiameter\"\n\t\t\t\t\t\t\tname=\"tireFrontDiameter\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tvalidate={validateTireFrontDiameter}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.tireFrontDiameter will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData(\n\t\t\t\t\t\t\t\t\t'tireFrontDiameter',\n\t\t\t\t\t\t\t\t\tevent.target.value\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.tireFrontDiameter &&\n\t\t\t\t\t\t\terrors.tireFrontDiameter && (\n\t\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t\t{errors.tireFrontDiameter}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"tireRearWidth\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\t<i className=\"far fa-ruler-horizontal\" />\n\t\t\t\t\t\t\t&nbsp; Rear Tire Width &nbsp;\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"far fa-gas-pump\"\n\t\t\t\t\t\t\t\tstyle={{ color: 'Tomato' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"tireRearRatio\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\tRear Tire Ratio &nbsp;\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"far fa-gas-pump\"\n\t\t\t\t\t\t\t\tstyle={{ color: 'Tomato' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"tireRearDiameter\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\tRear Tire Diameter &nbsp;\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"far fa-gas-pump\"\n\t\t\t\t\t\t\t\tstyle={{ color: 'Tomato' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"tireRearWidth\"\n\t\t\t\t\t\t\tname=\"tireRearWidth\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tvalidate={validateTireRearWidth}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.tireRearWidth will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData(\n\t\t\t\t\t\t\t\t\t'tireRearWidth',\n\t\t\t\t\t\t\t\t\tevent.target.value\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.tireRearWidth && errors.tireRearWidth && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.tireRearWidth}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"tireRearRatio\"\n\t\t\t\t\t\t\tname=\"tireRearRatio\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tvalidate={validateTireRearRatio}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.tireRearRatio will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData(\n\t\t\t\t\t\t\t\t\t'tireRearRatio',\n\t\t\t\t\t\t\t\t\tevent.target.value\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.tireRearRatio && errors.tireRearRatio && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.tireRearRatio}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"tireRearDiameter\"\n\t\t\t\t\t\t\tname=\"tireRearDiameter\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tvalidate={validateTireRearDiameter}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.tireRearDiameter will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData(\n\t\t\t\t\t\t\t\t\t'tireRearDiameter',\n\t\t\t\t\t\t\t\t\tevent.target.value\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.tireRearDiameter && errors.tireRearDiameter && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.tireRearDiameter}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t{/* This first checkbox will result in a boolean value being stored. Note that the `value` prop\n            \t\t\t\ton the <Field/> is omitted */}\n\t\t\t\t\t\t<label className=\"event-form__checkbox\">\n\t\t\t\t\t\t\t<Field type=\"checkbox\" name=\"share\" />\n\t\t\t\t\t\t\t{/* {`${values.toggle}`} */}\n\t\t\t\t\t\t\t&nbsp;Check if you agree to share the following\n\t\t\t\t\t\t\tsections.\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"frontPressure\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_half\">\n\t\t\t\t\t\t\t<i className=\"fal fa-tire-pressure-warning\" />\n\t\t\t\t\t\t\t&nbsp; Front Tire Pressure psi\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"rearPressure\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_half\">\n\t\t\t\t\t\t\tRear Tire Pressure psi\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"frontPressure\"\n\t\t\t\t\t\t\tname=\"frontPressure\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_half\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.frontPressure will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData(\n\t\t\t\t\t\t\t\t\t'frontPressure',\n\t\t\t\t\t\t\t\t\tevent.target.value\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.frontPressure && errors.frontPressure && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.frontPressure}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"rearPressure\"\n\t\t\t\t\t\t\tname=\"rearPressure\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_half\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.rearPressure will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('rearPressure', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.rearPressure && errors.rearPressure && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.rearPressure}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"LFCamber\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\t<i className=\"fal fa-ruler-triangle fa-rotate-90\" />\n\t\t\t\t\t\t\t&nbsp; Left Front Camber &#x00B0;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"RFCamber\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\tRight Front Camber &#x00B0;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"LRCamber\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\tLeft Rear Camber &#x00B0;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"RRCamber\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\tRight Rear Camber &#x00B0;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"LFCamber\"\n\t\t\t\t\t\t\tname=\"LFCamber\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.LFCamber will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('LFCamber', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.LFCamber && errors.LFCamber && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.LFCamber}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"RFCamber\"\n\t\t\t\t\t\t\tname=\"RFCamber\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.RFCamber will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('RFCamber', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.RFCamber && errors.RFCamber && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.RFCamber}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"LRCamber\"\n\t\t\t\t\t\t\tname=\"LRCamber\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.LRCamber will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('LRCamber', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.LRCamber && errors.LRCamber && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.LRCamber}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"RRCamber\"\n\t\t\t\t\t\t\tname=\"RRCamber\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.RRCamber will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('RRCamber', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.RRCamber && errors.RRCamber && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.RRCamber}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"LFCaster\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_half\">\n\t\t\t\t\t\t\t<i className=\"fal fa-starfighter-alt\" />\n\t\t\t\t\t\t\t&nbsp; Left Front Caster &#x00B0;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"RFCaster\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_half\">\n\t\t\t\t\t\t\tRight Front Caster &#x00B0;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"LFCaster\"\n\t\t\t\t\t\t\tname=\"LFCaster\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_half\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.LFCaster will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('LFCaster', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.LFCaster && errors.LFCaster && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.LFCaster}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"RFCaster\"\n\t\t\t\t\t\t\tname=\"RFCaster\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_half\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.RFCaster will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('RFCaster', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.RFCaster && errors.RFCaster && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.RFCaster}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"LFToe\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\t<i className=\"far fa-steering-wheel \" />\n\t\t\t\t\t\t\t&nbsp; Left Front Toe &#x2033;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"RFToe\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\tRight Front Toe &#x2033;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"frontToe\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\tFront Toe &#x2033;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"LFToe\"\n\t\t\t\t\t\t\tname=\"LFToe\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.LFToe will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('LFToe', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"RFToe\"\n\t\t\t\t\t\t\tname=\"RFToe\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.RFToe will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('RFToe', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"frontToe\"\n\t\t\t\t\t\t\tname=\"frontToe\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.RFToe will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('Front', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.LFToe && errors.LFToe && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.LFToe}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{touched.RFToe && errors.RFToe && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.RFToe}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{touched.frontToe && errors.frontToe && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.frontToe}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"LRToe\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\t<i className=\"far fa-steering-wheel \" />\n\t\t\t\t\t\t\t&nbsp; Left Rear Toe &#x2033;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"RRToe\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\tRight Rear Toe &#x2033;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"rearToe\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\tRear Toe &#x2033;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"LRToe\"\n\t\t\t\t\t\t\tname=\"LRToe\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.LRToe will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('LRToe', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"RRToe\"\n\t\t\t\t\t\t\tname=\"RRToe\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.RRToe will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('RRToe', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"rearToe\"\n\t\t\t\t\t\t\tname=\"rearToe\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.rearToe will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('rearToe', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.LRToe && errors.LRToe && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.LRToe}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{touched.RRToe && errors.RRToe && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.RRToe}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{touched.rearToe && errors.rearToe && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.rearToe}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"FBar\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_half\">\n\t\t\t\t\t\t\t<i className=\"fas fa-line-height fa-rotate-270\" />\n\t\t\t\t\t\t\t&nbsp; Front Sway Bar\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"RBar\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_half\">\n\t\t\t\t\t\t\tRear Sway Bar\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"FBar\"\n\t\t\t\t\t\t\tname=\"FBar\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_half\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.FBar will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('FBar', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.FBar && errors.FBar && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.FBar}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"RBar\"\n\t\t\t\t\t\t\tname=\"RBar\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_half\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.RBar will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('RBar', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.RBar && errors.RBar && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.RBar}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"FRebound\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\t<i className=\"far fa-sort-numeric-up-alt\" />\n\t\t\t\t\t\t\t&nbsp; Front Rebound\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"RRebound\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\tRear Rebound\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"FCompression\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\tFront Compression\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"RCompression\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\tRear Compression\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"FRebound\"\n\t\t\t\t\t\t\tname=\"FRebound\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.FRebound will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('FRebound', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.FRebound && errors.FRebound && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.FRebound}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"RRebound\"\n\t\t\t\t\t\t\tname=\"RRebound\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.RRebound will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('RRebound', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.RRebound && errors.RRebound && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.RRebound}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"FCompression\"\n\t\t\t\t\t\t\tname=\"FCompression\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.FCompression will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('FCompression', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.FCompression && errors.FCompression && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.FCompression}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"RCompression\"\n\t\t\t\t\t\t\tname=\"RCompression\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.RCompression will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('RCompression', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.RCompression && errors.RCompression && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.RCompression}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label htmlFor=\"note\" className=\"event-form__label\">\n\t\t\t\t\t\t\t<i className=\"far fa-sticky-note\"></i>\n\t\t\t\t\t\t\t&nbsp; Note (max: 350 characters)\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"note\"\n\t\t\t\t\t\t\tname=\"note\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tcomponent=\"textarea\"\n\t\t\t\t\t\t\trows=\"5\"\n\t\t\t\t\t\t\tcols=\"70\"\n\t\t\t\t\t\t\tmaxLength=\"350\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_textarea\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.note will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('note', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.note && errors.note && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.note}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"image\"\n\t\t\t\t\t\t\tname=\"image\"\n\t\t\t\t\t\t\ttitle=\"image\"\n\t\t\t\t\t\t\tcomponent={ImageUploader}\n\t\t\t\t\t\t\tvalidate={validateImageSize}\n\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\n\t\t\t\t\t\t\terrorMessage={errors.image ? errors.image : ''}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\t// if (event.target.value) {\n\t\t\t\t\t\t\t\t// \tsetImageOK(false);\n\t\t\t\t\t\t\t\t// } else {\n\t\t\t\t\t\t\t\t// \tsetImageOK(true);\n\t\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tlabelStyle=\"event-form__label\"\n\t\t\t\t\t\t\tinputStyle=\"event-form__field-select\"\n\t\t\t\t\t\t\tpreviewStyle=\"image-upload__preview\"\n\t\t\t\t\t\t\terrorStyle=\"event-form__field-error\"\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\tmargin-left=\"1.5rem\"\n\t\t\t\t\t\t\tdisabled={isSubmitting || !isValid}>\n\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<NavigationPrompt\n\t\t\t\t\t\t\tafterConfirm={() => {\n\t\t\t\t\t\t\t\tformContext.setIsInsideForm(false);\n\t\t\t\t\t\t\t\tremoveCarFormData();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t// Confirm navigation if going to a path that does not start with current path.\n\t\t\t\t\t\t\t// We don't want to confirm navigation when OKLeavePage === true and redirect to '/users/auth' due to\n\t\t\t\t\t\t\t// authentication issue\n\t\t\t\t\t\t\twhen={(crntLocation, nextLocation) => {\n\t\t\t\t\t\t\t\t// remove UserRedirectURL from memory\n\t\t\t\t\t\t\t\tuserAuthContext.setUserRedirectURL(null);\n\t\t\t\t\t\t\t\t// OKLeavePage meaning form was not touched yet\n\t\t\t\t\t\t\t\tif (OKLeavePage) {\n\t\t\t\t\t\t\t\t\tformContext.setIsInsideForm(false);\n\t\t\t\t\t\t\t\t\tremoveCarFormData();\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// nextLocation.pathname !== '/users/auth' &&  --- adding this line causing state update on an\n\t\t\t\t\t\t\t\t\t// unmounted component issue.  Without it, confirmation modal will pop up\n\t\t\t\t\t\t\t\t\t// always gives the warning, because we want to be able to\n\t\t\t\t\t\t\t\t\t// clear localStorage after confirm\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t!nextLocation ||\n\t\t\t\t\t\t\t\t\t\t!nextLocation.pathname.startsWith(\n\t\t\t\t\t\t\t\t\t\t\tcrntLocation.pathname\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t{({ isActive, onCancel, onConfirm }) => {\n\t\t\t\t\t\t\t\tif (isActive) {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<PromptModal\n\t\t\t\t\t\t\t\t\t\t\tonCancel={onCancel}\n\t\t\t\t\t\t\t\t\t\t\tonConfirm={onConfirm}\n\t\t\t\t\t\t\t\t\t\t\tcontentClass=\"event-item__modal-content\"\n\t\t\t\t\t\t\t\t\t\t\tfooterClass=\"event-item__modal-actions\"\n\t\t\t\t\t\t\t\t\t\t\terror=\"You sure want to leave? Unsaved data will be lost.\">\n\t\t\t\t\t\t\t\t\t\t\t{/* render props.children */}\n\t\t\t\t\t\t\t\t\t\t</PromptModal>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\tThis is probably an anti-pattern but ya know...\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t</NavigationPrompt>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t{isLoading && (\n\t\t\t\t<div className=\"center\">\n\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{carForm()}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default UpdateCar;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/pages/UpdateEventPhotos.js",["724","725","726","727","728","729","730"],"import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Field, Form, Formik } from 'formik';\nimport moment from 'moment';\nimport NavigationPrompt from 'react-router-navigation-prompt';\n\nimport { useClubLoginValidation } from '../../shared/hooks/clubLoginValidation-hook';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport ImageUploader from '../../shared/components/FormElements/ImageUploader';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport PromptModal from '../../shared/components/UIElements/PromptModal';\n\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { ClubAuthContext } from '../../shared/context/auth-context';\nimport { FormContext } from '../../shared/context/form-context';\n\nimport '../../shared/css/EventForm.css';\n\nconst UpdateEventPhotos = props => {\n\tlet eId = props.event.id;\n\tconst [initialized, setInitialized] = useState(false);\n\tconst clubAuthContext = useContext(ClubAuthContext);\n\tconst formContext = useContext(FormContext);\n\n\tuseEffect(() => {\n\t\tlet mounted = true;\n\t\tif (mounted) {\n\t\t\tformContext.setIsInsideForm(true);\n\t\t}\n\t\treturn () => {\n\t\t\tmounted = false;\n\t\t};\n\t}, [formContext]);\n\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\n\t// authentication check\n\tuseClubLoginValidation('/clubs/events/photos');\n\n\t// If we are re-directing to this page, we want to clear up clubRedirectURL\n\tlet location = useLocation();\n\tuseEffect(() => {\n\t\tlet path = location.pathname;\n\t\tlet clubRedirectURL = clubAuthContext.clubRedirectURL;\n\t\tif (path === clubRedirectURL) {\n\t\t\t// re-init redirectURL after re-direction route\n\t\t\tclubAuthContext.setClubRedirectURL(null);\n\t\t}\n\t}, [location, clubAuthContext]);\n\n\t// initialize local storage\n\t// Get the existing data\n\t// var eventFormData = localStorage.getItem('eventFormData');\n\n\t// If no existing data, create an array; otherwise retrieve it\n\t// eventFormData = eventFormData ? JSON.parse(eventFormData) : {};\n\n\tconst [OKLeavePage, setOKLeavePage] = useState(true);\n\n\tconst initialValues = {\n\t\timage: props.event.image,\n\t\tcourseMap: props.event.courseMap\n\t};\n\n\tconst updateEventFormData = (key, value) => {\n\t\tconst storageData = JSON.parse(\n\t\t\tlocalStorage.getItem('eventFormData')\n\t\t);\n\t\tstorageData[key] = value;\n\t\tlocalStorage.setItem(\n\t\t\t'eventFormData',\n\t\t\tJSON.stringify(storageData)\n\t\t);\n\t};\n\n\tconst history = useHistory();\n\tconst submitHandler = async (values, actions) => {\n\t\ttry {\n\t\t\tconst formData = new FormData();\n\t\t\tformData.append('eventImage', values.image);\n\t\t\tformData.append('courseMap', values.courseMap);\n\n\t\t\tconst [\n\t\t\t\tresponseData,\n\t\t\t\tresponseStatus,\n\t\t\t\tresponseMessage\n\t\t\t] = await sendRequest(\n\t\t\t\tprocess.env.REACT_APP_BACKEND_URL + '/events/photos/' + eId,\n\t\t\t\t'PATCH',\n\t\t\t\tformData,\n\t\t\t\t{\n\t\t\t\t\t// adding JWT to header for authentication\n\t\t\t\t\tAuthorization: 'Bearer ' + clubAuthContext.clubToken\n\t\t\t\t}\n\t\t\t);\n\t\t\tsetOKLeavePage(true);\n\t\t\tconsole.log('return new event');\n\t\t\tprops.returnNewEvent(responseData.event);\n\t\t} catch (err) {}\n\t};\n\n\tconst validateImageSize = value => {\n\t\tlet error;\n\t\tif (value && value.size > 1500000) {\n\t\t\terror = 'File size needs to be smaller than 1.5MB';\n\t\t}\n\t\treturn error;\n\t};\n\n\tconst validateCourseMapSize = value => {\n\t\tlet error;\n\t\tif (value && value.size > 1500000) {\n\t\t\terror = 'File size needs to be smaller than 1.5MB';\n\t\t}\n\t\treturn error;\n\t};\n\t/***** End of Form Validation *****/\n\n\tconst eventForm = values => (\n\t\t<div className=\"event-form\">\n\t\t\t<div className=\"event-form-header\">\n\t\t\t\t<h4>Please upload event image and course map</h4>\n\t\t\t\t<h5>Course map is optional</h5>\n\t\t\t\t<hr className=\"event-form__hr\" />\n\t\t\t</div>\n\t\t\t<Formik\n\t\t\t\tenableReinitialize={true}\n\t\t\t\tinitialValues={initialValues}\n\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\tsubmitHandler(values);\n\t\t\t\t\tif (!actions.isSubmitting) {\n\t\t\t\t\t}\n\t\t\t\t}}>\n\t\t\t\t{({\n\t\t\t\t\tdirty,\n\t\t\t\t\tvalues,\n\t\t\t\t\terrors,\n\t\t\t\t\tisSubmitting,\n\t\t\t\t\tisValid,\n\t\t\t\t\tsetFieldValue,\n\t\t\t\t\ttouched,\n\t\t\t\t\thandleBlur\n\t\t\t\t}) => (\n\t\t\t\t\t<Form className=\"event-form-container\">\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"image\"\n\t\t\t\t\t\t\tname=\"image\"\n\t\t\t\t\t\t\ttitle=\"Event Image\"\n\t\t\t\t\t\t\tcomponent={ImageUploader}\n\t\t\t\t\t\t\tvalidate={validateImageSize}\n\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\n\t\t\t\t\t\t\terrorMessage={errors.image ? errors.image : ''}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tlabelStyle=\"event-form__label\"\n\t\t\t\t\t\t\tinputStyle=\"event-form__field-select\"\n\t\t\t\t\t\t\tpreviewStyle=\"image-upload__preview\"\n\t\t\t\t\t\t\terrorStyle=\"event-form__field-error\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"courseMap\"\n\t\t\t\t\t\t\tname=\"courseMap\"\n\t\t\t\t\t\t\ttitle=\"Course Map (Optional)\"\n\t\t\t\t\t\t\tcomponent={ImageUploader}\n\t\t\t\t\t\t\tvalidate={validateCourseMapSize}\n\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\n\t\t\t\t\t\t\terrorMessage={errors.courseMap ? errors.courseMap : ''}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tlabelStyle=\"event-form__label\"\n\t\t\t\t\t\t\tinputStyle=\"event-form__field-select\"\n\t\t\t\t\t\t\tpreviewStyle=\"image-upload__preview\"\n\t\t\t\t\t\t\terrorStyle=\"event-form__field-error\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tsize=\"medium-block\"\n\t\t\t\t\t\t\tmargin-left=\"1.5rem\"\n\t\t\t\t\t\t\tdisabled={isSubmitting || (!isValid && dirty)}>\n\t\t\t\t\t\t\tSAVE\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<NavigationPrompt\n\t\t\t\t\t\t\tafterConfirm={() => {\n\t\t\t\t\t\t\t\tformContext.setIsInsideForm(false);\n\t\t\t\t\t\t\t\t// removeEventFormData();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t// Confirm navigation if going to a path that does not start with current path.\n\t\t\t\t\t\t\t// We don't want to confirm navigation when OKLeavePage === true and redirect to '/clubs/auth' due to\n\t\t\t\t\t\t\t// authentication issue\n\t\t\t\t\t\t\twhen={(crntLocation, nextLocation) => {\n\t\t\t\t\t\t\t\t// remove ClubRedirectURL from memory\n\t\t\t\t\t\t\t\tclubAuthContext.setClubRedirectURL(null);\n\t\t\t\t\t\t\t\t// OKLeavePage meaning form was not touched yet\n\t\t\t\t\t\t\t\tif (OKLeavePage) {\n\t\t\t\t\t\t\t\t\tformContext.setIsInsideForm(false);\n\t\t\t\t\t\t\t\t\t// removeEventFormData();\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// nextLocation.pathname !== '/clubs/auth' &&  --- adding this line causing state update on an\n\t\t\t\t\t\t\t\t\t// unmounted component issue.  Without it, confirmation modal will pop up\n\t\t\t\t\t\t\t\t\t// always gives the warning, because we want to be able to\n\t\t\t\t\t\t\t\t\t// clear localStorage after confirm\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t!nextLocation ||\n\t\t\t\t\t\t\t\t\t\t!nextLocation.pathname.startsWith(\n\t\t\t\t\t\t\t\t\t\t\tcrntLocation.pathname\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t{({ isActive, onCancel, onConfirm }) => {\n\t\t\t\t\t\t\t\tif (isActive) {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<PromptModal\n\t\t\t\t\t\t\t\t\t\t\tonCancel={onCancel}\n\t\t\t\t\t\t\t\t\t\t\tonConfirm={onConfirm}\n\t\t\t\t\t\t\t\t\t\t\tcontentclassName=\"event-item__modal-content\"\n\t\t\t\t\t\t\t\t\t\t\tfooterclassName=\"event-item__modal-actions\"\n\t\t\t\t\t\t\t\t\t\t\terror=\"You sure want to leave? Unsaved data will be lost.\">\n\t\t\t\t\t\t\t\t\t\t\t{/* render props.children */}\n\t\t\t\t\t\t\t\t\t\t</PromptModal>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\tThis is probably an anti-pattern but ya know...\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t</NavigationPrompt>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t{isLoading && (\n\t\t\t\t<div className=\"center\">\n\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{eventForm()}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default UpdateEventPhotos;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/hooks/logout-hook.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/toolbar.jsx",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/star-rating.jsx",["731","732","733","734"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport cx from 'classnames';\n\n/**\n * @fileoverview react-star-rating\n * @author @cameronjroe\n * <StarRating\n *   name={string} - name for form input (required)\n *   caption={string} - caption for rating (optional)\n *   ratingAmount={number} - the rating amount (required, default: 5)\n *   rating={number} - a set rating between the rating amount (optional)\n *   disabled={boolean} - whether to disable the rating from being selected (optional)\n *   editing={boolean} - whether the rating is explicitly in editing mode (optional)\n *   size={string} - size of stars (optional)\n *   onRatingClick={function} - a handler function that gets called onClick of the rating (optional)\n *   />\n */\n\nexport default class StarRating extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ratingCache: {\n        pos: 0,\n        rating: 0,\n      },\n      editing: props.editing || true,\n      stars: 5,\n      rating: 0,\n      pos: 0,\n      glyph: this.getStars(),\n    };\n  }\n\n  /**\n   * Gets the stars based on ratingAmount\n   * @return {string} stars\n   */\n  getStars() {\n    let stars = '';\n    const numRating = this.props.ratingAmount;\n    for (let i = 0; i < numRating; i++) {\n      stars += '\\u2605';\n    }\n    return stars;\n  }\n\n  componentWillMount() {\n    this.min = 0;\n    this.max = this.props.ratingAmount || 5;\n    if (this.props.rating) {\n      this.state.editing = this.props.editing || false;\n      const ratingVal = this.props.rating;\n      this.state.ratingCache.pos = this.getStarRatingPosition(ratingVal);\n      this.state.ratingCache.rating = ratingVal;\n\n      this.setState({\n        ratingCache: this.state.ratingCache,\n        rating: ratingVal,\n        pos: this.getStarRatingPosition(ratingVal),\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.root = ReactDOM.findDOMNode(this.rootNode);\n    this.ratingContainer = ReactDOM.findDOMNode(this.node);\n  }\n\n  componentWillUnmount() {\n    delete this.root;\n    delete this.ratingContainer;\n  }\n\n  getPosition(e) {\n    return e.pageX - this.root.getBoundingClientRect().left;\n  }\n\n  applyPrecision(val, precision) {\n    return parseFloat(val.toFixed(precision));\n  }\n\n  getDecimalPlaces(num) {\n    const match = (`${num}`).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\n    return !match ? 0 : Math.max(0, (match[1] ? match[1].length : 0) - (match[2] ? +match[2] : 0));\n  }\n\n  getWidthFromValue(val) {\n    const min = this.min;\n    const max = this.max;\n\n    if (val <= min || min === max) {\n      return 0;\n    }\n    if (val >= max) {\n      return 100;\n    }\n    return (val / (max - min)) * 100;\n  }\n\n  getValueFromPosition(pos) {\n    const precision = this.getDecimalPlaces(this.props.step);\n    const maxWidth = this.ratingContainer.offsetWidth;\n    const diff = this.max - this.min;\n    let factor = (diff * pos) / (maxWidth * this.props.step);\n    factor = Math.ceil(factor);\n    let val = this.applyPrecision(parseFloat(this.min + factor * this.props.step), precision);\n    val = Math.max(Math.min(val, this.max), this.min);\n    return val;\n  }\n\n  calculate(pos) {\n    const val = this.getValueFromPosition(pos);\n    let width = this.getWidthFromValue(val);\n\n    width += '%';\n    return { width, val };\n  }\n\n  getStarRatingPosition(val) {\n    const width = `${this.getWidthFromValue(val)}%`;\n    return width;\n  }\n\n  getRatingEvent(e) {\n    const pos = this.getPosition(e);\n    return this.calculate(pos);\n  }\n\n  getSvg() {\n    return (\n      <svg className=\"react-star-rating__star\" viewBox=\"0 0 286 272\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n          <polygon id=\"star-flat\" points=\"143 225 54.8322122 271.352549 71.6707613 173.176275 0.341522556 103.647451 98.9161061 89.3237254 143 0 187.083894 89.3237254 285.658477 103.647451 214.329239 173.176275 231.167788 271.352549 \"></polygon>\n        </g>\n      </svg>\n    );\n  }\n\n  handleMouseLeave() {\n    this.setState({\n      pos: this.state.ratingCache.pos,\n      rating: this.state.ratingCache.rating,\n    });\n  }\n\n  handleMouseMove(e) {\n    // get hover position\n    const ratingEvent = this.getRatingEvent(e);\n    this.updateRating(\n      ratingEvent.width,\n      ratingEvent.val,\n    );\n  }\n\n  updateRating(width, val) {\n    this.setState({\n      pos: width,\n      rating: val,\n    });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextProps !== this.props) {\n      this.updateRating(\n        this.getStarRatingPosition(nextProps.rating),\n        nextProps.rating,\n      );\n      return true;\n    }\n    return nextState.ratingCache.rating !== this.state.ratingCache.rating || nextState.rating !== this.state.rating;\n  }\n\n  handleClick(e) {\n    // is it disabled?\n    if (this.props.disabled) {\n      e.stopPropagation();\n      e.preventDefault();\n      return false;\n    }\n\n    const ratingCache = {\n      pos: this.state.pos,\n      rating: this.state.rating,\n      caption: this.props.caption,\n      name: this.props.name,\n    };\n\n    this.setState({\n      ratingCache,\n    });\n\n    this.props.onRatingClick(e, ratingCache);\n    return true;\n  }\n\n  treatName(title) {\n    if (typeof title === 'string') {\n      return title.toLowerCase().split(' ').join('_');\n    }\n    return null;\n  }\n\n  render() {\n    // let caption = null;\n    const classes = cx({\n      'react-star-rating__root': true,\n      'rating-disabled': this.props.disabled,\n      [`react-star-rating__size--${this.props.size}`]: this.props.size,\n      'rating-editing': this.state.editing,\n    });\n\n    // is there a caption?\n    // if (this.props.caption) {\n    //   caption = (<span className=\"react-rating-caption\">{this.props.caption}</span>);\n    // }\n\n    // are we editing this rating?\n    let starRating;\n    if (this.state.editing) {\n      starRating = (\n        <div ref={c => this.node = c}\n          className=\"rating-container rating-gly-star\"\n          data-content={this.state.glyph}\n          onMouseMove={this.handleMouseMove.bind(this)}\n          onMouseLeave={this.handleMouseLeave.bind(this)}\n          onClick={this.handleClick.bind(this)}>\n          <div className=\"rating-stars\" data-content={this.state.glyph} style={{ width: this.state.pos }}></div>\n        </div>\n      );\n    } else {\n      starRating = (\n        <div ref={c => this.node = c} className=\"rating-container rating-gly-star\" data-content={this.state.glyph}>\n          <div className=\"rating-stars\" data-content={this.state.glyph} style={{ width: this.state.pos }}></div>\n        </div>\n      );\n    }\n\n    return (\n      <span className=\"react-star-rating\">\n        <span ref={c => this.rootNode = c} style={{ cursor: 'pointer' }} className={classes}>\n          {starRating}\n          <input type=\"number\" name={this.props.name} value={this.state.ratingCache.rating} style={{ display: 'none !important' }} min={this.min} max={this.max} readOnly style={{\n            width: 65,\n          }}/>\n        </span>\n      </span>\n    );\n  }\n}\n\nStarRating.propTypes = {\n  name: PropTypes.string.isRequired,\n  caption: PropTypes.string,\n  ratingAmount: PropTypes.number.isRequired,\n  rating: PropTypes.number,\n  onRatingClick: PropTypes.func,\n  disabled: PropTypes.bool,\n  editing: PropTypes.bool,\n  size: PropTypes.string,\n};\n\nStarRating.defaultProps = {\n  step: 0.5,\n  ratingAmount: 5,\n  onRatingClick() {},\n  disabled: false,\n};\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/Navigation/MainNavigation.js",["735"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubs/pages/ClubAuth.js",["736","737","738"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/NewEventManager.js",["739","740","741","742"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/ClubAccountManager.js",["743","744","745","746"],"import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Button from '../../shared/components/FormElements/Button';\nimport ClubCredential from './ClubCredential';\nimport ClubStripe from './ClubStripe';\nimport ClubAccount from './ClubAccount';\nimport RedirectExternalURL from '../../shared/hooks/redirectExternalURL';\nimport '../../shared/css/EventForm.css';\nimport '../../event/components/EventItem.css';\nimport './ClubManager.css';\nimport ClubAuthConetxt, {\n\tClubAuthContext\n} from '../../shared/context/auth-context';\nimport { Redirect } from 'react-router-dom';\n\nconst ClubAccountManager = () => {\n\tconst history = useHistory();\n\tconst clubAuthContext = useContext(ClubAuthContext);\n\t// eventInfo controls what to display in Tab Content\n\tconst [credential, setCredential] = useState(false);\n\t// eventInfoClass contorls className used for Button\n\tconst [credentialClass, setCredentialClass] = useState(\n\t\t'editeventmanager-grey'\n\t);\n\tconst [stripe, setStripe] = useState(false);\n\tconst [stripeClass, setStripeClass] = useState(\n\t\t'editeventmanager-grey'\n\t);\n\tconst [account, setAccount] = useState(false);\n\tconst [accountClass, setAccountClass] = useState(\n\t\t'editeventmanager-grey'\n\t);\n\n\tconst [stripeConnectURL, setStripeConnectURL] = useState();\n\n\tconst getStripeConnectURL = url => {\n\t\tsetStripeConnectURL(url);\n\t};\n\n\tuseEffect(() => {\n\t\tif (stripeConnectURL) {\n\t\t\tconsole.log('found stripe URL = ', stripeConnectURL);\n\t\t\tclubAuthContext.setClubRedirectURL(stripeConnectURL);\n\t\t\thistory.push('/stripeConnect/');\n\t\t}\n\t}, [stripeConnectURL]);\n\n\tconst credentialClickHandler = () => {\n\t\tsetCredential(true);\n\t\tsetCredentialClass('editeventmanager-orange');\n\t\tsetStripe(false);\n\t\tsetStripeClass('editeventmanager-grey');\n\t\tsetAccount(false);\n\t\tsetAccountClass('editeventmanager-grey');\n\t};\n\tconst stripeClickHandler = () => {\n\t\tsetCredential(false);\n\t\tsetCredentialClass('editeventmanager-grey');\n\t\tsetStripe(true);\n\t\tsetStripeClass('editeventmanager-orange');\n\t\tsetAccount(false);\n\t\tsetAccountClass('editeventmanager-grey');\n\t};\n\n\tconst accountClickHandler = () => {\n\t\tsetCredential(false);\n\t\tsetCredentialClass('editeventmanager-grey');\n\t\tsetStripe(false);\n\t\tsetStripeClass('editeventmanager-grey');\n\t\tsetAccount(true);\n\t\tsetAccountClass('editeventmanager-orange');\n\t};\n\n\t// set defualt page, if none is false, we will use eventInfo as default\n\tif (!credential && !stripe && !account) {\n\t\tcredentialClickHandler();\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div className=\"list-header clearfix\">\n\t\t\t\t<div className=\"h3\">Account Manager</div>\n\t\t\t</div>\n\n\t\t\t{/* Edit Event Manager Tabs*/}\n\t\t\t<div className=\"eventmanager\">\n\t\t\t\t<div className=\"dashboard-tabs activity-sections\">\n\t\t\t\t\t<br />\n\t\t\t\t\t<ul className=\"nav nav-tabs\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tsize={credentialClass}\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\tonClick={credentialClickHandler}>\n\t\t\t\t\t\t\tClub Credential\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tsize={stripeClass}\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\tonClick={stripeClickHandler}>\n\t\t\t\t\t\t\tStripe\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tsize={accountClass}\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\tonClick={accountClickHandler}>\n\t\t\t\t\t\t\tPayment\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<div className=\"tab-content\">\n\t\t\t\t\t\t{credential && <ClubCredential />}\n\t\t\t\t\t\t{stripe && (\n\t\t\t\t\t\t\t<ClubStripe getStripeConnectURL={getStripeConnectURL} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{account && <ClubAccount />}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{/* {stripeConnectURL && (\n\t\t\t\t<RedirectExternalURL url={stripeConnectURL} />\n\t\t\t)} */}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default ClubAccountManager;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/ClubCredential.js",["747","748","749","750","751","752","753","754","755","756"],"import React, { useContext, useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Field, Form, Formik } from 'formik';\nimport NavigationPrompt from 'react-router-navigation-prompt';\n\nimport { useClubLoginValidation } from '../../shared/hooks/clubLoginValidation-hook';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport ImageUploader from '../../shared/components/FormElements/ImageUploader';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport PromptModal from '../../shared/components/UIElements/PromptModal';\n\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { ClubAuthContext } from '../../shared/context/auth-context';\nimport { FormContext } from '../../shared/context/form-context';\n\nimport '../../shared/css/EventForm.css';\n\nconst ClubCredential = () => {\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\n\tconst clubAuthContext = useContext(ClubAuthContext);\n\tconst clubId = clubAuthContext.clubId;\n\n\t// authentication check check whether club has logged in\n\tuseClubLoginValidation(`/clubs/accountManager/${clubId}`);\n\n\tconst [showEmail, setShowEmail] = useState(false);\n\tconst toggleShowEmailButton = () => {\n\t\tif (showEmail === false) {\n\t\t\tsetShowEmail(true);\n\t\t} else {\n\t\t\tsetShowEmail(false);\n\t\t}\n\t};\n\tconst [showEmailButton, setShowEmailButton] = useState(\n\t\t<i className=\"fal fa-eye-slash fa-lg\" />\n\t);\n\tuseEffect(() => {\n\t\tif (showEmail) {\n\t\t\tsetShowEmailButton(<i className=\"fal fa-eye fa-lg\" />);\n\t\t} else {\n\t\t\tsetShowEmailButton(<i className=\"fal fa-eye-slash fa-lg\" />);\n\t\t}\n\t}, [showEmail, setShowEmailButton]);\n\n\t// If we are re-directing to this page, we want to clear up clubRedirectURL\n\tlet location = useLocation();\n\tlet path;\n\tuseEffect(() => {\n\t\tpath = location.pathname;\n\t\tlet clubRedirectURL = clubAuthContext.clubRedirectURL;\n\t\tif (path === clubRedirectURL) {\n\t\t\t// re-init redirectURL after re-direction route\n\t\t\tclubAuthContext.setClubRedirectURL(null);\n\t\t}\n\t}, [location]);\n\n\tconst [OKLeavePage, setOKLeavePage] = useState('true');\n\tlet initialValues = {\n\t\temail: '',\n\t\tpassword: '******',\n\t\toldPassword: '',\n\t\tnewPassword: '',\n\t\tpasswordValidation: ''\n\t};\n\n\tconst validateEmail = value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Email is required.';\n\t\t} else {\n\t\t\tconst pattern = /[a-z0-9A-Z!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9A-Z!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n\t\t\tif (!pattern.test(value)) {\n\t\t\t\terror = 'Please enter a valid email';\n\t\t\t}\n\t\t}\n\t\treturn error;\n\t};\n\n\tconst [validatePassword, setValidatePassword] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Password is required.';\n\t\t\t} else if (value.length < 6) {\n\t\t\t\terror = 'Minimum password length is 6 characters.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\n\tconst [loadedClubCredential, setLoadedClubCredential] = useState();\n\tuseEffect(() => {\n\t\tconst fetchClubCredential = async () => {\n\t\t\ttry {\n\t\t\t\tconst [\n\t\t\t\t\tresponseData,\n\t\t\t\t\tresponseStatus,\n\t\t\t\t\tresponseMessage\n\t\t\t\t] = await sendRequest(\n\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL +\n\t\t\t\t\t\t`/clubs/credential/${clubId}`,\n\t\t\t\t\t'GET',\n\t\t\t\t\tnull,\n\t\t\t\t\t{\n\t\t\t\t\t\t// adding JWT to header for authentication, JWT contains clubId\n\t\t\t\t\t\tAuthorization: 'Bearer ' + clubAuthContext.clubToken\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\t// Need to set the loadedClubProfile so we will set initialValues again.\n\t\t\t\t// Without it, form will keep the old initial values.\n\t\t\t\tsetLoadedClubCredential(responseData.clubCredential);\n\t\t\t} catch (err) {}\n\t\t};\n\t\tfetchClubCredential();\n\t}, [clubId, setLoadedClubCredential]);\n\n\tconst [verification, setVerification] = useState(false);\n\tconst [saveButtonEnabled, setSaveButtonEnabled] = useState(false);\n\tconst submitHandler = async values => {\n\t\ttry {\n\t\t\tconst [\n\t\t\t\tresponseData,\n\t\t\t\tresponseStatus,\n\t\t\t\tresponseMessage\n\t\t\t] = await sendRequest(\n\t\t\t\tprocess.env.REACT_APP_BACKEND_URL + '/clubs/credential',\n\t\t\t\t'PATCH',\n\t\t\t\tJSON.stringify({\n\t\t\t\t\toldPassword: values.oldPassword,\n\t\t\t\t\tnewPassword: values.newPassword,\n\t\t\t\t\tpasswordValidation: values.passwordValidation\n\t\t\t\t}),\n\t\t\t\t{\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t// adding JWT to header for authentication, JWT contains clubId\n\t\t\t\t\tAuthorization: 'Bearer ' + clubAuthContext.clubToken\n\t\t\t\t}\n\t\t\t);\n\t\t\t// Need to set the loadedClubProfile so we will set initialValues again.\n\t\t\t// Without it, form will keep the old initial values.\n\t\t\tsetVerification(responseData.verification);\n\t\t\tsetSaveButtonEnabled(false);\n\t\t} catch (err) {}\n\t};\n\n\tif (isLoading) {\n\t\treturn (\n\t\t\t<div className=\"center\">\n\t\t\t\t<LoadingSpinner />\n\t\t\t</div>\n\t\t);\n\t}\n\n\tif (loadedClubCredential) {\n\t\tinitialValues = {\n\t\t\temail: loadedClubCredential.email,\n\t\t\tpassword: '******',\n\t\t\toldPassword: '',\n\t\t\tnewPassword: '',\n\t\t\tpasswordValidation: ''\n\t\t};\n\t}\n\n\tconst credentialForm = () => (\n\t\t<div className=\"event-form\">\n\t\t\t<div className=\"event-form-header\">\n\t\t\t\t<h4>Club Credentials</h4>\n\t\t\t\t<hr className=\"event-form__hr\" />\n\t\t\t</div>\n\t\t\t<Formik\n\t\t\t\tenableReinitialize={true}\n\t\t\t\tinitialValues={initialValues}\n\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\tsubmitHandler(values);\n\t\t\t\t\tif (actions.isSubmitting) {\n\t\t\t\t\t\tactions.setSubmitting(false);\n\t\t\t\t\t}\n\t\t\t\t\tif (!actions.isSubmitting) {\n\t\t\t\t\t\tsetValidatePassword(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Password is required.';\n\t\t\t\t\t\t\t} else if (value.length < 6) {\n\t\t\t\t\t\t\t\terror = 'Minimum password length is 6 characters.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}}>\n\t\t\t\t{({\n\t\t\t\t\terrors,\n\t\t\t\t\thandleBlur,\n\t\t\t\t\thandleChange,\n\t\t\t\t\thandleSubmit,\n\t\t\t\t\tisSubmitting,\n\t\t\t\t\tisValid,\n\t\t\t\t\tsetFieldValue,\n\t\t\t\t\ttouched,\n\t\t\t\t\tvalues\n\t\t\t\t}) => (\n\t\t\t\t\t<Form className=\"event-form-container\">\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"stripePublicKey\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline\">\n\t\t\t\t\t\t\tEmail\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tclassName=\"showPasswordButton\"\n\t\t\t\t\t\t\tonClick={toggleShowEmailButton}>\n\t\t\t\t\t\t\t{showEmailButton}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<fieldset disabled>\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\ttype={showEmail ? 'text' : 'password'}\n\t\t\t\t\t\t\t\tclassName=\"event-form__field\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t<label htmlFor=\"password\" className=\"event-form__label\">\n\t\t\t\t\t\t\tPassword (For security, password will not be displayed)\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<fieldset disabled>\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tclassName=\"event-form__field\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"oldPassword\"\n\t\t\t\t\t\t\tclassName=\"event-form__label\">\n\t\t\t\t\t\t\tPlease Enter Old Password\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"oldPassword\"\n\t\t\t\t\t\t\tname=\"oldPassword\"\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tvalidate={validatePassword}\n\t\t\t\t\t\t\tclassName=\"event-form__field\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\tsetSaveButtonEnabled(true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"newPassword\"\n\t\t\t\t\t\t\tclassName=\"event-form__label\">\n\t\t\t\t\t\t\tPlease Enter New Password (Minimum 6 characters)\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"newPassword\"\n\t\t\t\t\t\t\tname=\"newPassword\"\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tvalidate={validatePassword}\n\t\t\t\t\t\t\tclassName=\"event-form__field\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\tsetSaveButtonEnabled(true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.newPassword && errors.newPassword && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.newPassword}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"passwordValidation\"\n\t\t\t\t\t\t\tclassName=\"event-form__label\">\n\t\t\t\t\t\t\tRe-Enter New Password\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"passwordValidation\"\n\t\t\t\t\t\t\tname=\"passwordValidation\"\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tvalidate={validatePassword}\n\t\t\t\t\t\t\tclassName=\"event-form__field\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\tsetSaveButtonEnabled(true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.passwordValidation &&\n\t\t\t\t\t\t\terrors.passwordValidation && (\n\t\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t\t{errors.passwordValidation}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"forgotPassword\"\n\t\t\t\t\t\t\tclassName=\"event-form__label\">\n\t\t\t\t\t\t\tForgot Password? Please ask our admin for help.\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\tmargin-left=\"1.5rem\"\n\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\tisSubmitting || !isValid || !saveButtonEnabled\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonClick={e => {\n\t\t\t\t\t\t\t\tsetFieldValue('isSaveButton', false, false);\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\tChange Password\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<NavigationPrompt\n\t\t\t\t\t\t\tafterConfirm={() => {\n\t\t\t\t\t\t\t\t// localStorage.removeItem('eventID');\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t// Confirm navigation if going to a path that does not start with current path:\n\t\t\t\t\t\t\twhen={(crntLocation, nextLocation) => {\n\t\t\t\t\t\t\t\t// remove ClubRedirectURL from memory\n\t\t\t\t\t\t\t\tclubAuthContext.setClubRedirectURL(null);\n\t\t\t\t\t\t\t\t// OKLeavePage meaning form was not touched yet\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tOKLeavePage ||\n\t\t\t\t\t\t\t\t\tnextLocation.pathname === '/clubs/auth'\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t!nextLocation ||\n\t\t\t\t\t\t\t\t\t\t!nextLocation.pathname.startsWith(\n\t\t\t\t\t\t\t\t\t\t\tcrntLocation.pathname\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t{({ isActive, onCancel, onConfirm }) => {\n\t\t\t\t\t\t\t\tif (isActive) {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<PromptModal\n\t\t\t\t\t\t\t\t\t\t\tonCancel={onCancel}\n\t\t\t\t\t\t\t\t\t\t\tonConfirm={onConfirm}\n\t\t\t\t\t\t\t\t\t\t\tcontentClass=\"event-item__modal-content\"\n\t\t\t\t\t\t\t\t\t\t\tfooterClass=\"event-item__modal-actions\"\n\t\t\t\t\t\t\t\t\t\t\terror=\"You sure want to leave? Unsaved data will be lost.\"></PromptModal>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\tThis is probably an anti-pattern but ya know...\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t</NavigationPrompt>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t{!isLoading && credentialForm()}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default ClubCredential;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/entryDashboard/pages/NewEntryManager.js",["757","758","759","760"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/users/pages/UserGarageWrapper.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/hooks/http-hook.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/UIElements/Backdrop.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/users/pages/UserGarage.js",["761","762","763","764"],"import React, { useEffect, useState, useContext } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport UserCarsList from '../components/UserCarsList';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { UserAuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { useParams } from 'react-router-dom';\nimport { useUserLoginValidation } from '../../shared/hooks/userLoginValidation-hook';\n\nimport '../../shared/css/Events.css';\n\n// Events is called in App.js where the route been defined\nconst UserGarage = props => {\n\t// check if the caller is CarSelector\n\tconst carSelector = props.carSelector;\n\tconst userId = props.userId;\n\tconst entryCarId = props.entryCarId;\n\tconst isNewEntry = props.isNewEntry;\n\n\tconst [loadedCars, setLoadedCars] = useState();\n\tconst userAuthContext = useContext(UserAuthContext);\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\n\tconst getNewEntry = entry => {\n\t\tprops.getNewEntry(entry);\n\t};\n\n\t// useParams().{Id} Id need to match what defines in <Route path=\"/cars/users/:userId\" exact>\n\n\t// We don't need to take care of page refreshing here because <Route path=\"/cars/users/:userId\" exact>\n\t// is added even if user is not logged in\n\t// If User is not logged in, we will re-direct to user login page.\n\t// authentication check. remember current path. We will use it to check if we are in the re-direct loop to\n\t// avoid validation loop\n\tuseUserLoginValidation(`/users/garagewrapper/${userId}`);\n\tlet location = useLocation();\n\tuseEffect(() => {\n\t\t// get current URL path\n\t\tlet path = location.pathname;\n\t\tlet userRedirectURL = userAuthContext.userRedirectURL;\n\t\tif (path === userRedirectURL) {\n\t\t\t// If we are re-directing to this page, we want to clear up userRedirectURL\n\t\t\t// re-init redirectURL after re-direction route\n\t\t\tuserAuthContext.setUserRedirectURL(null);\n\t\t}\n\t}, [userAuthContext, location]);\n\n\tuseEffect(() => {\n\t\tconst fetechEvents = async () => {\n\t\t\ttry {\n\t\t\t\tlet responseData, responseStatus, responseMessage;\n\t\t\t\tif (carSelector) {\n\t\t\t\t\t[\n\t\t\t\t\t\tresponseData,\n\t\t\t\t\t\tresponseStatus,\n\t\t\t\t\t\tresponseMessage\n\t\t\t\t\t] = await sendRequest(\n\t\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL +\n\t\t\t\t\t\t\t`/cars/users/${userId}`,\n\t\t\t\t\t\t'POST',\n\t\t\t\t\t\tJSON.stringify({ active: true }),\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'Content-type': 'application/json',\n\t\t\t\t\t\t\tAuthorization: 'Bearer ' + userAuthContext.userToken\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\t[\n\t\t\t\t\t\tresponseData,\n\t\t\t\t\t\tresponseStatus,\n\t\t\t\t\t\tresponseMessage\n\t\t\t\t\t] = await sendRequest(\n\t\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL +\n\t\t\t\t\t\t\t`/cars/users/${userId}`,\n\t\t\t\t\t\t'POST',\n\t\t\t\t\t\tJSON.stringify({ active: false }),\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'Content-type': 'application/json',\n\t\t\t\t\t\t\tAuthorization: 'Bearer ' + userAuthContext.userToken\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tsetLoadedCars(responseData.cars);\n\t\t\t\t// Check who's viewing the garage. If it's from owner, store data under localStorage 'userData'\n\t\t\t\t// otherwise store in 'garages' with different userId\n\t\t\t\tif (userId === userAuthContext.userId) {\n\t\t\t\t\tlet userData = JSON.parse(localStorage.getItem('userData'));\n\t\t\t\t\tuserData.garage = responseData.cars;\n\t\t\t\t\tlocalStorage.setItem('userData', JSON.stringify(userData));\n\t\t\t\t} else {\n\t\t\t\t\tlet garages = JSON.parse(localStorage.getItem('garages'))\n\t\t\t\t\t\t? JSON.parse(localStorage.getItem('garages'))\n\t\t\t\t\t\t: [];\n\t\t\t\t\tgarages.push({ userId: responseData.cars });\n\t\t\t\t\tlocalStorage.setItem('garages', JSON.stringify(garages));\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log('err = ', err);\n\t\t\t}\n\t\t};\n\t\tfetechEvents();\n\t}, [sendRequest, userId, userAuthContext, setLoadedCars]);\n\n\tconst carSelectorStatus = status => {\n\t\tprops.carSelectorStatus(status);\n\t};\n\n\tconst carIdHandler = carId => {\n\t\tprops.carIdHandler(carId);\n\t};\n\n\t// calling EventsList from EventsList.js where it passes EVENTS to child EventsList\n\t// just treat the following call as EventsList(items = EVENTS); items is the props\n\t// name defined in EventsList\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t{isLoading && (\n\t\t\t\t<div className=\"center\">\n\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{!isLoading && loadedCars && !carSelector && (\n\t\t\t\t<UserCarsList items={loadedCars} carSelector={false} />\n\t\t\t)}\n\t\t\t{!isLoading && loadedCars && carSelector && (\n\t\t\t\t<UserCarsList\n\t\t\t\t\titems={loadedCars}\n\t\t\t\t\tcarSelector={true}\n\t\t\t\t\tcarSelectorStatus={carSelectorStatus}\n\t\t\t\t\tcarIdHandler={carIdHandler}\n\t\t\t\t\tisNewEntry={isNewEntry}\n\t\t\t\t\tentryCarId={entryCarId}\n\t\t\t\t\tentryId={props.entryId}\n\t\t\t\t\tgetNewEntry={getNewEntry}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t{!isLoading && !loadedCars && !carSelector && (\n\t\t\t\t<div>\n\t\t\t\t\t<p> &nbsp; &nbsp; &nbsp;No car in the garage. </p>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{!isLoading && !loadedCars && carSelector && (\n\t\t\t\t<div>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t&nbsp; &nbsp; &nbsp;No car in the garage. You must add a\n\t\t\t\t\t\tcar to enter the event.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default UserGarage;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/ClubProfile.js",["765","766","767","768","769","770","771"],"import React, { useContext, useEffect, useState } from 'react';\nimport { Field, Form, Formik } from 'formik';\nimport { useLocation } from 'react-router-dom';\nimport NavigationPrompt from 'react-router-navigation-prompt';\n\nimport { useClubLoginValidation } from '../../shared/hooks/clubLoginValidation-hook';\nimport Button from '../../shared/components/FormElements/Button';\nimport { ClubAuthContext } from '../../shared/context/auth-context';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport PromptModal from '../../shared/components/UIElements/PromptModal';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { FormContext } from '../../shared/context/form-context';\nimport '../../shared/css/EventForm.css';\nimport '../../event/components/EventItem.css';\n\nconst ClubProfile = () => {\n\tconst [loadedClubProfile, setLoadedClubProfile] = useState();\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\n\tconst formContext = useContext(FormContext);\n\tuseEffect(() => {\n\t\tlet mounted = true;\n\t\tif (mounted) {\n\t\t\tformContext.setIsInsideForm(true);\n\t\t}\n\t\treturn () => {\n\t\t\tmounted = false;\n\t\t};\n\t}, [formContext]);\n\n\tconst clubAuthContext = useContext(ClubAuthContext);\n\tconst clubId = clubAuthContext.clubId;\n\n\t// authentication check check whether club has logged in\n\tuseClubLoginValidation(`/clubs/profileManager/${clubId}`);\n\n\t// If we are re-directing to this page, we want to clear up clubRedirectURL\n\tlet location = useLocation();\n\tuseEffect(() => {\n\t\tif (location) {\n\t\t\tlet path = location.pathname;\n\t\t\tlet clubRedirectURL = clubAuthContext.clubRedirectURL;\n\t\t\tif (path === clubRedirectURL) {\n\t\t\t\t// re-init redirectURL after re-direction route\n\t\t\t\tclubAuthContext.setClubRedirectURL(null);\n\t\t\t}\n\t\t}\n\t}, [location, clubAuthContext]);\n\n\tconst [OKLeavePage, setOKLeavePage] = useState(true);\n\tlet initialValues = {\n\t\twebPage: '',\n\t\tfaceBook: '',\n\t\tyouTube: '',\n\t\tcontactEmail: '',\n\t\tdescription: '',\n\t\tschedule: ''\n\t};\n\n\tconst [validateWebPage, setValidateWebPage] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Web page url is required.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\n\tconst [validateFaceBook, setValidateFaceBook] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Facebook link is required.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\n\tconst [validateContactEmail, setValidateContactEmail] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Contact email is required.';\n\t\t\t} else {\n\t\t\t\tconst pattern = /[a-z0-9A-Z!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9A-Z!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n\t\t\t\tif (!pattern.test(value)) {\n\t\t\t\t\terror = 'Please enter a valid email';\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\n\tconst [validateDescription, setValidateDescription] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Club Description is required.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\n\tconst [validateSchedule, setValidateSchedule] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Club event schedule is required.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\n\tuseEffect(() => {\n\t\tconst fetchClubProfile = async () => {\n\t\t\ttry {\n\t\t\t\tconst [\n\t\t\t\t\tresponseData,\n\t\t\t\t\tresponseStatus,\n\t\t\t\t\tresponseMessage\n\t\t\t\t] = await sendRequest(\n\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL +\n\t\t\t\t\t\t`/clubs/profile/${clubId}`,\n\t\t\t\t\t'GET',\n\t\t\t\t\tnull,\n\t\t\t\t\t{\n\t\t\t\t\t\t// adding JWT to header for authentication, JWT contains clubId\n\t\t\t\t\t\tAuthorization: 'Bearer ' + clubAuthContext.clubToken\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\t// Need to set the loadedClubProfile so we will set initialValues again.\n\t\t\t\t// Without it, form will keep the old initial values.\n\t\t\t\tsetLoadedClubProfile(responseData.clubProfile);\n\t\t\t} catch (err) {}\n\t\t};\n\t\tfetchClubProfile();\n\t}, [clubId, setLoadedClubProfile]);\n\n\tconst [saveButtonEnabled, setSaveButtonEnabled] = useState(false);\n\tconst submitHandler = async values => {\n\t\ttry {\n\t\t\tconst formData = new FormData();\n\t\t\tformData.append('webPage', values.webPage);\n\t\t\tformData.append('faceBook', values.faceBook);\n\t\t\tformData.append('youTube', values.youTube);\n\t\t\tformData.append('contactEmail', values.contactEmail);\n\t\t\tformData.append('description', values.description);\n\t\t\tformData.append('schedule', values.schedule);\n\t\t\tconst [\n\t\t\t\tresponseData,\n\t\t\t\tresponseStatus,\n\t\t\t\tresponseMessage\n\t\t\t] = await sendRequest(\n\t\t\t\tprocess.env.REACT_APP_BACKEND_URL + `/clubs/profile`,\n\t\t\t\t'PATCH',\n\t\t\t\tformData,\n\t\t\t\t{\n\t\t\t\t\t// adding JWT to header for authentication, JWT contains clubId\n\t\t\t\t\tAuthorization: 'Bearer ' + clubAuthContext.clubToken\n\t\t\t\t}\n\t\t\t);\n\t\t\t// Need to set the loadedClubProfile so we will set initialValues again.\n\t\t\t// Without it, form will keep the old initial values.\n\t\t\tsetLoadedClubProfile(responseData.clubProfile);\n\t\t\tsetOKLeavePage(true);\n\t\t\tsetSaveButtonEnabled(false);\n\t\t} catch (err) {}\n\t};\n\n\tif (isLoading) {\n\t\treturn (\n\t\t\t<div className=\"center\">\n\t\t\t\t<LoadingSpinner />\n\t\t\t</div>\n\t\t);\n\t}\n\tif (loadedClubProfile) {\n\t\tinitialValues = {\n\t\t\twebPage: loadedClubProfile.webPage,\n\t\t\tfaceBook: loadedClubProfile.faceBook,\n\t\t\tyouTube: loadedClubProfile.youTube,\n\t\t\tcontactEmail: loadedClubProfile.contactEmail,\n\t\t\tdescription: loadedClubProfile.description,\n\t\t\tschedule: loadedClubProfile.schedule\n\t\t};\n\t}\n\n\tconst clubForm = () => (\n\t\t<div className=\"event-form\">\n\t\t\t<div className=\"event-form-header\">\n\t\t\t\t<h4>Please enter club information</h4>\n\t\t\t\t<hr className=\"event-form__hr\" />\n\t\t\t</div>\n\t\t\t<Formik\n\t\t\t\tenableReinitialize={true}\n\t\t\t\tinitialValues={initialValues}\n\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\tsubmitHandler(values);\n\t\t\t\t\tif (actions.isSubmitting) {\n\t\t\t\t\t\tactions.setSubmitting(false);\n\t\t\t\t\t}\n\t\t\t\t\tif (!actions.isSubmitting) {\n\t\t\t\t\t\tsetValidateWebPage(() => value => {\n\t\t\t\t\t\t\tconsole.log('ValidateWebPage');\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Web page url is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateFaceBook(() => value => {\n\t\t\t\t\t\t\tconsole.log('ValidateFaceBook');\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Facebook link is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateContactEmail(() => value => {\n\t\t\t\t\t\t\tconsole.log('ValidateContactEmail');\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Email is required.';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconst pattern = /[a-z0-9A-Z!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9A-Z!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n\t\t\t\t\t\t\t\tif (!pattern.test(value)) {\n\t\t\t\t\t\t\t\t\terror = 'Please enter a valid email';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateDescription(() => value => {\n\t\t\t\t\t\t\tconsole.log('ValidateDescription');\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Club description is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateSchedule(() => value => {\n\t\t\t\t\t\t\tconsole.log('ValidateSchedule');\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Club event schedule is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}}>\n\t\t\t\t{({\n\t\t\t\t\terrors,\n\t\t\t\t\thandleBlur,\n\t\t\t\t\thandleChange,\n\t\t\t\t\thandleSubmit,\n\t\t\t\t\tisSubmitting,\n\t\t\t\t\tisValid,\n\t\t\t\t\tsetFieldValue,\n\t\t\t\t\ttouched,\n\t\t\t\t\tvalues\n\t\t\t\t}) => (\n\t\t\t\t\t<Form className=\"event-form-container\">\n\t\t\t\t\t\t<label htmlFor=\"webPage\" className=\"event-form__label\">\n\t\t\t\t\t\t\tWeb Page\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"webPage\"\n\t\t\t\t\t\t\tname=\"webPage\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field\"\n\t\t\t\t\t\t\tvalidate={validateWebPage}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\tsetSaveButtonEnabled(true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.webPage && errors.webPage && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.webPage}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label htmlFor=\"faceBook\" className=\"event-form__label\">\n\t\t\t\t\t\t\tFacebook Page\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"faceBook\"\n\t\t\t\t\t\t\tname=\"faceBook\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field\"\n\t\t\t\t\t\t\tvalidate={validateFaceBook}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\tsetSaveButtonEnabled(true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.faceBook && errors.faceBook && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.faceBook}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label htmlFor=\"youTube\" className=\"event-form__label\">\n\t\t\t\t\t\t\tYouTube Channel (Optional)\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"youTube\"\n\t\t\t\t\t\t\tname=\"youTube\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\tsetSaveButtonEnabled(true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<label htmlFor=\"faceBook\" className=\"event-form__label\">\n\t\t\t\t\t\t\tContact Email Address (Please do not use login email\n\t\t\t\t\t\t\taddress)\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"contactEmail\"\n\t\t\t\t\t\t\tname=\"contactEmail\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field\"\n\t\t\t\t\t\t\tvalidate={validateContactEmail}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\tsetSaveButtonEnabled(true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.contactEmail && errors.contactEmail && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.contactEmail}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"description\"\n\t\t\t\t\t\t\tclassName=\"event-form__label\">\n\t\t\t\t\t\t\tClub Description\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"decription\"\n\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\tas=\"textarea\"\n\t\t\t\t\t\t\trows=\"15\"\n\t\t\t\t\t\t\tcols=\"50\"\n\t\t\t\t\t\t\tplaceholder=\"Please enter club description\"\n\t\t\t\t\t\t\tclassName=\"event-form__field-textarea\"\n\t\t\t\t\t\t\tvalidate={validateDescription}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\tsetSaveButtonEnabled(true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tplaceholder=\"About the club\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.description && errors.description && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.description}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label htmlFor=\"schedule\" className=\"event-form__label\">\n\t\t\t\t\t\t\tEvent Schedule\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"schedule\"\n\t\t\t\t\t\t\tname=\"schedule\"\n\t\t\t\t\t\t\tas=\"textarea\"\n\t\t\t\t\t\t\trows=\"15\"\n\t\t\t\t\t\t\tcols=\"50\"\n\t\t\t\t\t\t\tplaceholder=\"Please enter event schedule\"\n\t\t\t\t\t\t\tclassName=\"event-form__field-textarea\"\n\t\t\t\t\t\t\tvalidate={validateSchedule}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\tsetSaveButtonEnabled(true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tplaceholder=\"TBD\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.schedule && errors.schedule && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.schedule}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\tmargin-left=\"1.5rem\"\n\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\tisSubmitting || !isValid || !saveButtonEnabled\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonClick={e => {\n\t\t\t\t\t\t\t\tsetFieldValue('isSaveButton', false, false);\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\tSAVE\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<NavigationPrompt\n\t\t\t\t\t\t\tafterConfirm={() => {\n\t\t\t\t\t\t\t\tformContext.setIsInsideForm(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t// Confirm navigation if going to a path that does not start with current path:\n\t\t\t\t\t\t\twhen={(crntLocation, nextLocation) => {\n\t\t\t\t\t\t\t\t// remove ClubRedirectURL from memory\n\t\t\t\t\t\t\t\tclubAuthContext.setClubRedirectURL(null);\n\t\t\t\t\t\t\t\t// OKLeavePage meaning form was not touched yet\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tOKLeavePage ||\n\t\t\t\t\t\t\t\t\t(nextLocation &&\n\t\t\t\t\t\t\t\t\t\tnextLocation.pathname === '/clubs/auth')\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tformContext.setIsInsideForm(false);\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t!nextLocation ||\n\t\t\t\t\t\t\t\t\t\t!nextLocation.pathname.startsWith(\n\t\t\t\t\t\t\t\t\t\t\tcrntLocation.pathname\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t{({ isActive, onCancel, onConfirm }) => {\n\t\t\t\t\t\t\t\tif (isActive) {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<PromptModal\n\t\t\t\t\t\t\t\t\t\t\tonCancel={onCancel}\n\t\t\t\t\t\t\t\t\t\t\tonConfirm={onConfirm}\n\t\t\t\t\t\t\t\t\t\t\tcontentClass=\"event-item__modal-content\"\n\t\t\t\t\t\t\t\t\t\t\tfooterClass=\"event-item__modal-actions\"\n\t\t\t\t\t\t\t\t\t\t\terror=\"You sure want to leave? Unsaved data will be lost.\"></PromptModal>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\tThis is probably an anti-pattern but ya know...\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t</NavigationPrompt>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t{!isLoading && clubForm()}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default ClubProfile;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubs/pages/ClubEvents.js",["772","773","774","775"],"import React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport EventsList from '../../events/components/EventsList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { ClubAuthContext } from '../../shared/context/auth-context';\n\n// Events is called in App.js where the route been defined\nconst ClubEvents = props => {\n\t// readoOnly false is for Club EditEvents; true is for Club EventManager View Events and users and non-owner club\n\tlet readOnly = props.readOnly ? props.readOnly : false;\n\t// entryReportManager is true is for entry Report Manager\n\tlet entryReportManager = props.entryReportManager\n\t\t? props.entryReportManager\n\t\t: false;\n\n\t// paymentCenter is true is for payment center\n\tlet paymentCenter = props.paymentCenter\n\t\t? props.paymentCenter\n\t\t: false;\n\n\t// refundCenter is true is for payment center\n\tlet refundCenter = props.refundCenter ? props.refundCenter : false;\n\n\tconst [loadedEvents, setLoadedEvents] = useState();\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\n\t// let cid = useParams().clubId;\n\t// let clubId = props.clubId ? props.clubId : cid;\n\tlet clubId = props.clubId;\n\n\tconst clubAuthContext = useContext(ClubAuthContext);\n\tlet ownerClubEvent = false;\n\tif (clubAuthContext && clubAuthContext.clubId === clubId) {\n\t\townerClubEvent = true;\n\t}\n\n\tuseEffect(() => {\n\t\tconst fetechEvents = async () => {\n\t\t\ttry {\n\t\t\t\tlet responseData;\n\t\t\t\tlet responseStatus;\n\t\t\t\tlet responseMessage;\n\n\t\t\t\t// For ownerClubEvent, use different route that will get all events owned by the club\n\t\t\t\t// ownerClubEvent gets all events, published/unpublished\n\t\t\t\t// non-owner gets only published events\n\t\t\t\tif (ownerClubEvent) {\n\t\t\t\t\t// for registration reports, we will only query published events\n\t\t\t\t\tif (entryReportManager || paymentCenter || refundCenter) {\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tresponseData,\n\t\t\t\t\t\t\tresponseStatus,\n\t\t\t\t\t\t\tresponseMessage\n\t\t\t\t\t\t] = await sendRequest(\n\t\t\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL +\n\t\t\t\t\t\t\t\t`/events/ownerClubPublished/${clubId}`,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tAuthorization: 'Bearer ' + clubAuthContext.clubToken\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tresponseData,\n\t\t\t\t\t\t\tresponseStatus,\n\t\t\t\t\t\t\tresponseMessage\n\t\t\t\t\t\t] = await sendRequest(\n\t\t\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL +\n\t\t\t\t\t\t\t\t`/events/ownerClub/${clubId}`,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tAuthorization: 'Bearer ' + clubAuthContext.clubToken\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// This route only gets published events\n\t\t\t\t\t[\n\t\t\t\t\t\tresponseData,\n\t\t\t\t\t\tresponseStatus,\n\t\t\t\t\t\tresponseMessage\n\t\t\t\t\t] = await sendRequest(\n\t\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL +\n\t\t\t\t\t\t\t`/events/club/${clubId}`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tsetLoadedEvents(responseData.events);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log('err = ', err);\n\t\t\t}\n\t\t};\n\t\tfetechEvents();\n\t}, [sendRequest, clubId, entryReportManager, paymentCenter]);\n\n\t// calling EventsList from EventsList.js where it passes EVENTS to child EventsList\n\t// just treat the following call as EventsList(items = EVENTS); items is the props\n\t// name defined in EventsList\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t{isLoading && (\n\t\t\t\t<div className=\"center\">\n\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{!isLoading && loadedEvents && (\n\t\t\t\t// displayPublished: print PUBLISHED on images\n\t\t\t\t// readOnly true- for Club ViewEvent; false- for all others\n\t\t\t\t// registration: true- Club Registration Manager\n\t\t\t\t<EventsList\n\t\t\t\t\titems={loadedEvents}\n\t\t\t\t\tdisplayPublished={true}\n\t\t\t\t\treadOnly={readOnly}\n\t\t\t\t\tentryReportManager={entryReportManager}\n\t\t\t\t\tpaymentCenter={paymentCenter}\n\t\t\t\t\trefundCenter={refundCenter}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default ClubEvents;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/pages/UpdateEvent.js",["776","777","778","779","780","781","782"],"import React, { useContext, useEffect, useState } from 'react';\nimport { Field, Form, Formik } from 'formik';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport moment from 'moment';\nimport NavigationPrompt from 'react-router-navigation-prompt';\nimport * as Yup from 'yup';\n\nimport { useClubLoginValidation } from '../../shared/hooks/clubLoginValidation-hook';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport { ClubAuthContext } from '../../shared/context/auth-context';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport Modal from '../../shared/components/UIElements/Modal';\nimport PromptModal from '../../shared/components/UIElements/PromptModal';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport '../../shared/css/EventForm.css';\nimport '../../event/components/EventItem.css';\nimport { eventTypes } from '../../event/components/EventTypes';\n\nconst UpdateEvent = props => {\n\tconst [loadedEvent, setLoadedEvent] = useState(props.event);\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\n\tconst clubAuthContext = useContext(ClubAuthContext);\n\n\tlet eventId = props.event.id;\n\t// authentication check\n\tuseClubLoginValidation(`/events/form/${eventId}`);\n\n\t// If we are re-directing to this page, we want to clear up clubRedirectURL\n\tlet location = useLocation();\n\tlet path;\n\tReact.useEffect(() => {\n\t\tpath = location.pathname;\n\t\tlet clubRedirectURL = clubAuthContext.clubRedirectURL;\n\t\tif (path === clubRedirectURL) {\n\t\t\t// re-init redirectURL after re-direction route\n\t\t\tclubAuthContext.setClubRedirectURL(null);\n\t\t}\n\t}, [location]);\n\n\tlet tomorrow = moment().add(1, 'days').format('YYYY-MM-DD');\n\tconst history = useHistory();\n\n\t// Modal section\n\tconst [showModal, setShowModal] = useState(false);\n\tconst openModalHandler = () => setShowModal(true);\n\tconst closeModalHandler = () => {\n\t\tcloseMapContainer();\n\t\tsetShowModal(false);\n\t};\n\n\tconst [showCourse, setShowCourse] = useState(false);\n\tconst openCourseHandler = () => {\n\t\topenModalHandler();\n\t\tsetShowCourse(true);\n\t};\n\tconst closeCourseHandler = () => setShowCourse(false);\n\n\tconst [showImage, setShowImage] = useState(false);\n\tconst openImageHandler = () => {\n\t\topenModalHandler();\n\t\tsetShowImage(true);\n\t};\n\tconst closeImageHandler = () => setShowImage(false);\n\n\tconst closeMapContainer = () => {\n\t\tshowCourse && closeCourseHandler();\n\t\tshowImage && closeImageHandler();\n\t};\n\n\tif (!eventId || eventId === 'error') {\n\t\t// possibly page refresh, look for localStorage\n\t\tconst storageData = JSON.parse(localStorage.getItem('eventID'));\n\t\tif (storageData && storageData.eventId) {\n\t\t\teventId = storageData.eventId;\n\t\t}\n\t} else {\n\t\t// set eventId to localStorage for potential page refresh\n\t\t// we will remove it when the form gets submitted\n\t\t// @todo remove data when user leaves this page\n\t\tlocalStorage.setItem(\n\t\t\t'eventID',\n\t\t\tJSON.stringify({\n\t\t\t\teventId: eventId\n\t\t\t})\n\t\t);\n\t}\n\n\tconst [OKLeavePage, setOKLeavePage] = useState(true);\n\tlet initialValues = {\n\t\tname: '',\n\t\ttype: 'Autocross',\n\t\timage: '',\n\t\tstartDate: { tomorrow },\n\t\tendDate: { tomorrow },\n\t\tregStartDate: { tomorrow },\n\t\tregEndDate: { tomorrow },\n\t\tvenue: '',\n\t\taddress: '',\n\t\tdescription: '',\n\t\tinstruction: '',\n\t\tcourseMap: ''\n\t\t// isSaveButton: false\n\t};\n\n\tconst dateValidationSchema = Yup.object().shape({\n\t\tstartDate: Yup.date()\n\t\t\t.min(tomorrow, 'Start date must be no later than end date')\n\t\t\t.max(\n\t\t\t\tYup.ref('endDate'),\n\t\t\t\t'Start date must be no later than end date'\n\t\t\t)\n\t\t\t.required(),\n\t\tendDate: Yup.date()\n\t\t\t.min(\n\t\t\t\tYup.ref('startDate'),\n\t\t\t\t'End date cannot be earlier than start date'\n\t\t\t)\n\t\t\t.max('2021-12-31')\n\t\t\t.required(),\n\t\tregStartDate: Yup.date()\n\t\t\t// .min(\n\t\t\t// \ttomorrow,\n\t\t\t// \t'Registration start date cannot be earlier than tomorrow'\n\t\t\t// )\n\t\t\t.max(\n\t\t\t\tYup.ref('startDate'),\n\t\t\t\t'Registration start date must be earlier than event start date'\n\t\t\t)\n\t\t\t.required(),\n\t\tregEndDate: Yup.date()\n\t\t\t.min(\n\t\t\t\tYup.ref('regStartDate'),\n\t\t\t\t'Registration end date cannot be earlier than registration start date'\n\t\t\t)\n\t\t\t.max(\n\t\t\t\tYup.ref('startDate'),\n\t\t\t\t'Registration end date cannot be later than event start date'\n\t\t\t)\n\t\t\t.required()\n\t});\n\n\tconst [validateName, setValidateName] = useState(() => value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Event Name is required.';\n\t\t}\n\t\treturn error;\n\t});\n\n\tconst [validateVenue, setValidateVenue] = useState(() => value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Event Venue is required.';\n\t\t}\n\t\treturn error;\n\t});\n\n\tconst [validateAddress, setValidateAddress] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Event Address is required.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\n\tconst [validateDescription, setValidateDescription] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Event Description is required.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\n\tconst [validateInstruction, setValidateInstruction] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Event Instruction is required.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\n\tconst [saveButtonEnabled, setSaveButtonEnabled] = useState(false);\n\tconst submitHandler = async values => {\n\t\ttry {\n\t\t\tconst formData = new FormData();\n\t\t\tformData.append('name', values.name);\n\t\t\tformData.append('type', values.type);\n\t\t\tformData.append('startDate', values.startDate); //format 2020-08-01\n\t\t\tformData.append('endDate', values.endDate);\n\t\t\tformData.append('regStartDate', values.regStartDate);\n\t\t\tformData.append('regEndDate', values.regEndDate);\n\t\t\tformData.append('venue', values.venue);\n\t\t\tformData.append('address', values.address);\n\t\t\tformData.append('description', values.description);\n\t\t\tformData.append('instruction', values.instruction);\n\t\t\t// formData.append('image', values.image);\n\t\t\t// formData.append('courseMap', values.courseMap);\n\n\t\t\tconst [\n\t\t\t\tresponseData,\n\t\t\t\tresponseStatus,\n\t\t\t\tresponseMessage\n\t\t\t] = await sendRequest(\n\t\t\t\tprocess.env.REACT_APP_BACKEND_URL + `/events/${eventId}`,\n\t\t\t\t'PATCH',\n\t\t\t\tformData,\n\t\t\t\t{\n\t\t\t\t\t// adding JWT to header for authentication, JWT contains clubId\n\t\t\t\t\tAuthorization: 'Bearer ' + clubAuthContext.clubToken\n\t\t\t\t}\n\t\t\t);\n\t\t\t// Need to set the loadedEvent so we will set initialValues again.\n\t\t\t// Without it, form will keep the old initial values.\n\t\t\tsetLoadedEvent(responseData.event);\n\t\t\tsetOKLeavePage(true);\n\t\t\tsetSaveButtonEnabled(false);\n\t\t\tconsole.log('return new event');\n\t\t\tprops.returnNewEvent(responseData.event);\n\t\t} catch (err) {}\n\t};\n\n\tif (isLoading) {\n\t\treturn (\n\t\t\t<div className=\"center\">\n\t\t\t\t<LoadingSpinner />\n\t\t\t</div>\n\t\t);\n\t}\n\tif (!loadedEvent && !error) {\n\t\treturn (\n\t\t\t<div className=\"center\">\n\t\t\t\t<Card>\n\t\t\t\t\t<h2>Event not found!</h2>\n\t\t\t\t</Card>\n\t\t\t</div>\n\t\t);\n\t} else if (loadedEvent) {\n\t\tinitialValues = {\n\t\t\tname: loadedEvent.name,\n\t\t\ttype: loadedEvent.type,\n\t\t\tstartDate: moment(loadedEvent.startDate).format('YYYY-MM-DD'),\n\t\t\tendDate: moment(loadedEvent.endDate).format('YYYY-MM-DD'),\n\t\t\tregStartDate: moment(loadedEvent.regStartDate).format(\n\t\t\t\t'YYYY-MM-DD'\n\t\t\t),\n\t\t\tregEndDate: moment(loadedEvent.regEndDate).format('YYYY-MM-DD'),\n\t\t\tvenue: loadedEvent.venue,\n\t\t\taddress: loadedEvent.address,\n\t\t\tdescription: loadedEvent.description,\n\t\t\tinstruction: loadedEvent.instruction\n\t\t};\n\t}\n\n\tconst backHandler = () => {\n\t\thistory.push(`/events/${eventId}`);\n\t};\n\n\tconst eventForm = () => (\n\t\t<div className=\"event-form\">\n\t\t\t<div className=\"event-form-header\">\n\t\t\t\t<h4>Please enter event information</h4>\n\t\t\t\t<hr className=\"event-form__hr\" />\n\t\t\t</div>\n\t\t\t<Formik\n\t\t\t\tenableReinitialize={true}\n\t\t\t\tinitialValues={initialValues}\n\t\t\t\tvalidationSchema={dateValidationSchema}\n\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\tsubmitHandler(values);\n\t\t\t\t\tif (actions.isSubmitting) {\n\t\t\t\t\t\tactions.setSubmitting(false);\n\t\t\t\t\t}\n\t\t\t\t\tif (!actions.isSubmitting) {\n\t\t\t\t\t\tsetValidateName(() => value => {\n\t\t\t\t\t\t\tconsole.log('ValidateName');\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Event Name is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateVenue(() => value => {\n\t\t\t\t\t\t\tconsole.log('ValidateVenue');\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Event Venue is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateAddress(() => value => {\n\t\t\t\t\t\t\tconsole.log('ValidateAddress');\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Event Address is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateDescription(() => value => {\n\t\t\t\t\t\t\tconsole.log('ValidateDescription');\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Event description is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateInstruction(() => value => {\n\t\t\t\t\t\t\tconsole.log('ValidateInstruction');\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Event instruction is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}}>\n\t\t\t\t{({\n\t\t\t\t\terrors,\n\t\t\t\t\thandleBlur,\n\t\t\t\t\thandleChange,\n\t\t\t\t\thandleSubmit,\n\t\t\t\t\tisSubmitting,\n\t\t\t\t\tisValid,\n\t\t\t\t\tsetFieldValue,\n\t\t\t\t\ttouched,\n\t\t\t\t\tvalues\n\t\t\t\t}) => (\n\t\t\t\t\t<Form className=\"event-form-container\">\n\t\t\t\t\t\t<label htmlFor=\"name\" className=\"event-form__label\">\n\t\t\t\t\t\t\tEvent Name\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field\"\n\t\t\t\t\t\t\tvalidate={validateName}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tvalue={values.name}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.name will not work\n\t\t\t\t\t\t\t\t// To take advantage of touched, we can pass formik.handleBlur to each input's onBlur prop.\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\tsetSaveButtonEnabled(true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.name && errors.name && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.name}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label htmlFor=\"eventType\" className=\"event-form__label\">\n\t\t\t\t\t\t\tEvent Type\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"type\"\n\t\t\t\t\t\t\tname=\"type\"\n\t\t\t\t\t\t\tas=\"select\"\n\t\t\t\t\t\t\tclassName=\"event-form__eventtype\"\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tvalue={values.type}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\tsetSaveButtonEnabled(true);\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<option value=\"Event Type\" disabled>\n\t\t\t\t\t\t\t\tEvent Type\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t{eventTypes.map(option => {\n\t\t\t\t\t\t\t\tlet res = option.split(':');\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<option name={res[0]} key={res[0]}>\n\t\t\t\t\t\t\t\t\t\t{res[1]}\n\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"startDate\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_startdate\">\n\t\t\t\t\t\t\tStart Date\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"endDate\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_enddate\">\n\t\t\t\t\t\t\tEnd Date\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"startDate\"\n\t\t\t\t\t\t\tname=\"startDate\"\n\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\tmin={tomorrow}\n\t\t\t\t\t\t\tmax=\"2030-12-31\"\n\t\t\t\t\t\t\tclassName=\"event-form__startdate\"\n\t\t\t\t\t\t\tvalue={values.startDate}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\tsetSaveButtonEnabled(true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"endDate\"\n\t\t\t\t\t\t\tname=\"endDate\"\n\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\tmin={tomorrow}\n\t\t\t\t\t\t\tmax=\"2030-12-31\"\n\t\t\t\t\t\t\tclassName=\"event-form__enddate\"\n\t\t\t\t\t\t\tvalue={values.endDate}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\tsetSaveButtonEnabled(true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{(touched.startDate || touched.endDate) &&\n\t\t\t\t\t\t\t(errors.sartDate || errors.endDate) && (\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<div className=\"event-form__field-error-startDate\">\n\t\t\t\t\t\t\t\t\t\t{errors.startDate}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"event-form__field-error-endDate\">\n\t\t\t\t\t\t\t\t\t\t{errors.endDate}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"regStartDate\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_startdate\">\n\t\t\t\t\t\t\tRegistration Start Date\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"regEndDate\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_enddate\">\n\t\t\t\t\t\t\tRegistration End Date\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"regStartDate\"\n\t\t\t\t\t\t\tname=\"regStartDate\"\n\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\t// min={tomorrow}\n\t\t\t\t\t\t\tmax=\"2030-12-31\"\n\t\t\t\t\t\t\tclassName=\"event-form__startdate\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\tsetSaveButtonEnabled(true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"regEndDate\"\n\t\t\t\t\t\t\tname=\"regEndDate\"\n\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\tmin={tomorrow}\n\t\t\t\t\t\t\tmax=\"2030-12-31\"\n\t\t\t\t\t\t\tclassName=\"event-form__enddate\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\tsetSaveButtonEnabled(true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{(touched.regStartDate || touched.regEndDate) &&\n\t\t\t\t\t\t\t(errors.regStartDate || errors.regEndDate) && (\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<div className=\"event-form__field-error-startDate\">\n\t\t\t\t\t\t\t\t\t\t{errors.regStartDate}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"event-form__field-error-endDate\">\n\t\t\t\t\t\t\t\t\t\t{errors.regEndDate}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label htmlFor=\"venue\" className=\"event-form__label\">\n\t\t\t\t\t\t\tVenue\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"venue\"\n\t\t\t\t\t\t\tname=\"venue\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field\"\n\t\t\t\t\t\t\tvalidate={validateVenue}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\tsetSaveButtonEnabled(true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.venue && errors.venue && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.venue}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label htmlFor=\"address\" className=\"event-form__label\">\n\t\t\t\t\t\t\tVenue Address\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"address\"\n\t\t\t\t\t\t\tname=\"address\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tplaceholder=\"Crows Landing, CA\"\n\t\t\t\t\t\t\tclassName=\"event-form__field\"\n\t\t\t\t\t\t\tvalidate={validateAddress}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\tsetSaveButtonEnabled(true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.address && errors.address && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.address}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"description\"\n\t\t\t\t\t\t\tclassName=\"event-form__label\">\n\t\t\t\t\t\t\tEvent Description\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"decription\"\n\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\tas=\"textarea\"\n\t\t\t\t\t\t\trows=\"15\"\n\t\t\t\t\t\t\tcols=\"50\"\n\t\t\t\t\t\t\tplaceholder=\"Please enter event description\"\n\t\t\t\t\t\t\tclassName=\"event-form__field-textarea\"\n\t\t\t\t\t\t\tvalidate={validateDescription}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\tsetSaveButtonEnabled(true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.description && errors.description && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.description}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"instruction\"\n\t\t\t\t\t\t\tclassName=\"event-form__label\">\n\t\t\t\t\t\t\tEvent Instruction\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"instruction\"\n\t\t\t\t\t\t\tname=\"instruction\"\n\t\t\t\t\t\t\tas=\"textarea\"\n\t\t\t\t\t\t\trows=\"15\"\n\t\t\t\t\t\t\tcols=\"50\"\n\t\t\t\t\t\t\tplaceholder=\"Please enter event instruction\"\n\t\t\t\t\t\t\tclassName=\"event-form__field-textarea\"\n\t\t\t\t\t\t\tvalidate={validateInstruction}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\tsetSaveButtonEnabled(true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.instruction && errors.instruction && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.instruction}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\tmargin-left=\"1.5rem\"\n\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\tisSubmitting || !isValid || !saveButtonEnabled\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonClick={e => {\n\t\t\t\t\t\t\t\tsetFieldValue('isSaveButton', false, false);\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\tSAVE\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<NavigationPrompt\n\t\t\t\t\t\t\tafterConfirm={() => {\n\t\t\t\t\t\t\t\tlocalStorage.removeItem('eventID');\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t// Confirm navigation if going to a path that does not start with current path:\n\t\t\t\t\t\t\twhen={(crntLocation, nextLocation) => {\n\t\t\t\t\t\t\t\t// remove ClubRedirectURL from memory\n\t\t\t\t\t\t\t\tclubAuthContext.setClubRedirectURL(null);\n\t\t\t\t\t\t\t\t// OKLeavePage meaning form was not touched yet\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tOKLeavePage ||\n\t\t\t\t\t\t\t\t\tnextLocation.pathname === '/clubs/auth'\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tlocalStorage.removeItem('eventID');\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t!nextLocation ||\n\t\t\t\t\t\t\t\t\t\t!nextLocation.pathname.startsWith(\n\t\t\t\t\t\t\t\t\t\t\tcrntLocation.pathname\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t{({ isActive, onCancel, onConfirm }) => {\n\t\t\t\t\t\t\t\tif (isActive) {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<PromptModal\n\t\t\t\t\t\t\t\t\t\t\tonCancel={onCancel}\n\t\t\t\t\t\t\t\t\t\t\tonConfirm={onConfirm}\n\t\t\t\t\t\t\t\t\t\t\tcontentClass=\"event-item__modal-content\"\n\t\t\t\t\t\t\t\t\t\t\tfooterClass=\"event-item__modal-actions\"\n\t\t\t\t\t\t\t\t\t\t\terror=\"You sure want to leave? Unsaved data will be lost.\">\n\t\t\t\t\t\t\t\t\t\t\t{/* render props.children */}\n\t\t\t\t\t\t\t\t\t\t</PromptModal>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\tThis is probably an anti-pattern but ya know...\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t</NavigationPrompt>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t{!isLoading && loadedEvent && (\n\t\t\t\t<Modal\n\t\t\t\t\tshow={showModal}\n\t\t\t\t\tonCancel={() => closeModalHandler()}\n\t\t\t\t\theader={\n\t\t\t\t\t\tshowCourse\n\t\t\t\t\t\t\t? loadedEvent.name + ' course map'\n\t\t\t\t\t\t\t: loadedEvent.name\n\t\t\t\t\t}\n\t\t\t\t\tcontentClass=\"event-item__modal__content\"\n\t\t\t\t\tfooterClass=\"event-item__modal-actions\"\n\t\t\t\t\theaderClass=\"event-item__modal__header\"\n\t\t\t\t\tfooter={\n\t\t\t\t\t\t<Button onClick={() => closeModalHandler()}>CLOSE</Button>\n\t\t\t\t\t}>\n\t\t\t\t\t{/* render props.children */}\n\t\t\t\t\t{showCourse && (\n\t\t\t\t\t\t<div className=\"map-container\">\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc={\n\t\t\t\t\t\t\t\t\tprocess.env.REACT_APP_ASSET_URL +\n\t\t\t\t\t\t\t\t\t`/${loadedEvent.courseMap}`\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\talt={loadedEvent.alt}\n\t\t\t\t\t\t\t\tclassName=\"map-container\"></img>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{showImage && (\n\t\t\t\t\t\t<div className=\"map-container\">\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc={\n\t\t\t\t\t\t\t\t\tprocess.env.REACT_APP_ASSET_URL +\n\t\t\t\t\t\t\t\t\t`/${loadedEvent.image}`\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\talt={loadedEvent.alt}\n\t\t\t\t\t\t\t\tclassName=\"map-container\"></img>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</Modal>\n\t\t\t)}\n\n\t\t\t{!isLoading && loadedEvent && eventForm()}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default UpdateEvent;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/EventReportSelector.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/UIElements/Image.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/Navigation/MainHeader.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/Navigation/SideDrawer.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/FormElements/Button.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/UIElements/Modal.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/users/components/UserCarsList.js",["783","784"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/form-elements.jsx",["785","786","787"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/EditEventManager.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/events/pages/Events.js",["788","789"],"import React, { useEffect, useState } from 'react';\nimport {\n\tErrorMessage,\n\tField,\n\tForm,\n\tFormik,\n\tuseFormikContext\n} from 'formik';\nimport moment from 'moment';\nimport * as Yup from 'yup';\n\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport EventsList from '../components/EventsList';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { eventTypes } from '../../event/components/EventTypes';\n\nimport '../../shared/css/Events.css';\n\n// Events is called in App.js where the route been defined\n// @to-do\nconst Events = () => {\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\n\tconst [curValues, setCurValues] = useState();\n\tconst [loadedEvents, setLoadedEvents] = useState();\n\n\tconst AutoSubmitToken = () => {\n\t\tconst { values, submitForm } = useFormikContext();\n\t\tuseEffect(() => {\n\t\t\t// Submit the form imperatively as an effect as soon as form values.token are 5 digits long\n\t\t\tif (values.zip.length === 5 && values !== curValues) {\n\t\t\t\tsubmitForm();\n\t\t\t\tsetCurValues(values);\n\t\t\t}\n\t\t}, [values, submitForm]);\n\t\treturn null;\n\t};\n\n\tlet today = moment().format('YYYY-MM-DD');\n\tlet halfMonth = moment().add(15, 'days').format('YYYY-MM-DD');\n\tlet eventType = 'Autocross',\n\t\tstartDate = today,\n\t\tendDate = halfMonth,\n\t\tdistance = 50,\n\t\tzip = '';\n\n\tconst storageData = JSON.parse(localStorage.getItem('searchData'));\n\tif (storageData && moment(storageData.expiration) > moment()) {\n\t\teventType = storageData.eventType;\n\t\tstartDate = storageData.startDate;\n\t\tendDate = storageData.endDate;\n\t\tdistance = storageData.distance;\n\t\tzip = storageData.zip;\n\t}\n\n\tconst initialValues = {\n\t\teventType: eventType,\n\t\tstartDate: startDate,\n\t\tendDate: endDate,\n\t\tdistance: distance,\n\t\tzip: zip\n\t};\n\n\tconst mainSearch = values => (\n\t\t<div>\n\t\t\t<div className=\"search-page-header\">\n\t\t\t\t<h4>\n\t\t\t\t\t<span>Find driving events near you</span>\n\t\t\t\t</h4>\n\t\t\t</div>\n\t\t\t<Formik\n\t\t\t\tinitialValues={initialValues}\n\t\t\t\tvalidationSchema={Yup.object({\n\t\t\t\t\tzip: Yup.string().matches(\n\t\t\t\t\t\t/^[0-9]{5}$/,\n\t\t\t\t\t\t'Must be exactly 5 digits'\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t\tonSubmit={values => {\n\t\t\t\t\tconst fetchEvents = async () => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t// the request needs to match backend clubsRoutes /signup route\n\t\t\t\t\t\t\t// With fromData, headers cannot be {Content-Type: application/json}\n\t\t\t\t\t\t\tconst [\n\t\t\t\t\t\t\t\tresponseData,\n\t\t\t\t\t\t\t\tresponseStatus,\n\t\t\t\t\t\t\t\tresponseMessage\n\t\t\t\t\t\t\t] = await sendRequest(\n\t\t\t\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL + '/events/date',\n\t\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t\tJSON.stringify({\n\t\t\t\t\t\t\t\t\teventType: values.eventType,\n\t\t\t\t\t\t\t\t\tstartDate: moment(values.startDate),\n\t\t\t\t\t\t\t\t\tendDate: moment(values.endDate),\n\t\t\t\t\t\t\t\t\tdistance: values.distance,\n\t\t\t\t\t\t\t\t\tzip: values.zip\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t{ 'Content-type': 'application/json' }\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tsetLoadedEvents(responseData.events);\n\n\t\t\t\t\t\t\t// set the search criteria to localStorage so the next time\n\t\t\t\t\t\t\t// user open the page, we will perform the same search\n\t\t\t\t\t\t\tconst tokenExp = moment(\n\t\t\t\t\t\t\t\tmoment().add(7, 'days'),\n\t\t\t\t\t\t\t\tmoment.ISO_8601\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t// Save data in localStorage for page refreshing\n\t\t\t\t\t\t\t// localStorage is a global js API for browser localStorage.\n\t\t\t\t\t\t\t// 'searchData' is the key\n\t\t\t\t\t\t\tlocalStorage.setItem(\n\t\t\t\t\t\t\t\t'searchData',\n\t\t\t\t\t\t\t\tJSON.stringify({\n\t\t\t\t\t\t\t\t\teventType: values.eventType,\n\t\t\t\t\t\t\t\t\tstartDate: values.startDate,\n\t\t\t\t\t\t\t\t\tendDate: values.endDate,\n\t\t\t\t\t\t\t\t\tdistance: values.distance,\n\t\t\t\t\t\t\t\t\tzip: values.zip,\n\t\t\t\t\t\t\t\t\texpiration: tokenExp\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} catch (err) {}\n\t\t\t\t\t};\n\t\t\t\t\tfetchEvents();\n\t\t\t\t}}>\n\t\t\t\t{({ values, error, touched, isSubmitting }) => (\n\t\t\t\t\t<Form className=\"inline\">\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tname=\"eventType\"\n\t\t\t\t\t\t\tas=\"select\"\n\t\t\t\t\t\t\tclassName=\"inline__input eventType\" /* inherit from inline__input, in css \"inline__input.eventType\"*/\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<option value=\"Event Type\" disabled>\n\t\t\t\t\t\t\t\tEvent Type\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t{eventTypes.map(option => {\n\t\t\t\t\t\t\t\tlet res = option.split(':');\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<option name={res[0]} key={res[0]}>\n\t\t\t\t\t\t\t\t\t\t{res[1]}\n\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\tname=\"startDate\"\n\t\t\t\t\t\t\t// placeholder={today}\n\t\t\t\t\t\t\tmin=\"2020-07-01\"\n\t\t\t\t\t\t\tmax=\"2020-12-31\"\n\t\t\t\t\t\t\tclassName=\"inline__input date\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\tname=\"endDate\"\n\t\t\t\t\t\t\t// placeholder={today}\n\t\t\t\t\t\t\tmin=\"2020-07-01\"\n\t\t\t\t\t\t\tmax=\"2021-12-31\"\n\t\t\t\t\t\t\tclassName=\"inline__input date\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tas=\"select\"\n\t\t\t\t\t\t\tname=\"distance\"\n\t\t\t\t\t\t\tclassName=\"inline__input distance\">\n\t\t\t\t\t\t\t<option value=\"50\">50 miles</option>\n\t\t\t\t\t\t\t<option value=\"100\">100 miles</option>\n\t\t\t\t\t\t\t<option value=\"250\">250 miles</option>\n\t\t\t\t\t\t\t<option value=\"500\">500 miles</option>\n\t\t\t\t\t\t\t<option value=\"3500\">Anywhere</option>\n\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"zip\"\n\t\t\t\t\t\t\tplaceholder=\"5 digit zip\"\n\t\t\t\t\t\t\tclassName=\"inline__input zip\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ErrorMessage name=\"zip\">\n\t\t\t\t\t\t\t{msg => <div className=\"inline__error_zip\">{msg}</div>}\n\t\t\t\t\t\t</ErrorMessage>\n\t\t\t\t\t\t<AutoSubmitToken />\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t</div>\n\t);\n\n\t// calling EventsList from EventsList.js where it passes EVENTS to child EventsList\n\t// just treat the following call as EventsList(items = EVENTS); items is the props\n\t// name defined in EventsList\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t{mainSearch()}\n\t\t\t{isLoading && (\n\t\t\t\t<div className=\"center\">\n\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{!isLoading && !loadedEvents && (\n\t\t\t\t<div>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t&nbsp; &nbsp; &nbsp;No event found in the specified date\n\t\t\t\t\t\trange.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{!isLoading && loadedEvents && (\n\t\t\t\t<EventsList items={loadedEvents} displayPublished={false} />\n\t\t\t)}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default Events;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/components/EventTypes.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/components/UpdateFormBuilder.js",["790","791"],"import React, { useContext, useState, useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport NavigationPrompt from 'react-router-navigation-prompt';\nimport PromptModal from '../../shared/components/UIElements/PromptModal';\n\nimport { ClubAuthContext } from '../../shared/context/auth-context';\nimport { FormContext } from '../../shared/context/form-context';\nimport { ReactFormBuilder } from '../../formbuilder/src/index';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { useClubLoginValidation } from '../../shared/hooks/clubLoginValidation-hook';\nimport { EntryFormOptions } from './EntryFormOptions';\n\nimport './FormBuilder.css';\nimport '../../formbuilder/scss/application.scss';\n\nconst FormBuilder = props => {\n\tlet eventId = props.event.id;\n\n\tif (!eventId || eventId === 'error') {\n\t\t// possibly page refresh, look for localStorage\n\t\tconst storageData = JSON.parse(localStorage.getItem('eventData'));\n\t\tif (storageData && storageData.eventId) {\n\t\t\teventId = storageData.eventId;\n\t\t\t// Correct URL on browser, without it URL is showing '/events/form/error'\n\t\t\t// history.pushState(state object, title, url) 'title' is ignored in most browsers\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/API/History/pushState\n\t\t\twindow.history.pushState(\n\t\t\t\tprops.state,\n\t\t\t\t'',\n\t\t\t\t`/events/form/${eventId}`\n\t\t\t);\n\t\t}\n\t} else {\n\t\t// set eventId to localStorage for potential page refresh\n\t\t// we will remove it when the form gets submitted\n\t\t// @todo remove data when user leaves this page\n\t\tlocalStorage.setItem(\n\t\t\t'eventData',\n\t\t\tJSON.stringify({\n\t\t\t\teventId: eventId\n\t\t\t})\n\t\t);\n\t}\n\n\tconst clubAuthContext = useContext(ClubAuthContext);\n\tconst formContext = useContext(FormContext);\n\tuseEffect(() => {\n\t\tlet mounted = true;\n\t\tif (mounted) {\n\t\t\tformContext.setIsInsideForm(true);\n\t\t}\n\t\treturn () => {\n\t\t\tmounted = false;\n\t\t};\n\t}, [formContext]);\n\n\tuseClubLoginValidation(`/events/formbuilder/${eventId}`);\n\t// If we are re-directing to this page, we want to clear up clubRedirectURL\n\tlet location = useLocation();\n\tReact.useEffect(() => {\n\t\tlet path = location.pathname;\n\t\tlet clubRedirectURL = clubAuthContext.clubRedirectURL;\n\t\tif (path === clubRedirectURL) {\n\t\t\t// re-init redirectURL after re-direction route\n\t\t\tclubAuthContext.setClubRedirectURL(null);\n\t\t}\n\t}, [clubAuthContext, location]);\n\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\tconst history = useHistory();\n\tconst [published, setPublished] = useState(true);\n\tconst [unsavedData, setUnsavedData] = useState();\n\tconst [saveTemplateClicked, setSaveTemplateClicked] = useState(\n\t\tfalse\n\t);\n\n\tconst toggleSaveTemplate = event => {\n\t\tsetSaveTemplateClicked(event.target.checked);\n\t\t// after SAVE to backend, user click checkbox \"Save as entry form template\", enable SAVE button\n\t\t// if checkbox value is true\n\t\tif (event.target.checked && !unsavedData) {\n\t\t\tconst storageData = JSON.parse(\n\t\t\t\tlocalStorage.getItem('eventEntryForm')\n\t\t\t);\n\t\t\t// SAVE button enabled when there is an unsavedData\n\t\t\tif (storageData) {\n\t\t\t\tsetUnsavedData(storageData);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst saveHandler = async () => {\n\t\t// use existing localStorage data instead of querying from backend\n\t\tconst storageData = JSON.parse(\n\t\t\tlocalStorage.getItem('eventEntryForm')\n\t\t);\n\t\tif (storageData) {\n\t\t\tsetUnsavedData(storageData);\n\t\t}\n\n\t\ttry {\n\t\t\tconst [\n\t\t\t\tresponseData,\n\t\t\t\tresponseStatus,\n\t\t\t\tresponseMessage\n\t\t\t] = await sendRequest(\n\t\t\t\tprocess.env.REACT_APP_BACKEND_URL + `/events/form/${eventId}`,\n\t\t\t\t'POST',\n\t\t\t\tJSON.stringify({\n\t\t\t\t\tentryFormData: unsavedData,\n\t\t\t\t\tsaveTemplate: saveTemplateClicked\n\t\t\t\t}),\n\t\t\t\t{\n\t\t\t\t\t'Content-type': 'application/json',\n\t\t\t\t\t// adding JWT to header for authentication, JWT contains clubId\n\t\t\t\t\tAuthorization: 'Bearer ' + clubAuthContext.clubToken\n\t\t\t\t}\n\t\t\t);\n\t\t\tif (responseData) {\n\t\t\t\tsetUnsavedData(undefined);\n\t\t\t\t// return new event back to EditEventManager\n\t\t\t\tprops.returnNewEvent(responseData.event);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.log('err = ', err);\n\t\t}\n\t};\n\n\tconst onLoad = getResponseData => {\n\t\tgetResponseData(props.event.entryFormData);\n\t\tsetPublished(props.event.published);\n\t\tsetUnsavedData(props.event.entryFormData);\n\t\t// save the from data got from backend to localstorage\n\t\tlocalStorage.setItem(\n\t\t\t'eventEntryForm',\n\t\t\tJSON.stringify(props.event.entryFormData)\n\t\t);\n\t};\n\n\tfunction fixFormData(data) {\n\t\treturn !data || data === '[]' || data.length === 0 ? [] : data;\n\t}\n\n\tconst onPost = data => {\n\t\t// we want to save the data to localStorage for the best performance\n\t\tdata = fixFormData(data);\n\n\t\tconst setData = () => {\n\t\t\tconsole.log('data = ', data);\n\t\t\t// save the array to unsavedData and backend\n\t\t\t// format of data: {task_data: Array(6)}\n\t\t\tsetUnsavedData(data.task_data);\n\t\t\t// update the new data to localStorage\n\t\t\tlocalStorage.setItem(\n\t\t\t\t'eventEntryForm',\n\t\t\t\tJSON.stringify(data.task_data)\n\t\t\t);\n\t\t};\n\n\t\treturn setData();\n\t};\n\n\tconst cleanUp = () => {\n\t\tclubAuthContext.setClubRedirectURL(null);\n\t\tsetUnsavedData(undefined);\n\t\tlocalStorage.removeItem('eventData');\n\t\tlocalStorage.removeItem('eventEntryForm');\n\t};\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t{isLoading && (\n\t\t\t\t<div className=\"center\">\n\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<div className=\"formbuilder-header\">\n\t\t\t\t<h4>Entry Form Builder</h4>\n\t\t\t\t<Button\n\t\t\t\t\tdisabled={!unsavedData || published}\n\t\t\t\t\tsize=\"entryform--save\"\n\t\t\t\t\tonClick={saveHandler}>\n\t\t\t\t\tSAVE\n\t\t\t\t</Button>\n\t\t\t\t<label className=\"formbuilder-label\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tid=\"saveTemplate\"\n\t\t\t\t\t\tname=\"saveTemplate\"\n\t\t\t\t\t\tonChange={toggleSaveTemplate}\n\t\t\t\t\t/>\n\t\t\t\t\t&nbsp; Save as entry form template\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<div className=\"formbuilder-container\">\n\t\t\t\t<ReactFormBuilder\n\t\t\t\t\tdisabled={published}\n\t\t\t\t\tonLoad={onLoad}\n\t\t\t\t\tonPost={onPost}\n\t\t\t\t\ttoolbarItems={EntryFormOptions()}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<NavigationPrompt\n\t\t\t\tafterConfirm={() => {\n\t\t\t\t\tcleanUp();\n\t\t\t\t\tformContext.setIsInsideForm(false);\n\t\t\t\t}}\n\t\t\t\t// Confirm navigation if going to a path that does not start with current path:\n\t\t\t\t//when={!!unsavedData}\n\t\t\t\twhen={(crntLocation, nextLocation) =>\n\t\t\t\t\t!nextLocation ||\n\t\t\t\t\t!nextLocation.pathname.startsWith(crntLocation.pathname)\n\t\t\t\t}>\n\t\t\t\t{({ isActive, onCancel, onConfirm }) => {\n\t\t\t\t\tif (isActive) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<PromptModal\n\t\t\t\t\t\t\t\tonCancel={onCancel}\n\t\t\t\t\t\t\t\tonConfirm={onConfirm}\n\t\t\t\t\t\t\t\tcontentClass=\"event-item__modal-content\"\n\t\t\t\t\t\t\t\tfooterClass=\"event-item__modal-actions\"\n\t\t\t\t\t\t\t\terror=\"You sure want to leave? Unsaved data will be lost.\">\n\t\t\t\t\t\t\t\t{/* render props.children */}\n\t\t\t\t\t\t\t</PromptModal>\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn history.push('/error');\n\t\t\t\t}}\n\t\t\t</NavigationPrompt>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default FormBuilder;\n",["792","793"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubs/components/ClubsList.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/entryDashboard/components/CardSetupForm.js",["794","795","796"],"import React, { useState, useContext, useEffect } from 'react';\nimport {\n\tuseStripe,\n\tuseElements,\n\tCardElement\n} from '@stripe/react-stripe-js';\n\nimport Button from '../../shared/components/FormElements/Button';\nimport CardSection from './CardSection';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\n\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { UserAuthContext } from '../../shared/context/auth-context';\n\nimport './CardSectionStyles.css';\n\nconst CardSetupForm = props => {\n\tconst stripe = useStripe();\n\tconst elements = useElements();\n\tconst [stripeLoading, setStripeLoading] = useState(false);\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\tconst userAuthContext = useContext(UserAuthContext);\n\tconst [clientSecret, setClientSecret] = useState();\n\tconst [setupIntentId, setSetupIntentId] = useState();\n\tconst [email, setEmail] = useState();\n\tconst [submitted, setSubmitted] = useState(false);\n\n\tconst onclearCallBack = () => {\n\t\tclearError();\n\t};\n\n\t// ************* Stripe Flow **************************** //\n\t// 1. use SetupIntent to get clien_secret\n\t// 2. Use client_secret to confirmCardSetup that will create paymentMethod with card details\n\n\t// Re-use SetupIntent from before causes \"setup_intent_unexpected_state\" error.\n\t// So, for both editing and non-editing modes, we always want to create a new SetupIntent and\n\t// use it to get a PaymentMethod.\n\tuseEffect(() => {\n\t\tconst getSetupIntent = async () => {\n\t\t\tlet responseData, responseStatus, responseMessage;\n\t\t\ttry {\n\t\t\t\t// request backend to create setupIntent, we need client_secret and intentId\n\t\t\t\t[\n\t\t\t\t\tresponseData,\n\t\t\t\t\tresponseStatus,\n\t\t\t\t\tresponseMessage\n\t\t\t\t] = await sendRequest(\n\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL +\n\t\t\t\t\t\t`/stripe/newSetupIntent/${props.eventId}`,\n\t\t\t\t\t'GET',\n\t\t\t\t\tnull,\n\t\t\t\t\t{\n\t\t\t\t\t\tAuthorization: 'Bearer ' + userAuthContext.userToken\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log('err = ', err);\n\t\t\t}\n\t\t\tsetClientSecret(responseData.setupIntent.client_secret);\n\t\t\tsetSetupIntentId(responseData.setupIntent.id);\n\t\t\tsetEmail(responseData.email);\n\t\t};\n\n\t\tif (userAuthContext.userToken) {\n\t\t\tgetSetupIntent();\n\t\t}\n\t}, [\n\t\tprops.eventId,\n\t\tuserAuthContext.userToken,\n\t\tsetClientSecret,\n\t\tsetSetupIntentId,\n\t\tsendRequest\n\t]);\n\n\tuseEffect(() => {\n\t\tprops.getStripeSetupIntentId(setupIntentId);\n\t}, [props.getStripeSetupIntentId, setupIntentId]);\n\n\tconst handleSubmit = async event => {\n\t\tsetStripeLoading(true);\n\t\t// We don't want to let default form submission happen here,\n\t\t// which would refresh the page.\n\t\tevent.preventDefault();\n\n\t\tif (!stripe || !elements) {\n\t\t\t// Stripe.js has not yet loaded.\n\t\t\t// Make sure to disable form submission until Stripe.js has loaded.\n\t\t\treturn;\n\t\t}\n\n\t\tconst result = await stripe.confirmCardSetup(clientSecret, {\n\t\t\tpayment_method: {\n\t\t\t\tcard: elements.getElement(CardElement),\n\t\t\t\tbilling_details: {\n\t\t\t\t\tname: props.userName,\n\t\t\t\t\temail: email\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (result.error) {\n\t\t\tsetStripeLoading(false);\n\t\t\t// Display result.error.message in your UI.\n\t\t\tprops.getStripeError(result.error);\n\t\t} else {\n\t\t\tsetStripeLoading(false);\n\t\t\t// The setup has succeeded. Display a success message and send\n\t\t\t// result.setupIntent.payment_method to your server to save the\n\t\t\t// card to a Customer\n\t\t\t// result.setupIntent.payment_method returns PaymentMethod ID not the object\n\t\t\tprops.getStripePaymentMethodId(\n\t\t\t\tresult.setupIntent.payment_method\n\t\t\t);\n\t\t\tsetSubmitted(true);\n\t\t}\n\t};\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ErrorModal error={error} onClear={onclearCallBack} />\n\t\t\t{(isLoading || stripeLoading) && (\n\t\t\t\t<div className=\"center\">\n\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t\t{/* <form onSubmit={handleSubmit} className=\"cardform\"> */}\n\t\t\t<div className=\"cardform\">\n\t\t\t\t<CardSection />\n\t\t\t\t<Button\n\t\t\t\t\tsize=\"stripe\"\n\t\t\t\t\tdisabled={\n\t\t\t\t\t\t!stripe ||\n\t\t\t\t\t\t!clientSecret ||\n\t\t\t\t\t\t!setupIntentId ||\n\t\t\t\t\t\tisLoading ||\n\t\t\t\t\t\tstripeLoading ||\n\t\t\t\t\t\tsubmitted\n\t\t\t\t\t}\n\t\t\t\t\tonClick={handleSubmit}>\n\t\t\t\t\tSave Card to Stripe\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default CardSetupForm;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/entryDashboard/components/CardSection.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/ClubProfileViewer.js",["797","798","799"],"import React, { useState, useContext, useEffect } from 'react';\n\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\n\nimport { ClubAuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport './clubProfileViewer.css';\n\nconst ClubProfileViewer = props => {\n\tconst clubAuthContext = useContext(ClubAuthContext);\n\tconst clubId = clubAuthContext.clubId;\n\tconst clubName = clubAuthContext.clubName;\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\n\tconst [loadedProfileImage, setLoadedProfileImage] = useState();\n\tconst [loadedDescription, setLoadedDescription] = useState();\n\tconst [loadedSchedule, setLoadedSchedule] = useState();\n\n\t// this is for logo that comes separately\n\tconst [loadedImage, setLoadedImage] = useState();\n\tuseEffect(() => {\n\t\tconst fetchClubProfile = async () => {\n\t\t\ttry {\n\t\t\t\tconst [\n\t\t\t\t\tresponseData,\n\t\t\t\t\tresponseStatus,\n\t\t\t\t\tresponseMessage\n\t\t\t\t] = await sendRequest(\n\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL +\n\t\t\t\t\t\t`/clubs/profile/${clubId}`,\n\t\t\t\t\t'GET',\n\t\t\t\t\tnull,\n\t\t\t\t\t{\n\t\t\t\t\t\t// adding JWT to header for authentication, JWT contains clubId\n\t\t\t\t\t\tAuthorization: 'Bearer ' + clubAuthContext.clubToken\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tsetLoadedProfileImage(responseData.clubProfile.profileImage);\n\t\t\t\tsetLoadedDescription(responseData.clubProfile.description);\n\t\t\t\tsetLoadedSchedule(responseData.clubProfile.schedule);\n\t\t\t\tsetLoadedImage(responseData.image);\n\t\t\t} catch (err) {}\n\t\t};\n\t\tfetchClubProfile();\n\t}, [\n\t\tclubId,\n\t\tsetLoadedProfileImage,\n\t\tsetLoadedDescription,\n\t\tsetLoadedSchedule,\n\t\tsetLoadedImage\n\t]);\n\n\tconst [showDescription, setShowDescription] = useState(\n\t\t'btn collapsible minus-sign toggle-btn'\n\t);\n\tconst toggleDescriptionButton = () => {\n\t\tif (showDescription === 'btn collapsible minus-sign toggle-btn') {\n\t\t\tsetShowDescription('btn collapsible plus-sign toggle-btn');\n\t\t} else {\n\t\t\tsetShowDescription('btn collapsible minus-sign toggle-btn');\n\t\t}\n\t};\n\n\tconst [showSchedule, setShowSchedule] = useState(\n\t\t'btn collapsible minus-sign toggle-btn'\n\t);\n\tconst toggleScheduleButton = () => {\n\t\tif (showSchedule === 'btn collapsible minus-sign toggle-btn') {\n\t\t\tsetShowSchedule('btn collapsible plus-sign toggle-btn');\n\t\t} else {\n\t\t\tsetShowSchedule('btn collapsible minus-sign toggle-btn');\n\t\t}\n\t};\n\n\treturn (\n\t\t// React.Frgment connect multiple components\n\t\t<React.Fragment>\n\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t{isLoading && <LoadingSpinner asOverlay />}\n\t\t\t{/* render logo/club name */}\n\t\t\t<div className=\"event-pages eventtype-page\">\n\t\t\t\t<section id=\"header\" title=\"\">\n\t\t\t\t\t<div className=\"section-container\">\n\t\t\t\t\t\t<div className=\"logo-container \">\n\t\t\t\t\t\t\t<img src={loadedImage} alt={clubName} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"primary-info\">\n\t\t\t\t\t\t\t<h3 className=\"header-title\">{clubName}</h3>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"clubname-container\">\n\t\t\t\t\t\t\tFrom{' '}\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref=\"/\"\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\tclassName=\"provider-clubname\">\n\t\t\t\t\t\t\t\t{clubName}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t\t<p />\n\t\t\t\t{/* this section is for club profile image */}\n\t\t\t\t{/* Regitration container */}\n\t\t\t\t<div className=\"section-container\">\n\t\t\t\t\t{/* event image on the left */}\n\t\t\t\t\t<div className=\"page-basic-container\">\n\t\t\t\t\t\t<div className=\"eventimage-container\">\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc={loadedProfileImage}\n\t\t\t\t\t\t\t\talt={clubName}\n\t\t\t\t\t\t\t\tclassName=\"eventimage-container-img\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{/* Blog posts on the right */}\n\t\t\t\t\t{/* <div className=\"registration-container\">\n\t\t\t\t\t\t<div className=\"col-xs-12\">\n\t\t\t\t\t\t\t<div className=\"clearfix\">\n\t\t\t\t\t\t\t\t<RegistrationMSG />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"section\">\n\t\t\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t\t\t{startDate} — {endDate}\n\t\t\t\t\t\t\t\t</strong>\n\t\t\t\t\t\t\t\t<br /> <br />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<h3>{props.event.venue}</h3>\n\t\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\t\ttitle={props.event.venue}\n\t\t\t\t\t\t\t\t\talt={props.event.venue}\n\t\t\t\t\t\t\t\t\tsrc={require('../../shared/utils/png/GMapSmall.png')}\n\t\t\t\t\t\t\t\t\tonClick={() => openMapHandler()}\n\t\t\t\t\t\t\t\t\tonHoover\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<h4>{props.event.address}</h4>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"col-xs-12\">\n\t\t\t\t\t\t\t{buttonName === 'REGISTER EVENT' && (\n\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\tto={{\n\t\t\t\t\t\t\t\t\t\tpathname: `/events/newEntryManager/${props.event.id}`,\n\t\t\t\t\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\t\t\t\t\teventName: props.event.name\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tdisabled={!openRegistration}\n\t\t\t\t\t\t\t\t\t\tsize=\"small-orange\">\n\t\t\t\t\t\t\t\t\t\t{buttonName}\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{buttonName === 'MODIFY ENTRY' && (\n\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\tto={{\n\t\t\t\t\t\t\t\t\t\tpathname: `/events/editEntryManager/${props.event.id}`,\n\t\t\t\t\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\t\t\t\t\teventName: props.event.name\n\t\t\t\t\t\t\t\t\t\t\t// regClosed: !openRegistration\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tdisabled={!openRegistration}\n\t\t\t\t\t\t\t\t\t\tsize=\"small-orange\">\n\t\t\t\t\t\t\t\t\t\t{buttonName}\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<div className=\"waitlist-msg\">\n\t\t\t\t\t\t\t\t{userOnWaitlist && waitlistMSG}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div> */}\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"section-container\">\n\t\t\t\t\t<div className=\"page-basic-container\">\n\t\t\t\t\t\t<div className=\"about-description\">\n\t\t\t\t\t\t\t<div className=\"toggle-section description\">\n\t\t\t\t\t\t\t\t<div className=\"short-description\">\n\t\t\t\t\t\t\t\t\t<div className=\"sub-heading\">\n\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\thref=\"#description\"\n\t\t\t\t\t\t\t\t\t\t\tdata-toggle=\"collapse\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={toggleDescriptionButton}>\n\t\t\t\t\t\t\t\t\t\t\tAbout Club {'   '}\n\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={showDescription}\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={toggleDescriptionButton}></button>\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div id=\"description\" className=\"collapse show\">\n\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t\t\t\t\t\t__html: loadedDescription\n\t\t\t\t\t\t\t\t\t\t\t}}></div>\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{/* {props.event.courseMap && (\n\t\t\t\t\t\t<div className=\"courseMap-container\">\n\t\t\t\t\t\t\t<div className=\"col-xs-12\">\n\t\t\t\t\t\t\t\t<div className=\"section\">\n\t\t\t\t\t\t\t\t\t<div className=\"coursemap-title\">Course Map</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\t\t\ttitle={props.event.courseMap}\n\t\t\t\t\t\t\t\t\t\talt={props.event.courseMap}\n\t\t\t\t\t\t\t\t\t\tsrc={\n\t\t\t\t\t\t\t\t\t\t\t// process.env.REACT_APP_ASSET_URL +\n\t\t\t\t\t\t\t\t\t\t\t// `/${props.event.courseMap}`\n\t\t\t\t\t\t\t\t\t\t\tprops.event.courseMap\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tonClick={() => openCourseHandler()}\n\t\t\t\t\t\t\t\t\t\tonHoover\n\t\t\t\t\t\t\t\t\t\tclassName=\"courseMap\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)} */}\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"section-container\">\n\t\t\t\t\t<div className=\"page-basic-container\">\n\t\t\t\t\t\t<div className=\"about-description\">\n\t\t\t\t\t\t\t<div className=\"toggle-section description\">\n\t\t\t\t\t\t\t\t<div className=\"short-description\">\n\t\t\t\t\t\t\t\t\t<div className=\"sub-heading\">\n\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\thref=\"#instruction\"\n\t\t\t\t\t\t\t\t\t\t\tdata-toggle=\"collapse\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={toggleScheduleButton}>\n\t\t\t\t\t\t\t\t\t\t\tEvent Schedule {'   '}\n\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={showSchedule}\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={toggleScheduleButton}></button>\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div id=\"instruction\" className=\"collapse show\">\n\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t\t\t\t\t\t__html: loadedSchedule\n\t\t\t\t\t\t\t\t\t\t\t}}></div>\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"section-container\">\n\t\t\t\t\t<div className=\"page-basic-container\">\n\t\t\t\t\t\t<div className=\"page-footer\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default ClubProfileViewer;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/UIElements/ErrorModal.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/EntryReport.js",["800","801","802","803","804","805","806","807","808"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/ItemTypes.js",["809"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/EntryListForUsers.js",["810","811","812","813","814","815","816","817","818"],"import React, {\n\tuseCallback,\n\tuseContext,\n\tuseState,\n\tuseEffect\n} from 'react';\n\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { UserAuthContext } from '../../shared/context/auth-context';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport MaterialTableEntryReport from './MaterialTableEntryReport';\n\nimport './ClubManager.css';\nimport '../../shared/components/FormElements/Button.css';\nimport { set } from 'date-fns';\n\nconst NOT_ATTENDING = 'Not Attending';\n\nconst EntryListForUsers = props => {\n\tlet displayName = props.location.state.displayName;\n\tlet eventName = props.location.state.eventName;\n\tlet eventId = props.location.state.eventId;\n\n\tconst [showLoading, setShowLoading] = useState(true);\n\tconst userAuthContext = useContext(UserAuthContext);\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\t// check the page has been initialized, if not, we want to hightlight multi-day event day button to day 1\n\tconst [init, setInit] = useState(false);\n\n\tconst [days, setDays] = useState(0);\n\tconst [dayArray, setDayArray] = useState([]);\n\tuseEffect(() => {\n\t\tlet tmp = [];\n\t\tif (days > 1) {\n\t\t\tfor (var i = 0; i < days; ++i) {\n\t\t\t\ttmp.push(i + 1);\n\t\t\t}\n\t\t}\n\t\tsetDayArray(tmp);\n\t}, [setDayArray, days]);\n\n\tconst [daySelection, setDaySelection] = useState(1);\n\tconst [entryListArray, setEntryListArray] = useState([]);\n\tconst [waitlistArray, setWaitlistArray] = useState([]);\n\tconst [raceClassLookup, setRaceClassLookup] = useState();\n\tlet raceClasses = [];\n\n\tconst [runGroupLookup, setRunGroupLookup] = useState();\n\tlet runGroups = [];\n\n\tconst [\n\t\tworkerAssignmentLookup,\n\t\tsetWorkerAssignmentLookup\n\t] = useState();\n\tlet workerAssignments = [];\n\n\t// return index of matched value\n\tconst getMapKey = (val, myMap) => {\n\t\tlet answer;\n\t\tfor (var i = 0; i < myMap.length; ++i) {\n\t\t\tif (myMap[i] === val) {\n\t\t\t\tanswer = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn answer;\n\t};\n\n\t// returns a map\n\tconst convert2Lookup = options => {\n\t\t//lookup format- lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\n\t\tlet lookupMap = {};\n\t\tfor (var i = 0; i < options.length; ++i) {\n\t\t\tlookupMap[i] = options[i];\n\t\t}\n\t\treturn lookupMap;\n\t};\n\n\tuseEffect(() => {\n\t\tconst fetchEntries = async () => {\n\t\t\ttry {\n\t\t\t\tconst [\n\t\t\t\t\tresponseData,\n\t\t\t\t\tresponseStatus,\n\t\t\t\t\tresponseMessage\n\t\t\t\t] = await sendRequest(\n\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL +\n\t\t\t\t\t\t`/events/entryreportforusers/${eventId}`,\n\t\t\t\t\t'POST',\n\t\t\t\t\tJSON.stringify({ displayName: displayName }),\n\t\t\t\t\t{\n\t\t\t\t\t\t'Content-type': 'application/json',\n\t\t\t\t\t\tAuthorization: 'Bearer ' + userAuthContext.userToken\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tsetDays(responseData.entryData.length);\n\n\t\t\t\t//***********  construct lookups ************//\n\t\t\t\t// responseData.raceClassOptions is [\"SS\", \"AS\", \"BS\", ...]\n\t\t\t\traceClasses = responseData.raceClassOptions;\n\t\t\t\tlet obj = {};\n\t\t\t\tobj = convert2Lookup(raceClasses);\n\t\t\t\tsetRaceClassLookup(obj);\n\n\t\t\t\t//*************** compose entry list from all the entries ************/\n\t\t\t\trunGroups = responseData.runGroupOptions;\n\t\t\t\tworkerAssignments = responseData.workerAssignments;\n\t\t\t\tlet entryDataArray = [];\n\t\t\t\tlet days = responseData.entryData.length;\n\t\t\t\tfor (let i = 0; i < days; ++i) {\n\t\t\t\t\tobj = {};\n\t\t\t\t\tobj = convert2Lookup(runGroups[i]);\n\t\t\t\t\tsetRunGroupLookup(obj);\n\n\t\t\t\t\tobj = {};\n\t\t\t\t\tobj = convert2Lookup(workerAssignments[i]);\n\t\t\t\t\tsetWorkerAssignmentLookup(obj);\n\n\t\t\t\t\tlet entryData = [];\n\t\t\t\t\tlet entries = responseData.entryData[i];\n\t\t\t\t\tfor (var j = 0; j < entries.length; ++j) {\n\t\t\t\t\t\t// filter out NOT_ATTENDING entries\n\t\t\t\t\t\tif (entries[j].runGroup[i] === NOT_ATTENDING) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet entry;\n\t\t\t\t\t\tif (displayName) {\n\t\t\t\t\t\t\tentry = {\n\t\t\t\t\t\t\t\tlastName: entries[j].userLastName,\n\t\t\t\t\t\t\t\tfirstName: entries[j].userFirstName[0] + '.',\n\t\t\t\t\t\t\t\tcarNumber: entries[j].carNumber,\n\t\t\t\t\t\t\t\t// for lookup field, we need to provide key in lookup array, we use index as key\n\t\t\t\t\t\t\t\traceClass: getMapKey(\n\t\t\t\t\t\t\t\t\tentries[j].raceClass,\n\t\t\t\t\t\t\t\t\traceClasses\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tcar: entries[j].car,\n\t\t\t\t\t\t\t\trunGroup: getMapKey(\n\t\t\t\t\t\t\t\t\tentries[j].runGroup[i],\n\t\t\t\t\t\t\t\t\trunGroups[i]\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tworkerAssignment: getMapKey(\n\t\t\t\t\t\t\t\t\tentries[j].workerAssignment[i],\n\t\t\t\t\t\t\t\t\tworkerAssignments[i]\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tentry = {\n\t\t\t\t\t\t\t\tuserName: entries[j].userName,\n\t\t\t\t\t\t\t\tcarNumber: entries[j].carNumber,\n\t\t\t\t\t\t\t\traceClass: getMapKey(\n\t\t\t\t\t\t\t\t\tentries[j].raceClass,\n\t\t\t\t\t\t\t\t\traceClasses\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tcar: entries[j].car,\n\t\t\t\t\t\t\t\trunGroup: getMapKey(\n\t\t\t\t\t\t\t\t\tentries[j].runGroup[i],\n\t\t\t\t\t\t\t\t\trunGroups[i]\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tworkerAssignment: getMapKey(\n\t\t\t\t\t\t\t\t\tentries[j].workerAssignment[i],\n\t\t\t\t\t\t\t\t\tworkerAssignments[i]\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tentryData.push(entry);\n\t\t\t\t\t}\n\t\t\t\t\tentryDataArray.push(entryData);\n\t\t\t\t}\n\t\t\t\tsetEntryListArray(entryDataArray);\n\n\t\t\t\t//************ compose waitlist ***************//\n\t\t\t\tlet waitlistDataArray = [];\n\t\t\t\tdays = responseData.waitlistData.length;\n\t\t\t\tfor (let i = 0; i < days; ++i) {\n\t\t\t\t\tlet entries = responseData.entryData[i];\n\t\t\t\t\tlet waitlistData = [];\n\t\t\t\t\tlet waitlist = responseData.waitlistData[i];\n\t\t\t\t\tfor (var j = 0; j < waitlist.length; ++j) {\n\t\t\t\t\t\tlet entry;\n\t\t\t\t\t\tif (displayName) {\n\t\t\t\t\t\t\tentry = {\n\t\t\t\t\t\t\t\tlastName: waitlist[j].userLastName,\n\t\t\t\t\t\t\t\tfirstName: waitlist[j].userFirstName[0] + '.',\n\t\t\t\t\t\t\t\tcarNumber: waitlist[j].carNumber,\n\t\t\t\t\t\t\t\traceClass: getMapKey(\n\t\t\t\t\t\t\t\t\twaitlist[j].raceClass,\n\t\t\t\t\t\t\t\t\traceClasses\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tcar: waitlist[j].car,\n\t\t\t\t\t\t\t\trunGroup: getMapKey(\n\t\t\t\t\t\t\t\t\twaitlist[j].runGroup[i],\n\t\t\t\t\t\t\t\t\trunGroups[i]\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tworkerAssignment: getMapKey(\n\t\t\t\t\t\t\t\t\twaitlist[j].workerAssignment[i],\n\t\t\t\t\t\t\t\t\tworkerAssignments[i]\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tentry = {\n\t\t\t\t\t\t\t\tuserName: waitlist[j].userName,\n\t\t\t\t\t\t\t\tcarNumber: waitlist[j].carNumber,\n\t\t\t\t\t\t\t\traceClass: getMapKey(\n\t\t\t\t\t\t\t\t\twaitlist[j].raceClass,\n\t\t\t\t\t\t\t\t\traceClasses\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tcar: waitlist[j].car,\n\t\t\t\t\t\t\t\trunGroup: getMapKey(\n\t\t\t\t\t\t\t\t\twaitlist[j].runGroup[i],\n\t\t\t\t\t\t\t\t\trunGroups[i]\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tworkerAssignment: getMapKey(\n\t\t\t\t\t\t\t\t\twaitlist[j].workerAssignment[i],\n\t\t\t\t\t\t\t\t\tworkerAssignments[i]\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\twaitlistData.push(entry);\n\t\t\t\t\t}\n\t\t\t\t\twaitlistDataArray.push(waitlistData);\n\t\t\t\t}\n\t\t\t\tsetWaitlistArray(waitlistDataArray);\n\t\t\t\tsetShowLoading(false);\n\t\t\t} catch (err) {}\n\t\t};\n\t\tfetchEntries();\n\t}, [sendRequest, setEntryListArray, setWaitlistArray]);\n\n\tconst daySelectionCallback = index => {\n\t\tsetDaySelection(index);\n\t};\n\n\t// create ref for day 1 button. For multi-day events, we want to set focus on day 1 button initially\n\t// We didn’t choose useRef in this example because an object ref doesn’t notify us about changes to\n\t// the current ref value. Using a callback ref ensures that even if a child component displays the\n\t// button later, we still get notified about it in the parent component and can update the color.\n\tconst day1ButtonRef = useCallback(button => {\n\t\tif (!init && button) {\n\t\t\tbutton.focus();\n\t\t\tsetInit(true);\n\t\t}\n\t});\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t{isLoading && (\n\t\t\t\t<div className=\"center\">\n\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{/* Showing day button for multi-day event */}\n\t\t\t{days > 1 &&\n\t\t\t\tdayArray.map(day => {\n\t\t\t\t\tif (day === 1) {\n\t\t\t\t\t\t// create ref for day 1 button\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tref={day1ButtonRef}\n\t\t\t\t\t\t\t\tkey={'entrylistforUsers' + day}\n\t\t\t\t\t\t\t\tclassName=\"button--small-white\"\n\t\t\t\t\t\t\t\tonClick={e => daySelectionCallback(day)}>\n\t\t\t\t\t\t\t\tDay {day}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tkey={'entrylistforUsers' + day}\n\t\t\t\t\t\t\t\tclassName=\"button--small-white\"\n\t\t\t\t\t\t\t\tonClick={e => daySelectionCallback(day)}>\n\t\t\t\t\t\t\t\tDay {day}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t})}\n\t\t\t{/* render material table according to event day */}\n\t\t\t{daySelection &&\n\t\t\t\tentryListArray.length > 0 &&\n\t\t\t\twaitlistArray.length > 0 && (\n\t\t\t\t\t<MaterialTableEntryReport\n\t\t\t\t\t\tentryList={entryListArray[daySelection - 1]}\n\t\t\t\t\t\twaitlist={waitlistArray[daySelection - 1]}\n\t\t\t\t\t\tdisplayName={displayName}\n\t\t\t\t\t\teventName={\n\t\t\t\t\t\t\tentryListArray.length > 1\n\t\t\t\t\t\t\t\t? eventName + ' Day ' + daySelection\n\t\t\t\t\t\t\t\t: eventName\n\t\t\t\t\t\t}\n\t\t\t\t\t\tshowLoading={showLoading}\n\t\t\t\t\t\traceClassLookup={raceClassLookup}\n\t\t\t\t\t\trunGroupLookup={runGroupLookup}\n\t\t\t\t\t\tworkerAssignmentLookup={workerAssignmentLookup}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default EntryListForUsers;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/ClubStripe.js",["819","820","821","822","823","824","825","826","827","828"],"import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useClubLoginValidation } from '../../shared/hooks/clubLoginValidation-hook';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\n\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { ClubAuthContext } from '../../shared/context/auth-context';\n\nimport STRIPE_VERIFICATION from '../../shared/utils/webp/StripeVerifyAccount.webp';\nimport '../../shared/css/EventForm.css';\nimport './ClubManager.css';\n\nconst ClubStripe = props => {\n\tconst history = useHistory();\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\n\tconst clubAuthContext = useContext(ClubAuthContext);\n\tconst clubId = clubAuthContext.clubId;\n\n\t// authentication check check whether club has logged in\n\tuseClubLoginValidation(`/clubs/accountManager/${clubId}`);\n\n\tconst [stripeButtonText, setStripeButtonText] = useState(\n\t\t'Setup Payouts on Stripe'\n\t);\n\tconst [stripeConnectURL, setStripeConnectURL] = useState();\n\n\t// If we are re-directing to this page, we want to clear up clubRedirectURL\n\tlet location = useLocation();\n\tlet path;\n\tuseEffect(() => {\n\t\tpath = location.pathname;\n\t\tlet clubRedirectURL = clubAuthContext.clubRedirectURL;\n\t\tif (path === clubRedirectURL) {\n\t\t\t// re-init redirectURL after re-direction route\n\t\t\tclubAuthContext.setClubRedirectURL(null);\n\t\t}\n\t}, [location]);\n\n\tconst [stripeAccount, setStripeAccount] = useState();\n\t// check if club has stripe account created\n\tuseEffect(() => {\n\t\tconst getStripeAccount = async values => {\n\t\t\ttry {\n\t\t\t\tconst [\n\t\t\t\t\tresponseData,\n\t\t\t\t\tresponseStatus,\n\t\t\t\t\tresponseMessage\n\t\t\t\t] = await sendRequest(\n\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL +\n\t\t\t\t\t\t`/clubs/stripeAccount/${clubId}`,\n\t\t\t\t\t'GET',\n\t\t\t\t\tnull,\n\t\t\t\t\t{\n\t\t\t\t\t\t// adding JWT to header for authentication, JWT contains clubId\n\t\t\t\t\t\tAuthorization: 'Bearer ' + clubAuthContext.clubToken\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tsetStripeAccount(responseData.stripeAccount);\n\t\t\t} catch (err) {}\n\t\t};\n\t\tgetStripeAccount();\n\t}, []);\n\n\t// check if stripe account has completed setup\n\tconst [detailsSubmitted, setDetailsSubmitted] = useState(false);\n\tconst [chargesEnabled, setChargesEnabled] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (stripeAccount) {\n\t\t\tif (stripeAccount.details_submitted) {\n\t\t\t\tsetDetailsSubmitted(true);\n\t\t\t}\n\t\t\tif (stripeAccount.charges_enabled) {\n\t\t\t\tsetChargesEnabled(true);\n\t\t\t}\n\t\t}\n\t}, [stripeAccount, setDetailsSubmitted]);\n\n\tconst connectWithStripeHandler = async () => {\n\t\tlet mounted = true;\n\t\ttry {\n\t\t\t// let mounted = true;\n\t\t\tconst [\n\t\t\t\tresponseData,\n\t\t\t\tresponseStatus,\n\t\t\t\tresponseMessage\n\t\t\t] = await sendRequest(\n\t\t\t\tprocess.env.REACT_APP_BACKEND_URL + `/stripe/connect`,\n\t\t\t\t'GET',\n\t\t\t\tnull,\n\t\t\t\t{\n\t\t\t\t\t// adding JWT to header for authentication, JWT contains clubId\n\t\t\t\t\tAuthorization: 'Bearer ' + clubAuthContext.clubToken\n\t\t\t\t}\n\t\t\t);\n\t\t\t// re-direct to connect to setup account\n\t\t\tif (mounted && responseData.url) {\n\t\t\t\t// setStripeConnectURL(responseData.url);\n\t\t\t\tclubAuthContext.setClubRedirectURL(responseData.url);\n\t\t\t\thistory.push('/stripeConnect');\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.log(' err= ', err);\n\t\t}\n\t\treturn () => {\n\t\t\tmounted = false;\n\t\t};\n\t};\n\n\tuseEffect(() => {\n\t\tif (stripeConnectURL) {\n\t\t\tprops.getStripeConnectURL(stripeConnectURL);\n\t\t}\n\t}, [\n\t\tstripeConnectURL,\n\t\tprops.getStripeConnectURL,\n\t\tclubAuthContext,\n\t\thistory\n\t]);\n\n\tif (isLoading) {\n\t\treturn (\n\t\t\t<div className=\"center\">\n\t\t\t\t<LoadingSpinner />\n\t\t\t</div>\n\t\t);\n\t}\n\n\tconst accountForm = () => (\n\t\t<div className=\"event-form\">\n\t\t\t<div className=\"event-form-header\">\n\t\t\t\t<h4>Setup Stripe Connect Account</h4>\n\t\t\t\t<hr className=\"event-form__hr\" />\n\t\t\t</div>\n\t\t\t<div className=\"stripeconnect-container\">\n\t\t\t\t{stripeAccount && detailsSubmitted && chargesEnabled && (\n\t\t\t\t\t<p className=\"stripeMessage\">\n\t\t\t\t\t\tCongratulations! Your stripe account is now connected with\n\t\t\t\t\t\tMYSeatTime. You are ready to post events now. Entry fee\n\t\t\t\t\t\twill be automatically sent to your Stripe account after\n\t\t\t\t\t\tcustomers been charged.\n\t\t\t\t\t</p>\n\t\t\t\t)}\n\t\t\t\t{stripeAccount && detailsSubmitted && !chargesEnabled && (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<p className=\"stripeMessageErr\">\n\t\t\t\t\t\t\tYour Stripe Connect Account setup has missing required\n\t\t\t\t\t\t\tinformation! Please{' '}\n\t\t\t\t\t\t\t{/* with noopener it opens link in a new tab */}\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t\thref=\"https://dashboard.stripe.com\"\n\t\t\t\t\t\t\t\ttarget=\"_blank\">\n\t\t\t\t\t\t\t\tlogin Stripe\n\t\t\t\t\t\t\t</a>{' '}\n\t\t\t\t\t\t\tto complete it. If you do not see{' '}\n\t\t\t\t\t\t\t<b className=\"stripeVerify\">\n\t\t\t\t\t\t\t\tFinish verifying your accoung\n\t\t\t\t\t\t\t</b>{' '}\n\t\t\t\t\t\t\tmessage on top of Stripe Dashoard, please wait for 30\n\t\t\t\t\t\t\tminutes to check again. There will be 2 verifications\n\t\t\t\t\t\t\teven it says all caught up. After 2nd verification,\n\t\t\t\t\t\t\tplease wait for 5 minutes and refresh this page to check\n\t\t\t\t\t\t\tthe status.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t)}\n\t\t\t\t{stripeAccount && !detailsSubmitted && (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<p className=\"stripeMessageErr\">\n\t\t\t\t\t\t\tYour Stripe Connect Account setup has not been completed\n\t\t\t\t\t\t\tyet! Press the button to continue it.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tonClick={connectWithStripeHandler}\n\t\t\t\t\t\t\tclassName=\"stripeconnect\">\n\t\t\t\t\t\t\t{stripeButtonText}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t)}\n\t\t\t\t{!stripeAccount && (\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={connectWithStripeHandler}\n\t\t\t\t\t\tclassName=\"stripeconnect\">\n\t\t\t\t\t\t{stripeButtonText}\n\t\t\t\t\t</Button>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t{!isLoading && accountForm()}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default ClubStripe;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/components/EventItem.js",["829","830","831"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/components/EntryReportEventItem.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/hooks/redirectExternalURL.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/users/pages/UserEvents.js",["832","833"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/hooks/form-hook.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/stores/store.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/ClubStripeConnect.js",["834","835","836","837"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/hooks/clubAuth-hook.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/PaymentCenterSelector.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/PaymentCenter.js",["838","839","840","841","842","843","844","845"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/PaymentCenterManager.js",["846"],"import React, { useState } from 'react';\nimport PaymentCenter from './PaymentCenter';\nimport './ClubManager.css';\n\nconst PaymentCenterManager = props => {\n\tlet paymentCenterData = props.paymentCenterData;\n\tconst [eventName, setEventName] = useState(\n\t\tprops.paymentCenterData.eventName !== ''\n\t\t\t? props.paymentCenterData.eventName\n\t\t\t: ''\n\t);\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div className=\"list-header clearfix\">\n\t\t\t\t<div className=\"eventname\">\n\t\t\t\t\tPayment Center - {eventName} &nbsp;&nbsp;&nbsp;{' '}\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{/* Edit Event Manager Tabs*/}\n\t\t\t<div className=\"eventmanager\">\n\t\t\t\t<div className=\"dashboard-tabs activity-sections\">\n\t\t\t\t\t<div className=\"tab-content\">\n\t\t\t\t\t\t<PaymentCenter paymentCenterData={paymentCenterData} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default PaymentCenterManager;\n",["847","848"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/MaterialTableEntryReport.js",["849","850"],"import React from 'react';\nimport MaterialTable from 'material-table';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport PromptModal from '../../shared/components/UIElements/PromptModal';\n\nimport './ClubManager.css';\nimport { TramOutlined } from '@material-ui/icons';\n\nconst MaterialTableEntryReport = props => {\n\tlet entryList = props.entryList;\n\tlet waitlist = props.waitlist;\n\tlet displayName = props.displayName;\n\tlet eventName = props.eventName;\n\tlet showLoading = props.showLoading;\n\tlet raceClassLookup = props.raceClassLookup;\n\tlet runGroupLookup = props.runGroupLookup;\n\tlet workerAssignmentLookup = props.workerAssignmentLookup;\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div className=\"entrylist-table\">\n\t\t\t\t{displayName && (\n\t\t\t\t\t<MaterialTable\n\t\t\t\t\t\ttitle={`${eventName} Entry List`}\n\t\t\t\t\t\tisLoading={showLoading}\n\t\t\t\t\t\tcomponents={{\n\t\t\t\t\t\t\tOverlayLoading: props => (\n\t\t\t\t\t\t\t\t<div className=\"center\">\n\t\t\t\t\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tborder: '2px solid gray',\n\t\t\t\t\t\t\tmaxWidth: '1450px',\n\t\t\t\t\t\t\tmarginTop: '10px',\n\t\t\t\t\t\t\tmarginLeft: '20px'\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tcolumns={[\n\t\t\t\t\t\t\t{ title: 'Last Name', field: 'lastName' },\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: 'First Name',\n\t\t\t\t\t\t\t\tfield: 'firstName',\n\t\t\t\t\t\t\t\tfiltering: false\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: 'Car Number',\n\t\t\t\t\t\t\t\tfield: 'carNumber',\n\t\t\t\t\t\t\t\tfiltering: false\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{ title: 'Car', field: 'car', filtering: false },\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: 'Race Class',\n\t\t\t\t\t\t\t\tfield: 'raceClass',\n\t\t\t\t\t\t\t\tlookup: raceClassLookup\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: 'Run Group',\n\t\t\t\t\t\t\t\tfield: 'runGroup',\n\t\t\t\t\t\t\t\tlookup: runGroupLookup\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: 'Worker Group',\n\t\t\t\t\t\t\t\tfield: 'workerAssignment',\n\t\t\t\t\t\t\t\tlookup: workerAssignmentLookup\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]}\n\t\t\t\t\t\tdata={entryList}\n\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\tfiltering: true,\n\t\t\t\t\t\t\texportButton: true\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{displayName && waitlist !== [] && (\n\t\t\t\t\t<MaterialTable\n\t\t\t\t\t\ttitle={`${eventName} Waitlist`}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tborder: '2px solid gray',\n\t\t\t\t\t\t\tmaxWidth: '1450px',\n\t\t\t\t\t\t\toverflow: 'scroll',\n\t\t\t\t\t\t\tmarginTop: '10px',\n\t\t\t\t\t\t\tmarginLeft: '20px'\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tcolumns={[\n\t\t\t\t\t\t\t{ title: 'Last Name', field: 'lastName' },\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: 'First Name',\n\t\t\t\t\t\t\t\tfield: 'firstName',\n\t\t\t\t\t\t\t\tfiltering: false\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: 'Car Number',\n\t\t\t\t\t\t\t\tfield: 'carNumber',\n\t\t\t\t\t\t\t\tfiltering: false\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{ title: 'Car', field: 'car', filtering: false },\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: 'Race Class',\n\t\t\t\t\t\t\t\tfield: 'raceClass',\n\t\t\t\t\t\t\t\tlookup: raceClassLookup,\n\t\t\t\t\t\t\t\tfiltering: false\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: 'Run Group',\n\t\t\t\t\t\t\t\tfield: 'runGroup',\n\t\t\t\t\t\t\t\tlookup: runGroupLookup,\n\t\t\t\t\t\t\t\tfiltering: false\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: 'Worker Group',\n\t\t\t\t\t\t\t\tfield: 'workerAssignment',\n\t\t\t\t\t\t\t\tlookup: workerAssignmentLookup,\n\t\t\t\t\t\t\t\tfiltering: false\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]}\n\t\t\t\t\t\tdata={waitlist}\n\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\tfiltering: false,\n\t\t\t\t\t\t\tsorting: false,\n\t\t\t\t\t\t\texportButton: true\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{!displayName && (\n\t\t\t\t\t<MaterialTable\n\t\t\t\t\t\ttitle={`${eventName} Entry List`}\n\t\t\t\t\t\tcolumns={[\n\t\t\t\t\t\t\t{ title: 'User Name', field: 'userName' },\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: 'Car Number',\n\t\t\t\t\t\t\t\tfield: 'carNumber',\n\t\t\t\t\t\t\t\tfiltering: false\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{ title: 'Car', field: 'car', filtering: false },\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: 'Race Class',\n\t\t\t\t\t\t\t\tfield: 'raceClass',\n\t\t\t\t\t\t\t\tlookup: raceClassLookup\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: 'Run Group',\n\t\t\t\t\t\t\t\tfield: 'runGroup',\n\t\t\t\t\t\t\t\tlookup: runGroupLookup\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: 'Worker Group',\n\t\t\t\t\t\t\t\tfield: 'workerAssignment',\n\t\t\t\t\t\t\t\tlookup: workerAssignmentLookup\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]}\n\t\t\t\t\t\tdata={entryList}\n\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\tfiltering: true,\n\t\t\t\t\t\t\texportButton: true\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{!displayName && waitlist !== [] && (\n\t\t\t\t\t<MaterialTable\n\t\t\t\t\t\ttitle={`${eventName} Waitlist`}\n\t\t\t\t\t\tcolumns={[\n\t\t\t\t\t\t\t{ title: 'User Name', field: 'userName' },\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: 'Car Number',\n\t\t\t\t\t\t\t\tfield: 'carNumber'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{ title: 'Car', field: 'car' },\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: 'Race Class',\n\t\t\t\t\t\t\t\tfield: 'raceClass',\n\t\t\t\t\t\t\t\tlookup: raceClassLookup\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: 'Run Group',\n\t\t\t\t\t\t\t\tfield: 'runGroup',\n\t\t\t\t\t\t\t\tlookup: runGroupLookup\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: 'Worker Group',\n\t\t\t\t\t\t\t\tfield: 'workerAssignment',\n\t\t\t\t\t\t\t\tlookup: workerAssignmentLookup\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]}\n\t\t\t\t\t\tdata={waitlist}\n\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\tsorting: false,\n\t\t\t\t\t\t\texportButton: true\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default MaterialTableEntryReport;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/MaterialTablePaymentCenter.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/UIElements/Avatar.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/cars/pages/Car.js",["851","852","853","854"],"import React, { useContext, useState, useEffect } from 'react';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\n\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { useParams } from 'react-router-dom';\nimport { UserAuthContext } from '../../shared/context/auth-context';\nimport CarItem from '../components/CarItem';\n\n// Cars is called in App.js where the route been defined\n// path={'/cars/:id'}\nconst Car = () => {\n\tconst userAuthContext = useContext(UserAuthContext);\n\tconst [loadedCar, setLoadedCar] = useState();\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\n\tconst cId = useParams().carId;\n\n\t// check localStorage for saved garage data to avoid querying from backend\n\tlet userData = JSON.parse(localStorage.getItem('userData'));\n\tlet garage = userData.garage ? userData.garage : [];\n\n\tuseEffect(() => {\n\t\tlet foundCar = false;\n\t\tgarage.map(car => {\n\t\t\tif (car.id === cId) {\n\t\t\t\tsetLoadedCar(car);\n\t\t\t\tfoundCar = true;\n\t\t\t}\n\t\t});\n\n\t\tconst fetchCar = async () => {\n\t\t\ttry {\n\t\t\t\tconst [\n\t\t\t\t\tresponseData,\n\t\t\t\t\tresponseStatus,\n\t\t\t\t\tresponseMessage\n\t\t\t\t] = await sendRequest(\n\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL + `/cars/${cId}`,\n\t\t\t\t\t'GET',\n\t\t\t\t\tnull,\n\t\t\t\t\t{\n\t\t\t\t\t\t// No need for content-type since body is null,\n\t\t\t\t\t\t// adding JWT to header for authentication\n\t\t\t\t\t\tAuthorization: 'Bearer ' + userAuthContext.userToken\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tsetLoadedCar(responseData.car);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log('err = ', err);\n\t\t\t}\n\t\t};\n\t\tif (!foundCar) {\n\t\t\tfetchCar();\n\t\t}\n\t}, [sendRequest, cId, setLoadedCar]);\n\n\t// calling CarsList from CarsList.js where it passes CARS to child CarsList\n\t// just treat the following call as CarsList(items = CARS); items is the props\n\t// name defined in CarsList\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t{isLoading && (\n\t\t\t\t<div className=\"center\">\n\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{!isLoading && loadedCar && <CarItem car={loadedCar} />}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default Car;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/form-validator.jsx",[],["855","856"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/RefundCenterSelector.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/components/RefundCenterEventItem.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/RefundCenter.js",["857","858","859","860","861","862","863","864","865","866","867","868","869"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/components/PaymentCenterEventItem.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/RefundCenterManager.js",["870"],"import React, { useState } from 'react';\nimport RefundCenter from './RefundCenter';\nimport './ClubManager.css';\n\nconst RefundCenterManager = props => {\n\tlet refundCenterData = props.refundCenterData;\n\tconst [eventName, setEventName] = useState(\n\t\tprops.refundCenterData.eventName !== ''\n\t\t\t? props.refundCenterData.eventName\n\t\t\t: ''\n\t);\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div className=\"list-header clearfix\">\n\t\t\t\t<div className=\"eventname\">\n\t\t\t\t\tRefund Center - {eventName} &nbsp;&nbsp;&nbsp;{' '}\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{/* Edit Event Manager Tabs*/}\n\t\t\t<div className=\"eventmanager\">\n\t\t\t\t<div className=\"dashboard-tabs activity-sections\">\n\t\t\t\t\t<div className=\"tab-content\">\n\t\t\t\t\t\t<RefundCenter refundCenterData={refundCenterData} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default RefundCenterManager;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/MaterialTableRefundCenter.js",["871","872"],"import React, { useEffect, useState } from 'react';\nimport Button from '../../shared/components/FormElements/Button';\nimport MaterialTable from 'material-table';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\n\nimport './ClubManager.css';\nimport '../../shared/components/FormElements/Button.css';\n\nconst MaterialTableRefundCenter = props => {\n\t// callbacks from parent\n\tconst getEmailRefundFee = props.getEmailRefundFee;\n\tconst getPaymentStatus = props.getPaymentStatus;\n\n\tlet entryList = props.entryList;\n\tlet eventName = props.eventName;\n\tlet showLoading = props.showLoading;\n\n\t// cannot use useState to set button text and className because it will\n\t// apply to all buttons\n\tconst getButtonClassName = paymentStatus => {\n\t\tif (\n\t\t\tpaymentStatus === 'Unpaid' ||\n\t\t\tpaymentStatus === 'Paid' ||\n\t\t\tpaymentStatus === 'Refunded'\n\t\t) {\n\t\t\t// for Paid, we will disable the button and css is controlled by :disable\n\t\t\treturn 'small-green';\n\t\t} else if (\n\t\t\tpaymentStatus === 'Declined' ||\n\t\t\tpaymentStatus === 'Require Authentication'\n\t\t) {\n\t\t\treturn 'small-red';\n\t\t}\n\t};\n\n\tconst [data, setData] = useState(entryList);\n\n\tconst getButtonText = paymentStatus => {\n\t\tif (paymentStatus === 'Unpaid') {\n\t\t\treturn 'CHARGE';\n\t\t} else if (paymentStatus === 'Paid') {\n\t\t\treturn 'REFUND';\n\t\t} else if (paymentStatus === 'Declined') {\n\t\t\treturn 'DECLINED';\n\t\t} else if (paymentStatus === 'Require Authentication') {\n\t\t\treturn \"AUTH REQ'D\";\n\t\t} else if (paymentStatus === 'Refunded') {\n\t\t\treturn 'REFUNDED';\n\t\t}\n\t};\n\tconst [selectedRow, setSelectedRow] = useState(null);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div className=\"entrylist-table\">\n\t\t\t\t<MaterialTable\n\t\t\t\t\t// data={entryList}\n\t\t\t\t\tdata={data}\n\t\t\t\t\ttitle={`${eventName} Entry List`}\n\t\t\t\t\tisLoading={showLoading}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tborder: '2px solid gray',\n\t\t\t\t\t\tmaxWidth: '1450px',\n\t\t\t\t\t\tmarginTop: '10px',\n\t\t\t\t\t\tmarginLeft: '20px'\n\t\t\t\t\t}}\n\t\t\t\t\tcolumns={[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: 'Last Name',\n\t\t\t\t\t\t\tfield: 'lastName',\n\t\t\t\t\t\t\teditable: 'never'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: 'First Name',\n\t\t\t\t\t\t\tfield: 'firstName',\n\t\t\t\t\t\t\tfiltering: false,\n\t\t\t\t\t\t\teditable: 'never'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: 'Email',\n\t\t\t\t\t\t\tfield: 'email',\n\t\t\t\t\t\t\tfiltering: false,\n\t\t\t\t\t\t\teditable: 'never'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: 'Car Number',\n\t\t\t\t\t\t\tfield: 'carNumber',\n\t\t\t\t\t\t\tfiltering: false,\n\t\t\t\t\t\t\teditable: 'never'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: 'Payment Method',\n\t\t\t\t\t\t\tfield: 'paymentMethod',\n\t\t\t\t\t\t\tfiltering: false,\n\t\t\t\t\t\t\teditable: 'never'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: 'Entry Fee',\n\t\t\t\t\t\t\tfield: 'entryFee',\n\t\t\t\t\t\t\tfiltering: false,\n\t\t\t\t\t\t\teditable: 'never'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: 'Refund Fee',\n\t\t\t\t\t\t\tfield: 'refundFee',\n\t\t\t\t\t\t\tfiltering: false,\n\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\teditable: 'onUpdate'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: 'Status',\n\t\t\t\t\t\t\tfield: 'paymentStatus',\n\t\t\t\t\t\t\tfiltering: false,\n\t\t\t\t\t\t\teditable: 'never'\n\t\t\t\t\t\t}\n\t\t\t\t\t]}\n\t\t\t\t\toptions={{\n\t\t\t\t\t\tfiltering: true,\n\t\t\t\t\t\texportButton: true,\n\t\t\t\t\t\trowStyle: rowData => ({\n\t\t\t\t\t\t\tbackgroundColor:\n\t\t\t\t\t\t\t\tselectedRow === rowData.tableData.id ? '#EEE' : '#FFF'\n\t\t\t\t\t\t})\n\t\t\t\t\t}}\n\t\t\t\t\tcomponents={{\n\t\t\t\t\t\tAction: props => (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tonClick={event => {\n\t\t\t\t\t\t\t\t\t// return email back to parent to send request to backend\n\t\t\t\t\t\t\t\t\tgetEmailRefundFee(\n\t\t\t\t\t\t\t\t\t\tprops.data.email,\n\t\t\t\t\t\t\t\t\t\tprops.data.refundFee\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tprops.action.onClick(event, props.data);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tsize={getButtonClassName(props.data.paymentStatus)}\n\t\t\t\t\t\t\t\tdisabled={props.data.paymentStatus !== 'Paid'}>\n\t\t\t\t\t\t\t\t{getButtonText(props.data.paymentStatus)}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t),\n\t\t\t\t\t\tOverlayLoading: props => (\n\t\t\t\t\t\t\t<div className=\"center\">\n\t\t\t\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t}}\n\t\t\t\t\tonRowClick={(evt, selectedRow) => {\n\t\t\t\t\t\tsetSelectedRow(selectedRow.tableData.id);\n\t\t\t\t\t}}\n\t\t\t\t\t// editable={{\n\t\t\t\t\t// \tonRowAdd: newData =>\n\t\t\t\t\t// \t\tnew Promise((resolve, reject) => {\n\t\t\t\t\t// \t\t\tsetTimeout(() => {\n\t\t\t\t\t// \t\t\t\tsetData([...data, newData]);\n\n\t\t\t\t\t// \t\t\t\tresolve();\n\t\t\t\t\t// \t\t\t}, 1000);\n\t\t\t\t\t// \t\t}),\n\t\t\t\t\t// \tonRowUpdate: (newData, oldData) =>\n\t\t\t\t\t// \t\tnew Promise((resolve, reject) => {\n\t\t\t\t\t// \t\t\tsetTimeout(() => {\n\t\t\t\t\t// \t\t\t\tconst dataUpdate = [...data];\n\t\t\t\t\t// \t\t\t\tconst index = oldData.tableData.id;\n\t\t\t\t\t// \t\t\t\tdataUpdate[index] = newData;\n\t\t\t\t\t// \t\t\t\tsetData([...dataUpdate]);\n\t\t\t\t\t// \t\t\t\tresolve();\n\t\t\t\t\t// \t\t\t}, 1000);\n\t\t\t\t\t// \t\t})\n\t\t\t\t\t// \t// onRowDelete: oldData =>\n\t\t\t\t\t// \t// \tnew Promise((resolve, reject) => {\n\t\t\t\t\t// \t// \t\tsetTimeout(() => {\n\t\t\t\t\t// \t// \t\t\tconst dataDelete = [...data];\n\t\t\t\t\t// \t// \t\t\tconst index = oldData.tableData.id;\n\t\t\t\t\t// \t// \t\t\tdataDelete.splice(index, 1);\n\t\t\t\t\t// \t// \t\t\tsetData([...dataDelete]);\n\n\t\t\t\t\t// \t// \t\t\tresolve();\n\t\t\t\t\t// \t// \t\t}, 1000);\n\t\t\t\t\t// \t// \t})\n\t\t\t\t\t// }}\n\t\t\t\t\tactions={[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ticon: 'Charge',\n\t\t\t\t\t\t\ttooltip: 'Charge User',\n\t\t\t\t\t\t\tonClick: (event, rowData) => {\n\t\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\t\t// need to set timeout to have the table load the new value\n\t\t\t\t\t\t\t\t\t// console.log('rowData = ', rowData);\n\t\t\t\t\t\t\t\t}, 2000);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]}\n\t\t\t\t\tcellEditable={{\n\t\t\t\t\t\tonCellEditApproved: (\n\t\t\t\t\t\t\tnewValue,\n\t\t\t\t\t\t\toldValue,\n\t\t\t\t\t\t\trowData,\n\t\t\t\t\t\t\tcolumnDef\n\t\t\t\t\t\t) => {\n\t\t\t\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\t\t\t\t// rawData is the old data\n\t\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\t\tconsole.log('rowData = ', rowData);\n\t\t\t\t\t\t\t\t\trowData.refundFee = newValue;\n\t\t\t\t\t\t\t\t\tconst dataUpdate = [...data];\n\n\t\t\t\t\t\t\t\t\tconst index = rowData.tableData.id;\n\t\t\t\t\t\t\t\t\tconsole.log('index = ', index);\n\t\t\t\t\t\t\t\t\tdataUpdate[index] = rowData;\n\t\t\t\t\t\t\t\t\tconsole.log('dataUpdate new = ', dataUpdate);\n\t\t\t\t\t\t\t\t\tsetData([...dataUpdate]);\n\t\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t\t}, 1000);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default MaterialTableRefundCenter;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/entryDashboard/components/CardAuthentication.js",["873","874","875","876","877","878","879","880","881","882","883","884"],"import React, { useState, useContext, useEffect } from 'react';\nimport {\n\tuseStripe,\n\tuseElements,\n\tCardElement\n} from '@stripe/react-stripe-js';\n\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\n\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { UserAuthContext } from '../../shared/context/auth-context';\n\nimport './CardSectionStyles.css';\nconst PAID = 'Paid';\n\nconst CardAuthentication = props => {\n\tconst entryId = props.entryId;\n\tconst stripe = useStripe();\n\tconst [stripeLoading, setStripeLoading] = useState(false);\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\tconst userAuthContext = useContext(UserAuthContext);\n\tconst [clientSecret, setClientSecret] = useState();\n\tconst [setupIntentId, setSetupIntentId] = useState();\n\tconst [\n\t\tauthenticationButtonText,\n\t\tsetAuthenticationButtonText\n\t] = useState('Authenticate Charge');\n\n\tconst onclearCallBack = () => {\n\t\tclearError();\n\t};\n\n\tconst authenticationHandler = async () => {\n\t\tsetStripeLoading(true);\n\t\tconst [\n\t\t\tresponseData,\n\t\t\tresponseStatus,\n\t\t\tresponseMessage\n\t\t] = await sendRequest(\n\t\t\tprocess.env.REACT_APP_BACKEND_URL +\n\t\t\t\t`/entries/authentication/${entryId}`,\n\t\t\t'GET',\n\t\t\tnull,\n\t\t\t{\n\t\t\t\t// adding JWT to header for authentication\n\t\t\t\tAuthorization: 'Bearer ' + userAuthContext.userToken\n\t\t\t}\n\t\t);\n\t\tlet clientSecret = responseData.clientSecret;\n\t\tlet paymentMethodId = responseData.paymentMethodId;\n\n\t\t// Pass the failed PaymentIntent to your client from your server\n\t\tlet result = await stripe.confirmCardPayment(clientSecret, {\n\t\t\tpayment_method: paymentMethodId\n\t\t});\n\n\t\tif (result.error) {\n\t\t\tconsole.log('1860 err = ', result.error);\n\t\t\tconsole.log(\n\t\t\t\t'1861 result.paymentIntent.status = ',\n\t\t\t\tresult.paymentIntent.status\n\t\t\t);\n\t\t\terror = result.error;\n\t\t}\n\t\tif (result.paymentIntent.status === 'succeeded') {\n\t\t\t// update paymentStatus to backend\n\t\t\tconsole.log('succeeded');\n\t\t\tconst [\n\t\t\t\tresponseData,\n\t\t\t\tresponseStatus,\n\t\t\t\tresponseMessage\n\t\t\t] = await sendRequest(\n\t\t\t\tprocess.env.REACT_APP_BACKEND_URL +\n\t\t\t\t\t`/entries/paymentStatus/${entryId}`,\n\t\t\t\t'POST',\n\t\t\t\tJSON.stringify({\n\t\t\t\t\tpaymentStatus: PAID\n\t\t\t\t}),\n\t\t\t\t{\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t// adding JWT to header for authentication\n\t\t\t\t\tAuthorization: 'Bearer ' + userAuthContext.userToken\n\t\t\t\t}\n\t\t\t);\n\t\t\tif (responseData.paymentStatus === PAID) {\n\t\t\t\tsetAuthenticationButtonText(PAID);\n\t\t\t\tprops.updatePaymentStatus(PAID);\n\t\t\t}\n\t\t}\n\n\t\tsetStripeLoading(false);\n\t};\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ErrorModal error={error} onClear={onclearCallBack} />\n\t\t\t{(isLoading || stripeLoading) && (\n\t\t\t\t<div className=\"center\">\n\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t\t{/* <form onSubmit={handleSubmit} className=\"cardform\"> */}\n\t\t\t<div className=\"cardform\">\n\t\t\t\t<Button\n\t\t\t\t\tonClick={authenticationHandler}\n\t\t\t\t\tsize=\"small-block-payment\"\n\t\t\t\t\tdisabled={\n\t\t\t\t\t\tstripeLoading || authenticationButtonText === PAID\n\t\t\t\t\t}>\n\t\t\t\t\t{authenticationButtonText}\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default CardAuthentication;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/index.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/entryDashboard/pages/CarSelector.js",["885"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/config/types.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/UUID.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/header-bar.jsx",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/cars/components/CarItem.js",["886","887","888","889","890"],"import React, { useState, useContext, useEffect } from 'react';\n\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\n\nimport { UserAuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport '../../shared/css/CarItem.css';\n\nconst CarItem = props => {\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\n\t// useContext is listening to \"UserAuthContext\"\n\tconst userAuthContext = useContext(UserAuthContext);\n\tconst [owner, setOWner] = useState(false);\n\tuseEffect(() => {\n\t\tif (userAuthContext.userId === props.car.userId) {\n\t\t\tsetOWner(true);\n\t\t}\n\t}, [userAuthContext.userId, props.car.userId]);\n\n\tconst [active, setActive] = useState(props.car.active);\n\tconst [activeButtonName, setActiveButtonName] = useState(\n\t\t'ACTIVATE'\n\t);\n\tconst [activeButtonClassName, setActiveButtonClassName] = useState(\n\t\t'small-green'\n\t);\n\tuseEffect(() => {\n\t\tif (active) {\n\t\t\tsetActiveButtonName('ACTIVATED');\n\t\t\tsetActiveButtonClassName('small-green');\n\t\t} else {\n\t\t\tsetActiveButtonName('RETIRED');\n\t\t\tsetActiveButtonClassName('small-grey');\n\t\t}\n\t}, [active]);\n\n\t// modal section\n\tconst [showModal, setShowModal] = useState(false);\n\tconst openModalHandler = () => setShowModal(true);\n\tconst closeModalHandler = () => {\n\t\tsetShowModal(false);\n\t};\n\n\tconst activateHandler = async () => {\n\t\ttry {\n\t\t\tawait sendRequest(\n\t\t\t\tprocess.env.REACT_APP_BACKEND_URL +\n\t\t\t\t\t`/cars/activate/${props.car.id}`,\n\t\t\t\t'PATCH',\n\t\t\t\tJSON.stringify({ active: !active }),\n\t\t\t\t{\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t// adding JWT to header for authentication\n\t\t\t\t\tAuthorization: 'Bearer ' + userAuthContext.userToken,\n\t\t\t\t\tpath: 'cars'\n\t\t\t\t}\n\t\t\t);\n\t\t\tsetActive(!active);\n\t\t} catch (err) {}\n\t};\n\n\tconst carImageElement =\n\t\tprops.car.image !== '' ? (\n\t\t\t<div className=\"event-item__image\">\n\t\t\t\t<img src={props.car.image} alt={props.car.name} />\n\t\t\t</div>\n\t\t) : (\n\t\t\t<div></div>\n\t\t);\n\tconst leftFront = () => (\n\t\t<div>\n\t\t\t<p>Toe : {props.car.LFToe} in</p>\n\t\t\t<p>Camber : {props.car.LFCamber}&#x00B0;</p>\n\t\t\t<p>Caster : {props.car.LFCaster}&#x00B0;</p>\n\t\t\t<p>Sway Bar: {props.car.FBar}</p>\n\t\t</div>\n\t);\n\n\tconst centerFront = () => (\n\t\t<div>\n\t\t\t<p>Tire Pressure : {props.car.frontPressure}psi</p>\n\t\t\t<p>Total Toe: {props.car.frontToe}in</p>\n\t\t\t<p>Rebound: {props.car.FRebound}</p>\n\t\t\t<p>Compression: {props.car.FCompression}</p>\n\t\t</div>\n\t);\n\n\tconst rightFront = () => (\n\t\t<div>\n\t\t\t<p>Toe : {props.car.RFToe} in</p>\n\t\t\t<p>Camber : {props.car.RFCamber}&#x00B0;</p>\n\t\t\t<p>Caster : {props.car.RFCaster}&#x00B0;</p>\n\t\t</div>\n\t);\n\n\tconst leftRear = () => (\n\t\t<div>\n\t\t\t<p>Toe : {props.car.LRToe} in</p>\n\t\t\t<p>Camber : {props.car.LRCamber}&#x00B0;</p>\n\t\t\t<p>Sway Bar: {props.car.RBar}</p>\n\t\t</div>\n\t);\n\n\tconst centerRear = () => (\n\t\t<div>\n\t\t\t<p>Tire Pressure : {props.car.rearPressure}psi</p>\n\t\t\t<p>Total Toe: {props.car.rearToe}in</p>\n\t\t\t<p>Rebound: {props.car.RRebound}</p>\n\t\t\t<p>Compression: {props.car.RCompression}</p>\n\t\t</div>\n\t);\n\n\tconst rightRear = () => (\n\t\t<div>\n\t\t\t<p>Toe : {props.car.RRToe} in</p>\n\t\t\t<p>Camber : {props.car.RRCamber}&#x00B0;</p>\n\t\t</div>\n\t);\n\treturn (\n\t\t// React.Frgment connect multiple components\n\t\t<React.Fragment>\n\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t{isLoading && <LoadingSpinner asOverlay />}\n\t\t\t{/* User image and car model*/}\n\t\t\t<div className=\"carItem\">\n\t\t\t\t<section id=\"header\" className=\"caritem-section-header\">\n\t\t\t\t\t<div className=\"header-container\">\n\t\t\t\t\t\t<div className=\"logo-container \">\n\t\t\t\t\t\t\t{owner && userAuthContext.userImage && (\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc={\n\t\t\t\t\t\t\t\t\t\t// process.env.REACT_APP_ASSET_URL +\n\t\t\t\t\t\t\t\t\t\t// `/${userAuthContext.userImage}`\n\t\t\t\t\t\t\t\t\t\tuserAuthContext.userImage\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\talt={props.car.model}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{(!owner || !userAuthContext.userImage) && (\n\t\t\t\t\t\t\t\t<div className=\"gingerman\">\n\t\t\t\t\t\t\t\t\t<i className=\"fad fa-gingerbread-man fa-4x\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"carname-container\">\n\t\t\t\t\t\t\t{`${props.car.userName}\\'s`} &nbsp;\n\t\t\t\t\t\t\t{props.car.model} {props.car.trimLevel}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t\t{/* Car info container */}\n\t\t\t\t<div className=\"caritem-section-container\">\n\t\t\t\t\t<div className=\"carinfo-container\">\n\t\t\t\t\t\t<div className=\"col-xs-12\">\n\t\t\t\t\t\t\t<div className=\"clearfix\">\n\t\t\t\t\t\t\t\t<h3>{props.car.year}</h3>\n\t\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t\t{props.car.make}&nbsp;{props.car.model}&nbsp;\n\t\t\t\t\t\t\t\t\t{props.car.trimLevel}\n\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t<h4>\n\t\t\t\t\t\t\t\t\t{props.car.tireBrand}&nbsp;{props.car.tireName}\n\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t\t<h4>\n\t\t\t\t\t\t\t\t\tFront:&nbsp;{props.car.tireFrontWidth}/\n\t\t\t\t\t\t\t\t\t{props.car.tireFrontRatio}-\n\t\t\t\t\t\t\t\t\t{props.car.tireFrontDiameter}\n\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t\t<h4>\n\t\t\t\t\t\t\t\t\tRear:&nbsp;{props.car.tireRearWidth}/\n\t\t\t\t\t\t\t\t\t{props.car.tireRearRatio}-\n\t\t\t\t\t\t\t\t\t{props.car.tireRearDiameter}\n\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"carimage-basic-container\">\n\t\t\t\t\t\t\t\t<div className=\"carimage-container\">\n\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\tsrc={\n\t\t\t\t\t\t\t\t\t\t\t// process.env.REACT_APP_ASSET_URL +\n\t\t\t\t\t\t\t\t\t\t\t// `/${props.car.image}`\n\t\t\t\t\t\t\t\t\t\t\tprops.car.image\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\talt={props.car.model}\n\t\t\t\t\t\t\t\t\t\tclassName=\"carimage-container-img\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"modifybutton-container\">\n\t\t\t\t\t\t\t\t{owner && (\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t// inverse={}\n\t\t\t\t\t\t\t\t\t\tto={`/users/cars/update/${props.car.id}`}\n\t\t\t\t\t\t\t\t\t\tsize=\"small-orange\">\n\t\t\t\t\t\t\t\t\t\tMODIFY\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"deletebutton-container\">\n\t\t\t\t\t\t\t\t{owner && (\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t// inverse={}\n\t\t\t\t\t\t\t\t\t\tonClick={activateHandler}\n\t\t\t\t\t\t\t\t\t\tsize={activeButtonClassName}>\n\t\t\t\t\t\t\t\t\t\t{activeButtonName}\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"note-container\">\n\t\t\t\t\t\t<h3>Note: </h3>\n\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\trows=\"8\"\n\t\t\t\t\t\t\tcols=\"45\"\n\t\t\t\t\t\t\tclassName=\"note-container_textarea\"\n\t\t\t\t\t\t\tdefaultValue={props.car.note}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{/* <div className=\"section-container theme\"> */}\n\t\t\t\t<div className=\"theme\">\n\t\t\t\t\t<table className=\"table table-color\">\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t{/* <tr>\n\t\t\t\t\t\t\t<th>Heading A</th>\n\t\t\t\t\t\t\t<th>Heading B</th>\n\t\t\t\t\t\t\t<th>Heading C</th>\n\t\t\t\t\t\t</tr> */}\n\t\t\t\t\t\t\t<tr className=\"table-tr\">\n\t\t\t\t\t\t\t\t<td className=\"table-corner-td\">&nbsp;</td>\n\t\t\t\t\t\t\t\t<td className=\"table-center-toptd\">\n\t\t\t\t\t\t\t\t\t{centerFront()}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td className=\"table-corner-td\">&nbsp;</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td className=\"table-side-td\">{leftFront()}</td>\n\t\t\t\t\t\t\t\t<td className=\"table-center-td\">&nbsp;</td>\n\t\t\t\t\t\t\t\t<td className=\"table-side-td\">{rightFront()}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td className=\"table-side-td\">{leftRear()}</td>\n\t\t\t\t\t\t\t\t<td className=\"table-center-td\">&nbsp;</td>\n\t\t\t\t\t\t\t\t<td className=\"table-side-td\">{rightRear()}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td className=\"table-corner-td\">&nbsp;</td>\n\t\t\t\t\t\t\t\t<td className=\"table-center-td\">{centerRear()}</td>\n\t\t\t\t\t\t\t\t<td className=\"table-corner-td\">&nbsp;</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t\t<div className=\"page-basic-container\">\n\t\t\t\t\t\t<div className=\"page-footer\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default CarItem;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/context/auth-context.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/stores/requests.js",[],{"ruleId":"891","severity":1,"message":"892","line":28,"column":7,"nodeType":"893","messageId":"894","endLine":28,"endColumn":12},{"ruleId":"895","replacedBy":"896"},{"ruleId":"897","replacedBy":"898"},{"ruleId":"891","severity":1,"message":"899","line":48,"column":9,"nodeType":"893","messageId":"894","endLine":48,"endColumn":24},{"ruleId":"891","severity":1,"message":"900","line":48,"column":26,"nodeType":"893","messageId":"894","endLine":48,"endColumn":44},{"ruleId":"891","severity":1,"message":"901","line":157,"column":7,"nodeType":"893","messageId":"894","endLine":157,"endColumn":21},{"ruleId":"891","severity":1,"message":"902","line":158,"column":7,"nodeType":"893","messageId":"894","endLine":158,"endColumn":22},{"ruleId":"903","severity":1,"message":"904","line":167,"column":5,"nodeType":"905","endLine":167,"endColumn":7,"suggestions":"906"},{"ruleId":"891","severity":1,"message":"907","line":3,"column":31,"nodeType":"893","messageId":"894","endLine":3,"endColumn":43},{"ruleId":"891","severity":1,"message":"901","line":95,"column":6,"nodeType":"893","messageId":"894","endLine":95,"endColumn":20},{"ruleId":"891","severity":1,"message":"902","line":96,"column":6,"nodeType":"893","messageId":"894","endLine":96,"endColumn":21},{"ruleId":"903","severity":1,"message":"908","line":113,"column":5,"nodeType":"905","endLine":113,"endColumn":7,"suggestions":"909"},{"ruleId":"891","severity":1,"message":"910","line":181,"column":3,"nodeType":"893","messageId":"894","endLine":181,"endColumn":25},{"ruleId":"891","severity":1,"message":"911","line":185,"column":8,"nodeType":"893","messageId":"894","endLine":185,"endColumn":29},{"ruleId":"891","severity":1,"message":"912","line":189,"column":8,"nodeType":"893","messageId":"894","endLine":189,"endColumn":15},{"ruleId":"895","replacedBy":"913"},{"ruleId":"897","replacedBy":"914"},{"ruleId":"903","severity":1,"message":"915","line":62,"column":5,"nodeType":"905","endLine":62,"endColumn":22,"suggestions":"916"},{"ruleId":"891","severity":1,"message":"912","line":197,"column":8,"nodeType":"893","messageId":"894","endLine":197,"endColumn":15},{"ruleId":"891","severity":1,"message":"901","line":225,"column":5,"nodeType":"893","messageId":"894","endLine":225,"endColumn":19},{"ruleId":"891","severity":1,"message":"902","line":226,"column":5,"nodeType":"893","messageId":"894","endLine":226,"endColumn":20},{"ruleId":"891","severity":1,"message":"917","line":10,"column":6,"nodeType":"893","messageId":"894","endLine":10,"endColumn":14},{"ruleId":"891","severity":1,"message":"918","line":12,"column":9,"nodeType":"893","messageId":"894","endLine":12,"endColumn":17},{"ruleId":"891","severity":1,"message":"919","line":12,"column":19,"nodeType":"893","messageId":"894","endLine":12,"endColumn":30},{"ruleId":"891","severity":1,"message":"920","line":13,"column":9,"nodeType":"893","messageId":"894","endLine":13,"endColumn":22},{"ruleId":"891","severity":1,"message":"921","line":13,"column":24,"nodeType":"893","messageId":"894","endLine":13,"endColumn":40},{"ruleId":"891","severity":1,"message":"922","line":14,"column":9,"nodeType":"893","messageId":"894","endLine":14,"endColumn":23},{"ruleId":"891","severity":1,"message":"923","line":14,"column":25,"nodeType":"893","messageId":"894","endLine":14,"endColumn":42},{"ruleId":"891","severity":1,"message":"924","line":15,"column":9,"nodeType":"893","messageId":"894","endLine":15,"endColumn":28},{"ruleId":"891","severity":1,"message":"925","line":15,"column":30,"nodeType":"893","messageId":"894","endLine":15,"endColumn":52},{"ruleId":"891","severity":1,"message":"926","line":18,"column":9,"nodeType":"893","messageId":"894","endLine":18,"endColumn":20},{"ruleId":"891","severity":1,"message":"927","line":18,"column":22,"nodeType":"893","messageId":"894","endLine":18,"endColumn":36},{"ruleId":"891","severity":1,"message":"928","line":19,"column":9,"nodeType":"893","messageId":"894","endLine":19,"endColumn":25},{"ruleId":"891","severity":1,"message":"929","line":19,"column":27,"nodeType":"893","messageId":"894","endLine":19,"endColumn":46},{"ruleId":"891","severity":1,"message":"930","line":1,"column":17,"nodeType":"893","messageId":"894","endLine":1,"endColumn":27},{"ruleId":"891","severity":1,"message":"931","line":7,"column":10,"nodeType":"893","messageId":"894","endLine":7,"endColumn":25},{"ruleId":"891","severity":1,"message":"901","line":64,"column":6,"nodeType":"893","messageId":"894","endLine":64,"endColumn":20},{"ruleId":"891","severity":1,"message":"902","line":65,"column":6,"nodeType":"893","messageId":"894","endLine":65,"endColumn":21},{"ruleId":"891","severity":1,"message":"932","line":107,"column":5,"nodeType":"893","messageId":"894","endLine":107,"endColumn":17},{"ruleId":"891","severity":1,"message":"901","line":108,"column":5,"nodeType":"893","messageId":"894","endLine":108,"endColumn":19},{"ruleId":"891","severity":1,"message":"902","line":109,"column":5,"nodeType":"893","messageId":"894","endLine":109,"endColumn":20},{"ruleId":"891","severity":1,"message":"901","line":27,"column":6,"nodeType":"893","messageId":"894","endLine":27,"endColumn":20},{"ruleId":"891","severity":1,"message":"902","line":28,"column":6,"nodeType":"893","messageId":"894","endLine":28,"endColumn":21},{"ruleId":"891","severity":1,"message":"933","line":21,"column":20,"nodeType":"893","messageId":"894","endLine":21,"endColumn":32},{"ruleId":"891","severity":1,"message":"901","line":59,"column":6,"nodeType":"893","messageId":"894","endLine":59,"endColumn":20},{"ruleId":"891","severity":1,"message":"902","line":60,"column":6,"nodeType":"893","messageId":"894","endLine":60,"endColumn":21},{"ruleId":"903","severity":1,"message":"934","line":81,"column":5,"nodeType":"905","endLine":81,"endColumn":7,"suggestions":"935"},{"ruleId":"891","severity":1,"message":"936","line":115,"column":9,"nodeType":"893","messageId":"894","endLine":115,"endColumn":19},{"ruleId":"891","severity":1,"message":"937","line":133,"column":9,"nodeType":"893","messageId":"894","endLine":133,"endColumn":19},{"ruleId":"903","severity":1,"message":"938","line":135,"column":8,"nodeType":"939","endLine":145,"endColumn":3,"suggestions":"940"},{"ruleId":"903","severity":1,"message":"941","line":168,"column":8,"nodeType":"939","endLine":178,"endColumn":3,"suggestions":"942"},{"ruleId":"903","severity":1,"message":"943","line":168,"column":8,"nodeType":"939","endLine":178,"endColumn":3,"suggestions":"944"},{"ruleId":"891","severity":1,"message":"945","line":180,"column":8,"nodeType":"893","messageId":"894","endLine":180,"endColumn":21},{"ruleId":"891","severity":1,"message":"946","line":209,"column":8,"nodeType":"893","messageId":"894","endLine":209,"endColumn":19},{"ruleId":"891","severity":1,"message":"947","line":220,"column":8,"nodeType":"893","messageId":"894","endLine":220,"endColumn":21},{"ruleId":"891","severity":1,"message":"932","line":360,"column":5,"nodeType":"893","messageId":"894","endLine":360,"endColumn":17},{"ruleId":"891","severity":1,"message":"901","line":361,"column":5,"nodeType":"893","messageId":"894","endLine":361,"endColumn":19},{"ruleId":"891","severity":1,"message":"902","line":362,"column":5,"nodeType":"893","messageId":"894","endLine":362,"endColumn":20},{"ruleId":"895","replacedBy":"948"},{"ruleId":"897","replacedBy":"949"},{"ruleId":"895","replacedBy":"950"},{"ruleId":"897","replacedBy":"951"},{"ruleId":"891","severity":1,"message":"952","line":2,"column":10,"nodeType":"893","messageId":"894","endLine":2,"endColumn":14},{"ruleId":"891","severity":1,"message":"953","line":20,"column":6,"nodeType":"893","messageId":"894","endLine":20,"endColumn":13},{"ruleId":"891","severity":1,"message":"954","line":21,"column":6,"nodeType":"893","messageId":"894","endLine":21,"endColumn":13},{"ruleId":"891","severity":1,"message":"955","line":22,"column":6,"nodeType":"893","messageId":"894","endLine":22,"endColumn":15},{"ruleId":"891","severity":1,"message":"956","line":23,"column":6,"nodeType":"893","messageId":"894","endLine":23,"endColumn":11},{"ruleId":"891","severity":1,"message":"957","line":24,"column":6,"nodeType":"893","messageId":"894","endLine":24,"endColumn":15},{"ruleId":"891","severity":1,"message":"958","line":25,"column":6,"nodeType":"893","messageId":"894","endLine":25,"endColumn":15},{"ruleId":"891","severity":1,"message":"936","line":26,"column":6,"nodeType":"893","messageId":"894","endLine":26,"endColumn":16},{"ruleId":"891","severity":1,"message":"959","line":30,"column":9,"nodeType":"893","messageId":"894","endLine":30,"endColumn":19},{"ruleId":"891","severity":1,"message":"960","line":30,"column":21,"nodeType":"893","messageId":"894","endLine":30,"endColumn":34},{"ruleId":"891","severity":1,"message":"961","line":34,"column":3,"nodeType":"893","messageId":"894","endLine":34,"endColumn":14},{"ruleId":"891","severity":1,"message":"962","line":41,"column":9,"nodeType":"893","messageId":"894","endLine":41,"endColumn":22},{"ruleId":"891","severity":1,"message":"963","line":41,"column":24,"nodeType":"893","messageId":"894","endLine":41,"endColumn":40},{"ruleId":"891","severity":1,"message":"964","line":44,"column":25,"nodeType":"893","messageId":"894","endLine":44,"endColumn":42},{"ruleId":"891","severity":1,"message":"965","line":74,"column":9,"nodeType":"893","messageId":"894","endLine":74,"endColumn":19},{"ruleId":"891","severity":1,"message":"966","line":83,"column":22,"nodeType":"893","messageId":"894","endLine":83,"endColumn":36},{"ruleId":"891","severity":1,"message":"967","line":118,"column":29,"nodeType":"893","messageId":"894","endLine":118,"endColumn":50},{"ruleId":"891","severity":1,"message":"965","line":130,"column":7,"nodeType":"893","messageId":"894","endLine":130,"endColumn":17},{"ruleId":"891","severity":1,"message":"968","line":19,"column":6,"nodeType":"893","messageId":"894","endLine":19,"endColumn":9},{"ruleId":"891","severity":1,"message":"969","line":24,"column":8,"nodeType":"893","messageId":"894","endLine":24,"endColumn":20},{"ruleId":"895","replacedBy":"970"},{"ruleId":"897","replacedBy":"971"},{"ruleId":"891","severity":1,"message":"972","line":121,"column":28,"nodeType":"893","messageId":"894","endLine":121,"endColumn":48},{"ruleId":"891","severity":1,"message":"973","line":27,"column":2,"nodeType":"893","messageId":"894","endLine":27,"endColumn":26},{"ruleId":"974","severity":1,"message":"975","line":293,"column":6,"nodeType":"976","messageId":"977","endLine":293,"endColumn":46},{"ruleId":"978","severity":1,"message":"979","line":354,"column":23,"nodeType":"980","messageId":"981","endLine":354,"endColumn":25},{"ruleId":"895","replacedBy":"982"},{"ruleId":"897","replacedBy":"983"},{"ruleId":"984","severity":1,"message":"985","line":84,"column":1,"nodeType":"986","endLine":132,"endColumn":2},{"ruleId":"891","severity":1,"message":"901","line":56,"column":6,"nodeType":"893","messageId":"894","endLine":56,"endColumn":20},{"ruleId":"891","severity":1,"message":"902","line":57,"column":6,"nodeType":"893","messageId":"894","endLine":57,"endColumn":21},{"ruleId":"891","severity":1,"message":"901","line":81,"column":5,"nodeType":"893","messageId":"894","endLine":81,"endColumn":19},{"ruleId":"891","severity":1,"message":"902","line":82,"column":5,"nodeType":"893","messageId":"894","endLine":82,"endColumn":20},{"ruleId":"891","severity":1,"message":"987","line":53,"column":3,"nodeType":"893","messageId":"894","endLine":53,"endColumn":13},{"ruleId":"891","severity":1,"message":"988","line":56,"column":24,"nodeType":"893","messageId":"894","endLine":56,"endColumn":40},{"ruleId":"891","severity":1,"message":"901","line":205,"column":5,"nodeType":"893","messageId":"894","endLine":205,"endColumn":19},{"ruleId":"891","severity":1,"message":"902","line":206,"column":5,"nodeType":"893","messageId":"894","endLine":206,"endColumn":20},{"ruleId":"891","severity":1,"message":"965","line":248,"column":9,"nodeType":"893","messageId":"894","endLine":248,"endColumn":19},{"ruleId":"891","severity":1,"message":"966","line":257,"column":22,"nodeType":"893","messageId":"894","endLine":257,"endColumn":36},{"ruleId":"891","severity":1,"message":"902","line":352,"column":6,"nodeType":"893","messageId":"894","endLine":352,"endColumn":21},{"ruleId":"891","severity":1,"message":"932","line":459,"column":5,"nodeType":"893","messageId":"894","endLine":459,"endColumn":17},{"ruleId":"891","severity":1,"message":"902","line":461,"column":5,"nodeType":"893","messageId":"894","endLine":461,"endColumn":20},{"ruleId":"891","severity":1,"message":"989","line":486,"column":9,"nodeType":"893","messageId":"894","endLine":486,"endColumn":26},{"ruleId":"891","severity":1,"message":"990","line":16,"column":3,"nodeType":"893","messageId":"894","endLine":16,"endColumn":12},{"ruleId":"891","severity":1,"message":"991","line":17,"column":3,"nodeType":"893","messageId":"894","endLine":17,"endColumn":8},{"ruleId":"891","severity":1,"message":"987","line":19,"column":3,"nodeType":"893","messageId":"894","endLine":19,"endColumn":13},{"ruleId":"891","severity":1,"message":"992","line":42,"column":9,"nodeType":"893","messageId":"894","endLine":42,"endColumn":17},{"ruleId":"891","severity":1,"message":"901","line":48,"column":5,"nodeType":"893","messageId":"894","endLine":48,"endColumn":19},{"ruleId":"891","severity":1,"message":"902","line":49,"column":5,"nodeType":"893","messageId":"894","endLine":49,"endColumn":20},{"ruleId":"993","severity":1,"message":"994","line":90,"column":8,"nodeType":"995","endLine":90,"endColumn":12},{"ruleId":"993","severity":1,"message":"994","line":117,"column":8,"nodeType":"995","endLine":117,"endColumn":12},{"ruleId":"993","severity":1,"message":"994","line":141,"column":8,"nodeType":"995","endLine":141,"endColumn":12},{"ruleId":"993","severity":1,"message":"994","line":166,"column":8,"nodeType":"995","endLine":166,"endColumn":12},{"ruleId":"895","replacedBy":"996"},{"ruleId":"897","replacedBy":"997"},{"ruleId":"891","severity":1,"message":"998","line":6,"column":10,"nodeType":"893","messageId":"894","endLine":6,"endColumn":19},{"ruleId":"891","severity":1,"message":"955","line":21,"column":9,"nodeType":"893","messageId":"894","endLine":21,"endColumn":18},{"ruleId":"891","severity":1,"message":"901","line":92,"column":7,"nodeType":"893","messageId":"894","endLine":92,"endColumn":21},{"ruleId":"891","severity":1,"message":"902","line":93,"column":7,"nodeType":"893","messageId":"894","endLine":93,"endColumn":22},{"ruleId":"891","severity":1,"message":"901","line":114,"column":7,"nodeType":"893","messageId":"894","endLine":114,"endColumn":21},{"ruleId":"891","severity":1,"message":"902","line":115,"column":7,"nodeType":"893","messageId":"894","endLine":115,"endColumn":22},{"ruleId":"891","severity":1,"message":"999","line":137,"column":4,"nodeType":"893","messageId":"894","endLine":137,"endColumn":11},{"ruleId":"903","severity":1,"message":"915","line":156,"column":5,"nodeType":"905","endLine":156,"endColumn":44,"suggestions":"1000"},{"ruleId":"903","severity":1,"message":"915","line":167,"column":5,"nodeType":"905","endLine":167,"endColumn":54,"suggestions":"1001"},{"ruleId":"895","replacedBy":"1002"},{"ruleId":"897","replacedBy":"1003"},{"ruleId":"895","replacedBy":"1004"},{"ruleId":"897","replacedBy":"1005"},{"ruleId":"891","severity":1,"message":"1006","line":102,"column":9,"nodeType":"893","messageId":"894","endLine":102,"endColumn":17},{"ruleId":"891","severity":1,"message":"1007","line":103,"column":9,"nodeType":"893","messageId":"894","endLine":103,"endColumn":18},{"ruleId":"891","severity":1,"message":"1008","line":104,"column":9,"nodeType":"893","messageId":"894","endLine":104,"endColumn":24},{"ruleId":"891","severity":1,"message":"1009","line":106,"column":9,"nodeType":"893","messageId":"894","endLine":106,"endColumn":21},{"ruleId":"891","severity":1,"message":"901","line":113,"column":6,"nodeType":"893","messageId":"894","endLine":113,"endColumn":20},{"ruleId":"891","severity":1,"message":"902","line":114,"column":6,"nodeType":"893","messageId":"894","endLine":114,"endColumn":21},{"ruleId":"903","severity":1,"message":"908","line":133,"column":5,"nodeType":"905","endLine":133,"endColumn":7,"suggestions":"1010"},{"ruleId":"891","severity":1,"message":"901","line":209,"column":5,"nodeType":"893","messageId":"894","endLine":209,"endColumn":19},{"ruleId":"891","severity":1,"message":"902","line":210,"column":5,"nodeType":"893","messageId":"894","endLine":210,"endColumn":20},{"ruleId":"891","severity":1,"message":"901","line":269,"column":5,"nodeType":"893","messageId":"894","endLine":269,"endColumn":19},{"ruleId":"891","severity":1,"message":"902","line":270,"column":5,"nodeType":"893","messageId":"894","endLine":270,"endColumn":20},{"ruleId":"891","severity":1,"message":"932","line":291,"column":5,"nodeType":"893","messageId":"894","endLine":291,"endColumn":17},{"ruleId":"891","severity":1,"message":"901","line":292,"column":5,"nodeType":"893","messageId":"894","endLine":292,"endColumn":19},{"ruleId":"891","severity":1,"message":"902","line":293,"column":5,"nodeType":"893","messageId":"894","endLine":293,"endColumn":20},{"ruleId":"891","severity":1,"message":"901","line":316,"column":5,"nodeType":"893","messageId":"894","endLine":316,"endColumn":19},{"ruleId":"891","severity":1,"message":"902","line":317,"column":5,"nodeType":"893","messageId":"894","endLine":317,"endColumn":20},{"ruleId":"891","severity":1,"message":"901","line":338,"column":5,"nodeType":"893","messageId":"894","endLine":338,"endColumn":19},{"ruleId":"891","severity":1,"message":"902","line":339,"column":5,"nodeType":"893","messageId":"894","endLine":339,"endColumn":20},{"ruleId":"1011","severity":1,"message":"1012","line":476,"column":10,"nodeType":"1013","endLine":476,"endColumn":25},{"ruleId":"891","severity":1,"message":"972","line":61,"column":28,"nodeType":"893","messageId":"894","endLine":61,"endColumn":48},{"ruleId":"891","severity":1,"message":"901","line":103,"column":5,"nodeType":"893","messageId":"894","endLine":103,"endColumn":19},{"ruleId":"891","severity":1,"message":"902","line":104,"column":5,"nodeType":"893","messageId":"894","endLine":104,"endColumn":20},{"ruleId":"891","severity":1,"message":"1014","line":7,"column":20,"nodeType":"893","messageId":"894","endLine":7,"endColumn":32},{"ruleId":"1015","severity":1,"message":"1016","line":245,"column":4,"nodeType":"1017","endLine":245,"endColumn":22},{"ruleId":"891","severity":1,"message":"1018","line":248,"column":9,"nodeType":"893","messageId":"894","endLine":248,"endColumn":21},{"ruleId":"891","severity":1,"message":"1019","line":252,"column":9,"nodeType":"893","messageId":"894","endLine":252,"endColumn":28},{"ruleId":"895","replacedBy":"1020"},{"ruleId":"897","replacedBy":"1021"},{"ruleId":"891","severity":1,"message":"1022","line":10,"column":10,"nodeType":"893","messageId":"894","endLine":10,"endColumn":26},{"ruleId":"891","severity":1,"message":"1023","line":11,"column":10,"nodeType":"893","messageId":"894","endLine":11,"endColumn":17},{"ruleId":"891","severity":1,"message":"1024","line":14,"column":10,"nodeType":"893","messageId":"894","endLine":14,"endColumn":13},{"ruleId":"891","severity":1,"message":"1025","line":332,"column":9,"nodeType":"893","messageId":"894","endLine":332,"endColumn":32},{"ruleId":"891","severity":1,"message":"1026","line":337,"column":9,"nodeType":"893","messageId":"894","endLine":337,"endColumn":36},{"ruleId":"891","severity":1,"message":"1027","line":344,"column":4,"nodeType":"893","messageId":"894","endLine":344,"endColumn":26},{"ruleId":"891","severity":1,"message":"1028","line":345,"column":4,"nodeType":"893","messageId":"894","endLine":345,"endColumn":24},{"ruleId":"978","severity":1,"message":"979","line":396,"column":39,"nodeType":"980","messageId":"981","endLine":396,"endColumn":41},{"ruleId":"891","severity":1,"message":"1029","line":119,"column":7,"nodeType":"893","messageId":"894","endLine":119,"endColumn":20},{"ruleId":"1015","severity":1,"message":"1016","line":151,"column":4,"nodeType":"1017","endLine":151,"endColumn":22},{"ruleId":"895","replacedBy":"1030"},{"ruleId":"897","replacedBy":"1031"},{"ruleId":"891","severity":1,"message":"901","line":121,"column":5,"nodeType":"893","messageId":"894","endLine":121,"endColumn":19},{"ruleId":"891","severity":1,"message":"902","line":122,"column":5,"nodeType":"893","messageId":"894","endLine":122,"endColumn":20},{"ruleId":"891","severity":1,"message":"901","line":157,"column":6,"nodeType":"893","messageId":"894","endLine":157,"endColumn":20},{"ruleId":"891","severity":1,"message":"902","line":158,"column":6,"nodeType":"893","messageId":"894","endLine":158,"endColumn":21},{"ruleId":"891","severity":1,"message":"901","line":39,"column":6,"nodeType":"893","messageId":"894","endLine":39,"endColumn":20},{"ruleId":"891","severity":1,"message":"902","line":40,"column":6,"nodeType":"893","messageId":"894","endLine":40,"endColumn":21},{"ruleId":"895","replacedBy":"1032"},{"ruleId":"897","replacedBy":"1033"},{"ruleId":"891","severity":1,"message":"901","line":110,"column":6,"nodeType":"893","messageId":"894","endLine":110,"endColumn":20},{"ruleId":"891","severity":1,"message":"902","line":111,"column":6,"nodeType":"893","messageId":"894","endLine":111,"endColumn":21},{"ruleId":"903","severity":1,"message":"1034","line":163,"column":5,"nodeType":"905","endLine":163,"endColumn":38,"suggestions":"1035"},{"ruleId":"891","severity":1,"message":"1036","line":4,"column":8,"nodeType":"893","messageId":"894","endLine":4,"endColumn":14},{"ruleId":"891","severity":1,"message":"1037","line":22,"column":9,"nodeType":"893","messageId":"894","endLine":22,"endColumn":20},{"ruleId":"891","severity":1,"message":"1038","line":22,"column":22,"nodeType":"893","messageId":"894","endLine":22,"endColumn":36},{"ruleId":"891","severity":1,"message":"1039","line":71,"column":8,"nodeType":"893","messageId":"894","endLine":71,"endColumn":27},{"ruleId":"891","severity":1,"message":"912","line":82,"column":8,"nodeType":"893","messageId":"894","endLine":82,"endColumn":15},{"ruleId":"891","severity":1,"message":"901","line":91,"column":5,"nodeType":"893","messageId":"894","endLine":91,"endColumn":19},{"ruleId":"891","severity":1,"message":"902","line":92,"column":5,"nodeType":"893","messageId":"894","endLine":92,"endColumn":20},{"ruleId":"1015","severity":1,"message":"1016","line":55,"column":7,"nodeType":"1017","endLine":55,"endColumn":17},{"ruleId":"1015","severity":1,"message":"1016","line":57,"column":7,"nodeType":"1017","endLine":57,"endColumn":29},{"ruleId":"1015","severity":1,"message":"1016","line":58,"column":7,"nodeType":"1017","endLine":58,"endColumn":29},{"ruleId":"1011","severity":1,"message":"1012","line":246,"column":171,"nodeType":"1013","endLine":248,"endColumn":13},{"ruleId":"891","severity":1,"message":"917","line":14,"column":9,"nodeType":"893","messageId":"894","endLine":14,"endColumn":17},{"ruleId":"891","severity":1,"message":"1040","line":17,"column":9,"nodeType":"893","messageId":"894","endLine":17,"endColumn":19},{"ruleId":"891","severity":1,"message":"901","line":40,"column":6,"nodeType":"893","messageId":"894","endLine":40,"endColumn":20},{"ruleId":"891","severity":1,"message":"902","line":41,"column":6,"nodeType":"893","messageId":"894","endLine":41,"endColumn":21},{"ruleId":"903","severity":1,"message":"1041","line":44,"column":8,"nodeType":"939","endLine":54,"endColumn":3},{"ruleId":"903","severity":1,"message":"1042","line":55,"column":8,"nodeType":"939","endLine":65,"endColumn":3,"suggestions":"1043"},{"ruleId":"903","severity":1,"message":"1044","line":55,"column":8,"nodeType":"939","endLine":65,"endColumn":3,"suggestions":"1045"},{"ruleId":"903","severity":1,"message":"1046","line":66,"column":8,"nodeType":"939","endLine":68,"endColumn":3},{"ruleId":"891","severity":1,"message":"1047","line":7,"column":8,"nodeType":"893","messageId":"894","endLine":7,"endColumn":27},{"ruleId":"891","severity":1,"message":"1048","line":11,"column":8,"nodeType":"893","messageId":"894","endLine":11,"endColumn":23},{"ruleId":"891","severity":1,"message":"1049","line":14,"column":10,"nodeType":"893","messageId":"894","endLine":14,"endColumn":18},{"ruleId":"903","severity":1,"message":"1050","line":46,"column":5,"nodeType":"905","endLine":46,"endColumn":23,"suggestions":"1051"},{"ruleId":"891","severity":1,"message":"1052","line":9,"column":8,"nodeType":"893","messageId":"894","endLine":9,"endColumn":21},{"ruleId":"891","severity":1,"message":"1053","line":15,"column":10,"nodeType":"893","messageId":"894","endLine":15,"endColumn":21},{"ruleId":"903","severity":1,"message":"1054","line":56,"column":10,"nodeType":"1017","endLine":56,"endColumn":27},{"ruleId":"891","severity":1,"message":"1055","line":73,"column":8,"nodeType":"893","messageId":"894","endLine":73,"endColumn":21},{"ruleId":"891","severity":1,"message":"901","line":104,"column":6,"nodeType":"893","messageId":"894","endLine":104,"endColumn":20},{"ruleId":"891","severity":1,"message":"902","line":105,"column":6,"nodeType":"893","messageId":"894","endLine":105,"endColumn":21},{"ruleId":"903","severity":1,"message":"1056","line":122,"column":5,"nodeType":"905","endLine":122,"endColumn":38,"suggestions":"1057"},{"ruleId":"891","severity":1,"message":"1058","line":124,"column":9,"nodeType":"893","messageId":"894","endLine":124,"endColumn":21},{"ruleId":"891","severity":1,"message":"901","line":130,"column":5,"nodeType":"893","messageId":"894","endLine":130,"endColumn":19},{"ruleId":"891","severity":1,"message":"902","line":131,"column":5,"nodeType":"893","messageId":"894","endLine":131,"endColumn":20},{"ruleId":"903","severity":1,"message":"1059","line":77,"column":8,"nodeType":"939","endLine":87,"endColumn":3},{"ruleId":"903","severity":1,"message":"1060","line":88,"column":8,"nodeType":"939","endLine":98,"endColumn":3},{"ruleId":"903","severity":1,"message":"1061","line":99,"column":8,"nodeType":"939","endLine":109,"endColumn":3,"suggestions":"1062"},{"ruleId":"903","severity":1,"message":"1063","line":99,"column":8,"nodeType":"939","endLine":109,"endColumn":3,"suggestions":"1064"},{"ruleId":"891","severity":1,"message":"998","line":9,"column":10,"nodeType":"893","messageId":"894","endLine":9,"endColumn":19},{"ruleId":"891","severity":1,"message":"901","line":77,"column":7,"nodeType":"893","messageId":"894","endLine":77,"endColumn":21},{"ruleId":"891","severity":1,"message":"902","line":78,"column":7,"nodeType":"893","messageId":"894","endLine":78,"endColumn":22},{"ruleId":"903","severity":1,"message":"1065","line":109,"column":5,"nodeType":"905","endLine":109,"endColumn":58,"suggestions":"1066"},{"ruleId":"891","severity":1,"message":"901","line":126,"column":6,"nodeType":"893","messageId":"894","endLine":126,"endColumn":20},{"ruleId":"891","severity":1,"message":"902","line":127,"column":6,"nodeType":"893","messageId":"894","endLine":127,"endColumn":21},{"ruleId":"903","severity":1,"message":"1056","line":144,"column":5,"nodeType":"905","endLine":144,"endColumn":35,"suggestions":"1067"},{"ruleId":"891","severity":1,"message":"901","line":158,"column":5,"nodeType":"893","messageId":"894","endLine":158,"endColumn":19},{"ruleId":"891","severity":1,"message":"902","line":159,"column":5,"nodeType":"893","messageId":"894","endLine":159,"endColumn":20},{"ruleId":"1011","severity":1,"message":"1012","line":363,"column":8,"nodeType":"1013","endLine":363,"endColumn":36},{"ruleId":"1011","severity":1,"message":"1012","line":387,"column":8,"nodeType":"1013","endLine":387,"endColumn":25},{"ruleId":"891","severity":1,"message":"998","line":2,"column":10,"nodeType":"893","messageId":"894","endLine":2,"endColumn":19},{"ruleId":"891","severity":1,"message":"901","line":90,"column":7,"nodeType":"893","messageId":"894","endLine":90,"endColumn":21},{"ruleId":"891","severity":1,"message":"902","line":91,"column":7,"nodeType":"893","messageId":"894","endLine":91,"endColumn":22},{"ruleId":"903","severity":1,"message":"1068","line":103,"column":5,"nodeType":"905","endLine":103,"endColumn":61,"suggestions":"1069"},{"ruleId":"891","severity":1,"message":"1070","line":1,"column":29,"nodeType":"893","messageId":"894","endLine":1,"endColumn":38},{"ruleId":"903","severity":1,"message":"1071","line":40,"column":10,"nodeType":"1017","endLine":40,"endColumn":27},{"ruleId":"891","severity":1,"message":"1072","line":60,"column":8,"nodeType":"893","messageId":"894","endLine":60,"endColumn":25},{"ruleId":"891","severity":1,"message":"1073","line":67,"column":8,"nodeType":"893","messageId":"894","endLine":67,"endColumn":24},{"ruleId":"891","severity":1,"message":"901","line":215,"column":5,"nodeType":"893","messageId":"894","endLine":215,"endColumn":19},{"ruleId":"891","severity":1,"message":"902","line":216,"column":5,"nodeType":"893","messageId":"894","endLine":216,"endColumn":20},{"ruleId":"891","severity":1,"message":"1074","line":268,"column":8,"nodeType":"893","messageId":"894","endLine":268,"endColumn":19},{"ruleId":"891","severity":1,"message":"1070","line":1,"column":17,"nodeType":"893","messageId":"894","endLine":1,"endColumn":26},{"ruleId":"891","severity":1,"message":"1075","line":1,"column":28,"nodeType":"893","messageId":"894","endLine":1,"endColumn":36},{"ruleId":"891","severity":1,"message":"1076","line":1138,"column":4,"nodeType":"893","messageId":"894","endLine":1138,"endColumn":14},{"ruleId":"978","severity":1,"message":"979","line":1225,"column":34,"nodeType":"980","messageId":"981","endLine":1225,"endColumn":36},{"ruleId":"891","severity":1,"message":"1077","line":1415,"column":20,"nodeType":"893","messageId":"894","endLine":1415,"endColumn":29},{"ruleId":"891","severity":1,"message":"901","line":92,"column":9,"nodeType":"893","messageId":"894","endLine":92,"endColumn":23},{"ruleId":"891","severity":1,"message":"902","line":93,"column":9,"nodeType":"893","messageId":"894","endLine":93,"endColumn":24},{"ruleId":"891","severity":1,"message":"901","line":113,"column":5,"nodeType":"893","messageId":"894","endLine":113,"endColumn":19},{"ruleId":"891","severity":1,"message":"902","line":114,"column":5,"nodeType":"893","messageId":"894","endLine":114,"endColumn":20},{"ruleId":"895","replacedBy":"1078"},{"ruleId":"897","replacedBy":"1079"},{"ruleId":"891","severity":1,"message":"901","line":52,"column":6,"nodeType":"893","messageId":"894","endLine":52,"endColumn":20},{"ruleId":"891","severity":1,"message":"902","line":53,"column":6,"nodeType":"893","messageId":"894","endLine":53,"endColumn":21},{"ruleId":"903","severity":1,"message":"915","line":84,"column":5,"nodeType":"905","endLine":84,"endColumn":50,"suggestions":"1080"},{"ruleId":"891","severity":1,"message":"901","line":32,"column":6,"nodeType":"893","messageId":"894","endLine":32,"endColumn":20},{"ruleId":"891","severity":1,"message":"902","line":33,"column":6,"nodeType":"893","messageId":"894","endLine":33,"endColumn":21},{"ruleId":"903","severity":1,"message":"1056","line":51,"column":5,"nodeType":"905","endLine":57,"endColumn":3,"suggestions":"1081"},{"ruleId":"891","severity":1,"message":"1082","line":10,"column":15,"nodeType":"893","messageId":"894","endLine":10,"endColumn":22},{"ruleId":"891","severity":1,"message":"1083","line":15,"column":25,"nodeType":"893","messageId":"894","endLine":15,"endColumn":42},{"ruleId":"891","severity":1,"message":"1084","line":20,"column":24,"nodeType":"893","messageId":"894","endLine":20,"endColumn":40},{"ruleId":"891","severity":1,"message":"1014","line":27,"column":20,"nodeType":"893","messageId":"894","endLine":27,"endColumn":32},{"ruleId":"891","severity":1,"message":"1085","line":33,"column":22,"nodeType":"893","messageId":"894","endLine":33,"endColumn":36},{"ruleId":"891","severity":1,"message":"1086","line":38,"column":20,"nodeType":"893","messageId":"894","endLine":38,"endColumn":32},{"ruleId":"891","severity":1,"message":"1087","line":43,"column":28,"nodeType":"893","messageId":"894","endLine":43,"endColumn":48},{"ruleId":"903","severity":1,"message":"1088","line":168,"column":5,"nodeType":"905","endLine":168,"endColumn":7,"suggestions":"1089"},{"ruleId":"903","severity":1,"message":"1090","line":180,"column":24,"nodeType":"893","endLine":180,"endColumn":35},{"ruleId":"984","severity":1,"message":"1091","line":1,"column":1,"nodeType":"986","endLine":1,"endColumn":33},{"ruleId":"891","severity":1,"message":"1092","line":16,"column":10,"nodeType":"893","messageId":"894","endLine":16,"endColumn":13},{"ruleId":"891","severity":1,"message":"901","line":90,"column":6,"nodeType":"893","messageId":"894","endLine":90,"endColumn":20},{"ruleId":"891","severity":1,"message":"902","line":91,"column":6,"nodeType":"893","messageId":"894","endLine":91,"endColumn":21},{"ruleId":"903","severity":1,"message":"1093","line":107,"column":19,"nodeType":"1017","endLine":107,"endColumn":48},{"ruleId":"903","severity":1,"message":"1094","line":113,"column":17,"nodeType":"1017","endLine":113,"endColumn":45},{"ruleId":"903","severity":1,"message":"1095","line":114,"column":25,"nodeType":"1017","endLine":114,"endColumn":55},{"ruleId":"891","severity":1,"message":"1096","line":183,"column":10,"nodeType":"893","messageId":"894","endLine":183,"endColumn":17},{"ruleId":"1097","severity":1,"message":"1098","line":186,"column":15,"nodeType":"893","messageId":"1099","endLine":186,"endColumn":16},{"ruleId":"903","severity":1,"message":"1090","line":245,"column":24,"nodeType":"893","endLine":245,"endColumn":35},{"ruleId":"891","severity":1,"message":"1100","line":11,"column":8,"nodeType":"893","messageId":"894","endLine":11,"endColumn":27},{"ruleId":"891","severity":1,"message":"1101","line":30,"column":27,"nodeType":"893","messageId":"894","endLine":30,"endColumn":46},{"ruleId":"891","severity":1,"message":"1102","line":33,"column":27,"nodeType":"893","messageId":"894","endLine":33,"endColumn":46},{"ruleId":"903","severity":1,"message":"1054","line":39,"column":10,"nodeType":"1017","endLine":39,"endColumn":27},{"ruleId":"891","severity":1,"message":"901","line":54,"column":6,"nodeType":"893","messageId":"894","endLine":54,"endColumn":20},{"ruleId":"891","severity":1,"message":"902","line":55,"column":6,"nodeType":"893","messageId":"894","endLine":55,"endColumn":21},{"ruleId":"903","severity":1,"message":"908","line":70,"column":5,"nodeType":"905","endLine":70,"endColumn":7,"suggestions":"1103"},{"ruleId":"891","severity":1,"message":"901","line":93,"column":5,"nodeType":"893","messageId":"894","endLine":93,"endColumn":19},{"ruleId":"891","severity":1,"message":"902","line":94,"column":5,"nodeType":"893","messageId":"894","endLine":94,"endColumn":20},{"ruleId":"903","severity":1,"message":"915","line":122,"column":5,"nodeType":"905","endLine":127,"endColumn":3,"suggestions":"1104"},{"ruleId":"891","severity":1,"message":"1105","line":26,"column":29,"nodeType":"893","messageId":"894","endLine":26,"endColumn":50},{"ruleId":"891","severity":1,"message":"1106","line":219,"column":9,"nodeType":"893","messageId":"894","endLine":219,"endColumn":28},{"ruleId":"903","severity":1,"message":"1107","line":273,"column":5,"nodeType":"905","endLine":278,"endColumn":3,"suggestions":"1108"},{"ruleId":"891","severity":1,"message":"901","line":51,"column":6,"nodeType":"893","messageId":"894","endLine":51,"endColumn":20},{"ruleId":"891","severity":1,"message":"902","line":52,"column":6,"nodeType":"893","messageId":"894","endLine":52,"endColumn":21},{"ruleId":"903","severity":1,"message":"1054","line":32,"column":10,"nodeType":"1017","endLine":32,"endColumn":27},{"ruleId":"891","severity":1,"message":"901","line":48,"column":6,"nodeType":"893","messageId":"894","endLine":48,"endColumn":20},{"ruleId":"891","severity":1,"message":"902","line":49,"column":6,"nodeType":"893","messageId":"894","endLine":49,"endColumn":21},{"ruleId":"903","severity":1,"message":"1109","line":77,"column":5,"nodeType":"905","endLine":77,"endColumn":59,"suggestions":"1110"},{"ruleId":"891","severity":1,"message":"1082","line":23,"column":15,"nodeType":"893","messageId":"894","endLine":23,"endColumn":22},{"ruleId":"891","severity":1,"message":"1014","line":31,"column":20,"nodeType":"893","messageId":"894","endLine":31,"endColumn":32},{"ruleId":"903","severity":1,"message":"1111","line":94,"column":5,"nodeType":"905","endLine":94,"endColumn":7,"suggestions":"1112"},{"ruleId":"903","severity":1,"message":"1113","line":123,"column":5,"nodeType":"905","endLine":123,"endColumn":7,"suggestions":"1114"},{"ruleId":"891","severity":1,"message":"901","line":149,"column":6,"nodeType":"893","messageId":"894","endLine":149,"endColumn":20},{"ruleId":"891","severity":1,"message":"902","line":150,"column":6,"nodeType":"893","messageId":"894","endLine":150,"endColumn":21},{"ruleId":"903","severity":1,"message":"1115","line":232,"column":5,"nodeType":"905","endLine":239,"endColumn":3,"suggestions":"1116"},{"ruleId":"891","severity":1,"message":"1117","line":241,"column":8,"nodeType":"893","messageId":"894","endLine":241,"endColumn":16},{"ruleId":"891","severity":1,"message":"1014","line":7,"column":20,"nodeType":"893","messageId":"894","endLine":7,"endColumn":32},{"ruleId":"895","replacedBy":"1118"},{"ruleId":"897","replacedBy":"1119"},{"ruleId":"891","severity":1,"message":"1120","line":4,"column":8,"nodeType":"893","messageId":"894","endLine":4,"endColumn":19},{"ruleId":"891","severity":1,"message":"1121","line":7,"column":10,"nodeType":"893","messageId":"894","endLine":7,"endColumn":22},{"ruleId":"978","severity":1,"message":"979","line":30,"column":18,"nodeType":"980","messageId":"981","endLine":30,"endColumn":20},{"ruleId":"891","severity":1,"message":"901","line":41,"column":6,"nodeType":"893","messageId":"894","endLine":41,"endColumn":20},{"ruleId":"891","severity":1,"message":"902","line":42,"column":6,"nodeType":"893","messageId":"894","endLine":42,"endColumn":21},{"ruleId":"903","severity":1,"message":"1122","line":61,"column":5,"nodeType":"905","endLine":61,"endColumn":37,"suggestions":"1123"},{"ruleId":"895","replacedBy":"1124"},{"ruleId":"897","replacedBy":"1125"},{"ruleId":"891","severity":1,"message":"1126","line":8,"column":10,"nodeType":"893","messageId":"894","endLine":8,"endColumn":20},{"ruleId":"891","severity":1,"message":"1127","line":18,"column":7,"nodeType":"893","messageId":"894","endLine":18,"endColumn":11},{"ruleId":"891","severity":1,"message":"1128","line":19,"column":7,"nodeType":"893","messageId":"894","endLine":19,"endColumn":13},{"ruleId":"891","severity":1,"message":"1129","line":20,"column":7,"nodeType":"893","messageId":"894","endLine":20,"endColumn":21},{"ruleId":"891","severity":1,"message":"1130","line":21,"column":7,"nodeType":"893","messageId":"894","endLine":21,"endColumn":15},{"ruleId":"891","severity":1,"message":"1082","line":27,"column":15,"nodeType":"893","messageId":"894","endLine":27,"endColumn":22},{"ruleId":"891","severity":1,"message":"1014","line":35,"column":20,"nodeType":"893","messageId":"894","endLine":35,"endColumn":32},{"ruleId":"903","severity":1,"message":"1111","line":99,"column":5,"nodeType":"905","endLine":99,"endColumn":7,"suggestions":"1131"},{"ruleId":"903","severity":1,"message":"1113","line":124,"column":5,"nodeType":"905","endLine":124,"endColumn":7,"suggestions":"1132"},{"ruleId":"891","severity":1,"message":"1133","line":126,"column":28,"nodeType":"893","messageId":"894","endLine":126,"endColumn":48},{"ruleId":"891","severity":1,"message":"901","line":151,"column":6,"nodeType":"893","messageId":"894","endLine":151,"endColumn":20},{"ruleId":"891","severity":1,"message":"902","line":152,"column":6,"nodeType":"893","messageId":"894","endLine":152,"endColumn":21},{"ruleId":"903","severity":1,"message":"1115","line":192,"column":5,"nodeType":"905","endLine":199,"endColumn":3,"suggestions":"1134"},{"ruleId":"891","severity":1,"message":"1014","line":7,"column":20,"nodeType":"893","messageId":"894","endLine":7,"endColumn":32},{"ruleId":"891","severity":1,"message":"1070","line":1,"column":17,"nodeType":"893","messageId":"894","endLine":1,"endColumn":26},{"ruleId":"891","severity":1,"message":"1135","line":12,"column":8,"nodeType":"893","messageId":"894","endLine":12,"endColumn":24},{"ruleId":"891","severity":1,"message":"1070","line":1,"column":39,"nodeType":"893","messageId":"894","endLine":1,"endColumn":48},{"ruleId":"891","severity":1,"message":"1136","line":4,"column":2,"nodeType":"893","messageId":"894","endLine":4,"endColumn":13},{"ruleId":"891","severity":1,"message":"1137","line":5,"column":2,"nodeType":"893","messageId":"894","endLine":5,"endColumn":13},{"ruleId":"891","severity":1,"message":"1138","line":29,"column":9,"nodeType":"893","messageId":"894","endLine":29,"endColumn":21},{"ruleId":"891","severity":1,"message":"1139","line":29,"column":23,"nodeType":"893","messageId":"894","endLine":29,"endColumn":38},{"ruleId":"891","severity":1,"message":"1140","line":30,"column":9,"nodeType":"893","messageId":"894","endLine":30,"endColumn":22},{"ruleId":"891","severity":1,"message":"1141","line":30,"column":24,"nodeType":"893","messageId":"894","endLine":30,"endColumn":40},{"ruleId":"891","severity":1,"message":"901","line":44,"column":4,"nodeType":"893","messageId":"894","endLine":44,"endColumn":18},{"ruleId":"891","severity":1,"message":"902","line":45,"column":4,"nodeType":"893","messageId":"894","endLine":45,"endColumn":19},{"ruleId":"1142","severity":1,"message":"1143","line":70,"column":4,"nodeType":"893","messageId":"1144","endLine":70,"endColumn":9},{"ruleId":"891","severity":1,"message":"901","line":77,"column":5,"nodeType":"893","messageId":"894","endLine":77,"endColumn":19},{"ruleId":"891","severity":1,"message":"902","line":78,"column":5,"nodeType":"893","messageId":"894","endLine":78,"endColumn":20},{"ruleId":"891","severity":1,"message":"998","line":2,"column":10,"nodeType":"893","messageId":"894","endLine":2,"endColumn":19},{"ruleId":"891","severity":1,"message":"1145","line":46,"column":9,"nodeType":"893","messageId":"894","endLine":46,"endColumn":18},{"ruleId":"891","severity":1,"message":"1146","line":47,"column":8,"nodeType":"893","messageId":"894","endLine":47,"endColumn":24},{"ruleId":"891","severity":1,"message":"1147","line":48,"column":8,"nodeType":"893","messageId":"894","endLine":48,"endColumn":25},{"ruleId":"891","severity":1,"message":"1148","line":70,"column":8,"nodeType":"893","messageId":"894","endLine":70,"endColumn":23},{"ruleId":"1149","severity":1,"message":"1150","line":154,"column":31,"nodeType":"1151","messageId":"1152","endLine":154,"endColumn":32,"suggestions":"1153"},"no-unused-vars","'Clubs' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["1154"],"no-negated-in-lhs",["1155"],"'loadedEventName' is assigned a value but never used.","'setLoadedEventName' is assigned a value but never used.","'responseStatus' is assigned a value but never used.","'responseMessage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'clubAuthContext.clubId', 'clubAuthContext.clubToken', 'clubId', 'eId', 'entryReportManager', 'paymentCenter', 'refundCenter', and 'sendRequest'. Either include them or remove the dependency array.","ArrayExpression",["1156"],"'ErrorMessage' is defined but never used.","React Hook useEffect has missing dependencies: 'clubAuthContext.clubToken', 'clubId', and 'sendRequest'. Either include them or remove the dependency array.",["1157"],"'capDistributionClicked' is assigned a value but never used.","'togglecapDistribution' is assigned a value but never used.","'history' is assigned a value but never used.",["1154"],["1155"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1158"],"'clubName' is assigned a value but never used.","'clubInfo' is assigned a value but never used.","'setClubInfo' is assigned a value but never used.","'clubInfoClass' is assigned a value but never used.","'setClubInfoClass' is assigned a value but never used.","'accountManager' is assigned a value but never used.","'setaccountManager' is assigned a value but never used.","'accountManagerClass' is assigned a value but never used.","'setaccountManagerClass' is assigned a value but never used.","'teamManager' is assigned a value but never used.","'setteamManager' is assigned a value but never used.","'teamManagerClass' is assigned a value but never used.","'setteamManagerClass' is assigned a value but never used.","'useContext' is defined but never used.","'ClubAuthContext' is defined but never used.","'responseData' is assigned a value but never used.","'setRegClosed' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'eventId', 'sendRequest', and 'userAuthContext.userToken'. Either include them or remove the dependency array.",["1159"],"'formAnswer' is assigned a value but never used.","'percentage' is assigned a value but never used.","The 'carSelectorClickHandler' function makes the dependencies of useEffect Hook (at line 197) change on every render. To fix this, wrap the definition of 'carSelectorClickHandler' in its own useCallback() Hook.","VariableDeclarator",["1160"],"The 'submitClickHandler' function makes the dependencies of useEffect Hook (at line 197) change on every render. To fix this, wrap the definition of 'submitClickHandler' in its own useCallback() Hook.",["1161"],"The 'submitClickHandler' function makes the dependencies of useEffect Hook (at line 218) change on every render. To fix this, wrap the definition of 'submitClickHandler' in its own useCallback() Hook.",["1162"],"'finishHandler' is assigned a value but never used.","'formHandler' is assigned a value but never used.","'getFormAnswer' is assigned a value but never used.",["1154"],["1155"],["1154"],["1155"],"'Link' is defined but never used.","'entryId' is assigned a value but never used.","'eventId' is assigned a value but never used.","'eventName' is assigned a value but never used.","'carId' is assigned a value but never used.","'carNumber' is assigned a value but never used.","'raceClass' is assigned a value but never used.","'totalPrice' is assigned a value but never used.","'setTotalPrice' is assigned a value but never used.","'sendRequest' is assigned a value but never used.","'statusMessage' is assigned a value but never used.","'setStatusMessage' is assigned a value but never used.","'setContinueStatus' is assigned a value but never used.","'disclaimer' is assigned a value but never used.","'setOKLeavePage' is assigned a value but never used.","'setValidateDisclaimer' is assigned a value but never used.","'cid' is assigned a value but never used.","'isInsideForm' is assigned a value but never used.",["1154"],["1155"],"'setValidateCarNumber' is assigned a value but never used.","'MultipleRadioButtonGroup' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["1154"],["1155"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'clearError' is assigned a value but never used.","'setStripePromise' is assigned a value but never used.","'submitButtonClass' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'error' is assigned a value but never used.","'newEntry' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement",["1154"],["1155"],"'useParams' is defined but never used.","'mounted' is assigned a value but never used.",["1163"],["1164"],["1154"],["1155"],["1154"],["1155"],"'totalCap' is assigned a value but never used.","'numGroups' is assigned a value but never used.","'capDistribution' is assigned a value but never used.","'privateEvent' is assigned a value but never used.",["1165"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'setEventName' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'this_checked' is assigned a value but never used.","'this_checked_inline' is assigned a value but never used.",["1154"],["1155"],"'couldStartTrivia' is defined but never used.","'connect' is defined but never used.","'get' is defined but never used.","'this_checked_page_break' is assigned a value but never used.","'this_checked_alternate_form' is assigned a value but never used.","'canHavePageBreakBefore' is assigned a value but never used.","'canHaveAlternateForm' is assigned a value but never used.","'optionsLength' is assigned a value but never used.",["1154"],["1155"],["1154"],["1155"],"React Hook useEffect has a missing dependency: 'userAuthContext.userToken'. Either include it or remove the dependency array.",["1166"],"'moment' is defined but never used.","'initialized' is assigned a value but never used.","'setInitialized' is assigned a value but never used.","'updateEventFormData' is assigned a value but never used.","'imageValid' is assigned a value but never used.","The 'formBuilderClickHandler' function makes the dependencies of useEffect Hook (at line 104) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'formBuilderClickHandler' in its own useCallback() Hook.","The 'registrationClickHandler' function makes the dependencies of useEffect Hook (at line 117) change on every render. To fix this, wrap the definition of 'registrationClickHandler' in its own useCallback() Hook.",["1167"],"The 'registrationClickHandler' function makes the dependencies of useEffect Hook (at line 130) change on every render. To fix this, wrap the definition of 'registrationClickHandler' in its own useCallback() Hook.",["1168"],"The 'saveClickHandler' function makes the dependencies of useEffect Hook (at line 142) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'saveClickHandler' in its own useCallback() Hook.","'RedirectExternalURL' is defined but never used.","'ClubAuthConetxt' is defined but never used.","'Redirect' is defined but never used.","React Hook useEffect has missing dependencies: 'clubAuthContext' and 'history'. Either include them or remove the dependency array.",["1169"],"'ImageUploader' is defined but never used.","'FormContext' is defined but never used.","Assignments to the 'path' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'validateEmail' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'clubAuthContext.clubToken' and 'sendRequest'. Either include them or remove the dependency array.",["1170"],"'verification' is assigned a value but never used.","The 'classificationClickHandler' function makes the dependencies of useEffect Hook (at line 136) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'classificationClickHandler' in its own useCallback() Hook.","The 'formClickHandler' function makes the dependencies of useEffect Hook (at line 151) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'formClickHandler' in its own useCallback() Hook.","The 'submitClickHandler' function makes the dependencies of useEffect Hook (at line 176) change on every render. To fix this, wrap the definition of 'submitClickHandler' in its own useCallback() Hook.",["1171"],"The 'submitClickHandler' function makes the dependencies of useEffect Hook (at line 193) change on every render. To fix this, wrap the definition of 'submitClickHandler' in its own useCallback() Hook.",["1172"],"React Hook useEffect has a missing dependency: 'carSelector'. Either include it or remove the dependency array.",["1173"],["1174"],"React Hook useEffect has missing dependencies: 'clubAuthContext.clubToken', 'ownerClubEvent', and 'refundCenter'. Either include them or remove the dependency array.",["1175"],"'useEffect' is defined but never used.","Assignments to the 'path' variable from inside React Hook React.useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useEffect.","'openCourseHandler' is assigned a value but never used.","'openImageHandler' is assigned a value but never used.","'backHandler' is assigned a value but never used.","'useState' is defined but never used.","'classNames' is assigned a value but never used.","'optionKey' is assigned a value but never used.",["1154"],["1155"],["1176"],["1177"],"'setDays' is assigned a value but never used.","'setEventEntryList' is assigned a value but never used.","'setEventWaitlist' is assigned a value but never used.","'setRaceClasses' is assigned a value but never used.","'setRunGroups' is assigned a value but never used.","'setWorkerAssignments' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'days', 'eventEntryList', 'eventWaitlist', 'raceClasses', 'runGroups', and 'workerAssignments'. Either include them or remove the dependency array.",["1178"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","Assign object to a variable before exporting as module default","'set' is defined but never used.","Assignments to the 'raceClasses' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'runGroups' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'workerAssignments' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'entries' is assigned a value but never used.","no-redeclare","'j' is already defined.","redeclared","'STRIPE_VERIFICATION' is defined but never used.","'setStripeButtonText' is assigned a value but never used.","'setStripeConnectURL' is assigned a value but never used.",["1179"],["1180"],"'setRegistrationClosed' is assigned a value but never used.","'userOnGroupWaitlist' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'waitlistMSG'. Either include it or remove the dependency array.",["1181"],"React Hook useEffect has a missing dependency: 'clubAuthContext.clubToken'. Either include it or remove the dependency array.",["1182"],"React Hook useEffect has missing dependencies: 'days' and 'eventEntryList'. Either include them or remove the dependency array.",["1183"],"React Hook useCallback has a missing dependency: 'init'. Either include it or remove the dependency array.",["1184"],"React Hook useEffect has missing dependencies: 'clubAuthContext.clubToken', 'days', and 'entryListArray'. Either include them or remove the dependency array. You can also do a functional update 'setEntryListArray(e => ...)' if you only need 'entryListArray' in the 'setEntryListArray' call.",["1185"],"'getError' is assigned a value but never used.",["1154"],["1155"],"'PromptModal' is defined but never used.","'TramOutlined' is defined but never used.","React Hook useEffect has missing dependencies: 'garage' and 'userAuthContext.userToken'. Either include them or remove the dependency array.",["1186"],["1154"],["1155"],"'loadStripe' is defined but never used.","'PAID' is assigned a value but never used.","'UNPAID' is assigned a value but never used.","'AUTHENTICATION' is assigned a value but never used.","'DECLINED' is assigned a value but never used.",["1187"],["1188"],"'setRefundStatusError' is assigned a value but never used.",["1189"],"'getPaymentStatus' is assigned a value but never used.","'useElements' is defined but never used.","'CardElement' is defined but never used.","'clientSecret' is assigned a value but never used.","'setClientSecret' is assigned a value but never used.","'setupIntentId' is assigned a value but never used.","'setSetupIntentId' is assigned a value but never used.","no-const-assign","'error' is constant.","const","'showModal' is assigned a value but never used.","'openModalHandler' is assigned a value but never used.","'closeModalHandler' is assigned a value but never used.","'carImageElement' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\'.","TemplateElement","unnecessaryEscape",["1190","1191"],"no-global-assign","no-unsafe-negation",{"desc":"1192","fix":"1193"},{"desc":"1194","fix":"1195"},{"desc":"1196","fix":"1197"},{"desc":"1198","fix":"1199"},{"desc":"1200","fix":"1201"},{"desc":"1202","fix":"1203"},{"desc":"1202","fix":"1204"},{"desc":"1205","fix":"1206"},{"desc":"1207","fix":"1208"},{"desc":"1194","fix":"1209"},{"desc":"1210","fix":"1211"},{"desc":"1212","fix":"1213"},{"desc":"1212","fix":"1214"},{"desc":"1215","fix":"1216"},{"desc":"1217","fix":"1218"},{"desc":"1202","fix":"1219"},{"desc":"1202","fix":"1220"},{"desc":"1221","fix":"1222"},{"desc":"1223","fix":"1224"},{"desc":"1225","fix":"1226"},{"desc":"1227","fix":"1228"},{"desc":"1229","fix":"1230"},{"desc":"1231","fix":"1232"},{"desc":"1194","fix":"1233"},{"desc":"1234","fix":"1235"},{"desc":"1236","fix":"1237"},{"desc":"1238","fix":"1239"},{"desc":"1240","fix":"1241"},{"desc":"1242","fix":"1243"},{"desc":"1244","fix":"1245"},{"desc":"1246","fix":"1247"},{"desc":"1240","fix":"1248"},{"desc":"1242","fix":"1249"},{"desc":"1250","fix":"1251"},{"messageId":"1252","fix":"1253","desc":"1254"},{"messageId":"1255","fix":"1256","desc":"1257"},"Update the dependencies array to be: [clubAuthContext.clubId, clubAuthContext.clubToken, clubId, eId, entryReportManager, paymentCenter, refundCenter, sendRequest]",{"range":"1258","text":"1259"},"Update the dependencies array to be: [clubAuthContext.clubToken, clubId, sendRequest]",{"range":"1260","text":"1261"},"Update the dependencies array to be: [isMultiDayEvent, props]",{"range":"1262","text":"1263"},"Update the dependencies array to be: [eventId, sendRequest, userAuthContext.userToken]",{"range":"1264","text":"1265"},"Wrap the definition of 'carSelectorClickHandler' in its own useCallback() Hook.",{"range":"1266","text":"1267"},"Wrap the definition of 'submitClickHandler' in its own useCallback() Hook.",{"range":"1268","text":"1269"},{"range":"1270","text":"1269"},"Update the dependencies array to be: [submittedEntry, editingMode, newEntry, props]",{"range":"1271","text":"1272"},"Update the dependencies array to be: [formAnswer, props.returnFormAnswer, editingMode, props]",{"range":"1273","text":"1274"},{"range":"1275","text":"1261"},"Update the dependencies array to be: [sendRequest, carId, initialized, userAuthContext.userToken]",{"range":"1276","text":"1277"},"Wrap the definition of 'registrationClickHandler' in its own useCallback() Hook.",{"range":"1278","text":"1279"},{"range":"1280","text":"1279"},"Update the dependencies array to be: [clubAuthContext, history, stripeConnectURL]",{"range":"1281","text":"1282"},"Update the dependencies array to be: [clubAuthContext.clubToken, clubId, sendRequest, setLoadedClubCredential]",{"range":"1283","text":"1284"},{"range":"1285","text":"1286"},{"range":"1287","text":"1286"},"Update the dependencies array to be: [sendRequest, userId, userAuthContext, setLoadedCars, carSelector]",{"range":"1288","text":"1289"},"Update the dependencies array to be: [clubAuthContext.clubToken, clubId, sendRequest, setLoadedClubProfile]",{"range":"1290","text":"1291"},"Update the dependencies array to be: [sendRequest, clubId, entryReportManager, paymentCenter, ownerClubEvent, refundCenter, clubAuthContext.clubToken]",{"range":"1292","text":"1293"},"Update the dependencies array to be: [props, props.getStripeSetupIntentId, setupIntentId]",{"range":"1294","text":"1295"},"Update the dependencies array to be: [clubId, setLoadedProfileImage, setLoadedDescription, setLoadedSchedule, setLoadedImage, sendRequest, clubAuthContext.clubToken]",{"range":"1296","text":"1297"},"Update the dependencies array to be: [days, eventEntryList, eventWaitlist, raceClasses, runGroups, workerAssignments]",{"range":"1298","text":"1299"},{"range":"1300","text":"1261"},"Update the dependencies array to be: [stripeConnectURL, props.getStripeConnectURL, clubAuthContext, history, props]",{"range":"1301","text":"1302"},"Update the dependencies array to be: [userAuthContext.userId, eventId, setUserRegisteredEvent, setButtonName, waitlistMSG]",{"range":"1303","text":"1304"},"Update the dependencies array to be: [setStripeReceived, setStripeConnectStat, sendRequest, clubAuthContext.clubToken]",{"range":"1305","text":"1306"},"Update the dependencies array to be: [days, eventEntryList]",{"range":"1307","text":"1308"},"Update the dependencies array to be: [init]",{"range":"1309","text":"1310"},"Update the dependencies array to be: [daySelection, email, paymentStatus, eventEntryList, sendRequest, setEntryListArray, entryListArray, clubAuthContext.clubToken, days]",{"range":"1311","text":"1312"},"Update the dependencies array to be: [sendRequest, cId, setLoadedCar, garage, userAuthContext.userToken]",{"range":"1313","text":"1314"},{"range":"1315","text":"1308"},{"range":"1316","text":"1310"},"Update the dependencies array to be: [daySelection, email, refundFee, eventEntryList, sendRequest, setEntryListArray, entryListArray, clubAuthContext.clubToken, days]",{"range":"1317","text":"1318"},"removeEscape",{"range":"1319","text":"1320"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1321","text":"1322"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[5660,5662],"[clubAuthContext.clubId, clubAuthContext.clubToken, clubId, eId, entryReportManager, paymentCenter, refundCenter, sendRequest]",[3877,3879],"[clubAuthContext.clubToken, clubId, sendRequest]",[2308,2325],"[isMultiDayEvent, props]",[2790,2792],"[eventId, sendRequest, userAuthContext.userToken]",[4456,4765],"useCallback(() => {\n\t\tsetCarSelector(true);\n\t\tsetCarSelectorClass('editeventmanager-orange');\n\t\tsetClassification(false);\n\t\tsetClassificationClass('editeventmanager-grey');\n\t\tsetFform(false);\n\t\tsetFformClass('editeventmanager-grey');\n\t\tsetSubmit(false);\n\t\tsetSubmitClass('editeventmanager-grey');\n\t\tsetPercentage('0');\n\t})",[5481,5791],"useCallback(() => {\n\t\tsetCarSelector(false);\n\t\tsetCarSelectorClass('editeventmanager-grey');\n\t\tsetClassification(false);\n\t\tsetClassificationClass('editeventmanager-grey');\n\t\tsetFform(false);\n\t\tsetFformClass('editeventmanager-grey');\n\t\tsetSubmit(true);\n\t\tsetSubmitClass('editeventmanager-orange');\n\t\tsetPercentage('75');\n\t})",[5481,5791],[4659,4698],"[submittedEntry, editingMode, newEntry, props]",[4897,4946],"[formAnswer, props.returnFormAnswer, editingMode, props]",[4068,4070],[5719,5752],"[sendRequest, carId, initialized, userAuthContext.userToken]",[1827,2085],"useCallback(() => {\n\t\tsetEventInfo(false);\n\t\tsetEventInfoClass('li-tab');\n\t\tsetPhoto(false);\n\t\tsetPhotoClass('li-tab');\n\t\tsetFormBuilder(false);\n\t\tsetFormBuilderClass('li-tab');\n\t\tsetRegistration(true);\n\t\tsetRegistrationClass('li-tab_orange');\n\t\tsetPercentage('100');\n\t})",[1827,2085],[1587,1605],"[clubAuthContext, history, stripeConnectURL]",[3689,3722],"[clubAuthContext.clubToken, clubId, sendRequest, setLoadedClubCredential]",[3230,3486],"useCallback(() => {\n\t\tsetCarSelector(false);\n\t\tsetCarSelectorClass('li-tab');\n\t\tsetClassification(false);\n\t\tsetClassificationClass('li-tab');\n\t\tsetFform(false);\n\t\tsetFformClass('li-tab');\n\t\tsetSubmit(true);\n\t\tsetSubmitClass('li-tab_orange');\n\t\tsetPercentage('100');\n\t})",[3230,3486],[3692,3745],"[sendRequest, userId, userAuthContext, setLoadedCars, carSelector]",[3918,3948],"[clubAuthContext.clubToken, clubId, sendRequest, setLoadedClubProfile]",[3028,3084],"[sendRequest, clubId, entryReportManager, paymentCenter, ownerClubEvent, refundCenter, clubAuthContext.clubToken]",[2464,2509],"[props, props.getStripeSetupIntentId, setupIntentId]",[1617,1718],"[clubId, setLoadedProfileImage, setLoadedDescription, setLoadedSchedule, setLoadedImage, sendRequest, clubAuthContext.clubToken]",[4851,4853],"[days, eventEntryList, eventWaitlist, raceClasses, runGroups, workerAssignments]",[2228,2230],[3505,3587],"[stripeConnectURL, props.getStripeConnectURL, clubAuthContext, history, props]",[8137,8220],"[userAuthContext.userId, eventId, setUserRegisteredEvent, setButtonName, waitlistMSG]",[2338,2392],"[setStripeReceived, setStripeConnectStat, sendRequest, clubAuthContext.clubToken]",[2876,2878],"[days, eventEntryList]",[3967,3969],"[init]",[7027,7126],"[daySelection, email, paymentStatus, eventEntryList, sendRequest, setEntryListArray, entryListArray, clubAuthContext.clubToken, days]",[1638,1670],"[sendRequest, cId, setLoadedCar, garage, userAuthContext.userToken]",[2985,2987],[3927,3929],[5868,5963],"[daySelection, email, refundFee, eventEntryList, sendRequest, setEntryListArray, entryListArray, clubAuthContext.clubToken, days]",[4187,4188],"",[4187,4187],"\\"]