[{"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/App.js":"1","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/UIElements/LoadingSpinner.js":"2","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/pages/Event.js":"3","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/pages/EventRegistration.js":"4","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/pages/NewEvent.js":"5","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/ClubManager.js":"6","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/RegistrationManager.js":"7","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/ClubProfileManager.js":"8","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/ClubPhotos.js":"9","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubs/pages/Clubs.js":"10","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/entryDashboard/pages/EditEntryManager.js":"11","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/cars/pages/NewCar.js":"12","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/hooks/clubLoginValidation-hook.js":"13","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/components/EditEventItem.js":"14","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/entryDashboard/pages/EventWaiver.js":"15","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/Navigation/NavLinks.js":"16","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/entryDashboard/pages/Classification.js":"17","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/UIElements/Map.js":"18","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubs/components/ClubItem.js":"19","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/form.jsx":"20","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/toolbar-draggable-item.jsx":"21","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/sortable-element.jsx":"22","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/ClubAccount.js":"23","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/entryDashboard/pages/SubmitEntry.js":"24","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/users/components/UserCarsItem.js":"25","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/pages/EventForm.js":"26","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/context/form-context.js":"27","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/UIElements/Card.js":"28","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/pages/UpdateEventRegistration.js":"29","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/FormElements/ImageUploader.js":"30","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/entryDashboard/pages/EditClassification.js":"31","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/events/components/EventsItem.js":"32","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/EntryReportManager.js":"33","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/sortable-form-elements.jsx":"34","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/dynamic-option-group.jsx":"35","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/utils/error.js":"36","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/hooks/userLoginValidation-hook.js":"37","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/events/components/EventsList.js":"38","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/components/EntryFormOptions.js":"39","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/index.jsx":"40","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/preview.jsx":"41","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/form-elements-edit.jsx":"42","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/dynamic-option-list.jsx":"43","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/hooks/userAuth-hook.js":"44","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/pages/EventPhotos.js":"45","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/components/FormBuilder.js":"46","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/pages/ClubDashboardToolbar.js":"47","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/EventManager.js":"48","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/ViewEventSelector.js":"49","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/MaterialTable.js":"50","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/EditEventSelector.js":"51","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/users/pages/UserAuth.js":"52","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/cars/pages/UpdateCar.js":"53","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/pages/UpdateEventPhotos.js":"54","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/hooks/logout-hook.js":"55","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/toolbar.jsx":"56","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/star-rating.jsx":"57","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/Navigation/MainNavigation.js":"58","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubs/pages/ClubAuth.js":"59","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/NewEventManager.js":"60","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/ClubAccountManager.js":"61","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/ClubCredential.js":"62","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/entryDashboard/pages/NewEntryManager.js":"63","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/users/pages/UserGarageWrapper.js":"64","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/hooks/http-hook.js":"65","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/UIElements/Backdrop.js":"66","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/users/pages/UserGarage.js":"67","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/ClubProfile.js":"68","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubs/pages/ClubEvents.js":"69","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/pages/UpdateEvent.js":"70","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/EventReportSelector.js":"71","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/UIElements/Image.js":"72","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/Navigation/MainHeader.js":"73","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/Navigation/SideDrawer.js":"74","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/FormElements/Button.js":"75","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/UIElements/Modal.js":"76","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/users/components/UserCarsList.js":"77","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/form-elements.jsx":"78","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/EditEventManager.js":"79","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/events/pages/Events.js":"80","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/components/EventTypes.js":"81","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/components/UpdateFormBuilder.js":"82","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubs/components/ClubsList.js":"83","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/entryDashboard/components/CardSetupForm.js":"84","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/entryDashboard/components/CardSection.js":"85","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/ClubProfileViewer.js":"86","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/UIElements/ErrorModal.js":"87","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/EntryReport.js":"88","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/ItemTypes.js":"89","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/EntryListForUsers.js":"90","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/ClubStripe.js":"91","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/components/EventItem.js":"92","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/components/EntryReportEventItem.js":"93","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/hooks/redirectExternalURL.js":"94","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/users/pages/UserEvents.js":"95","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/hooks/form-hook.js":"96","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/stores/store.js":"97","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/ClubStripeConnect.js":"98"},{"size":13176,"mtime":1607571811505,"results":"99","hashOfConfig":"100"},{"size":422,"mtime":1597302353934,"results":"101","hashOfConfig":"100"},{"size":4980,"mtime":1603113650541,"results":"102","hashOfConfig":"100"},{"size":12815,"mtime":1606798112239,"results":"103","hashOfConfig":"100"},{"size":21264,"mtime":1604949165496,"results":"104","hashOfConfig":"100"},{"size":2470,"mtime":1606312906011,"results":"105","hashOfConfig":"100"},{"size":1780,"mtime":1603107415264,"results":"106","hashOfConfig":"100"},{"size":2897,"mtime":1606312946328,"results":"107","hashOfConfig":"100"},{"size":9483,"mtime":1606239911882,"results":"108","hashOfConfig":"100"},{"size":1665,"mtime":1600654371970,"results":"109","hashOfConfig":"100"},{"size":8781,"mtime":1607030682146,"results":"110","hashOfConfig":"100"},{"size":43523,"mtime":1604962037609,"results":"111","hashOfConfig":"100"},{"size":1258,"mtime":1606081280962,"results":"112","hashOfConfig":"100"},{"size":258,"mtime":1599968755765,"results":"113","hashOfConfig":"100"},{"size":7568,"mtime":1606712995710,"results":"114","hashOfConfig":"100"},{"size":2565,"mtime":1603555120559,"results":"115","hashOfConfig":"100"},{"size":8234,"mtime":1604946840746,"results":"116","hashOfConfig":"100"},{"size":652,"mtime":1590051460836,"results":"117","hashOfConfig":"100"},{"size":835,"mtime":1594017403075,"results":"118","hashOfConfig":"100"},{"size":20466,"mtime":1606944981497,"results":"119","hashOfConfig":"100"},{"size":725,"mtime":1600847997441,"results":"120","hashOfConfig":"100"},{"size":3229,"mtime":1601682630648,"results":"121","hashOfConfig":"100"},{"size":11005,"mtime":1607643225107,"results":"122","hashOfConfig":"100"},{"size":29023,"mtime":1607407611752,"results":"123","hashOfConfig":"100"},{"size":4892,"mtime":1606788551570,"results":"124","hashOfConfig":"100"},{"size":5653,"mtime":1607390928546,"results":"125","hashOfConfig":"100"},{"size":386,"mtime":1597010216753,"results":"126","hashOfConfig":"100"},{"size":279,"mtime":1592594302510,"results":"127","hashOfConfig":"100"},{"size":17488,"mtime":1604947056982,"results":"128","hashOfConfig":"100"},{"size":2178,"mtime":1606191964340,"results":"129","hashOfConfig":"100"},{"size":7393,"mtime":1604946795481,"results":"130","hashOfConfig":"100"},{"size":1440,"mtime":1602132755948,"results":"131","hashOfConfig":"100"},{"size":806,"mtime":1603113534018,"results":"132","hashOfConfig":"100"},{"size":1660,"mtime":1600763075857,"results":"133","hashOfConfig":"100"},{"size":9803,"mtime":1601454110225,"results":"134","hashOfConfig":"100"},{"size":548,"mtime":1605549041652,"results":"135","hashOfConfig":"100"},{"size":1105,"mtime":1599690609880,"results":"136","hashOfConfig":"100"},{"size":2039,"mtime":1604539940430,"results":"137","hashOfConfig":"100"},{"size":12573,"mtime":1603755245991,"results":"138","hashOfConfig":"100"},{"size":2557,"mtime":1601167883960,"results":"139","hashOfConfig":"100"},{"size":7560,"mtime":1607375566458,"results":"140","hashOfConfig":"100"},{"size":32233,"mtime":1607375890504,"results":"141","hashOfConfig":"100"},{"size":6852,"mtime":1607376085175,"results":"142","hashOfConfig":"100"},{"size":3072,"mtime":1600656888927,"results":"143","hashOfConfig":"100"},{"size":9018,"mtime":1606201837457,"results":"144","hashOfConfig":"100"},{"size":8063,"mtime":1602526112872,"results":"145","hashOfConfig":"100"},{"size":3560,"mtime":1606312923540,"results":"146","hashOfConfig":"100"},{"size":1749,"mtime":1599850471342,"results":"147","hashOfConfig":"100"},{"size":931,"mtime":1599811436463,"results":"148","hashOfConfig":"100"},{"size":4565,"mtime":1603235261823,"results":"149","hashOfConfig":"100"},{"size":1024,"mtime":1599811458932,"results":"150","hashOfConfig":"100"},{"size":11446,"mtime":1606430873603,"results":"151","hashOfConfig":"100"},{"size":45492,"mtime":1605300619186,"results":"152","hashOfConfig":"100"},{"size":7501,"mtime":1606183825678,"results":"153","hashOfConfig":"100"},{"size":2127,"mtime":1599758963776,"results":"154","hashOfConfig":"100"},{"size":9867,"mtime":1601265627539,"results":"155","hashOfConfig":"100"},{"size":7437,"mtime":1595438548933,"results":"156","hashOfConfig":"100"},{"size":2409,"mtime":1607367261422,"results":"157","hashOfConfig":"100"},{"size":10163,"mtime":1606430724442,"results":"158","hashOfConfig":"100"},{"size":5818,"mtime":1606502279470,"results":"159","hashOfConfig":"100"},{"size":3576,"mtime":1607642951779,"results":"160","hashOfConfig":"100"},{"size":10202,"mtime":1607643262377,"results":"161","hashOfConfig":"100"},{"size":7267,"mtime":1606714066407,"results":"162","hashOfConfig":"100"},{"size":261,"mtime":1600039479480,"results":"163","hashOfConfig":"100"},{"size":3516,"mtime":1606105635050,"results":"164","hashOfConfig":"100"},{"size":411,"mtime":1589909425462,"results":"165","hashOfConfig":"100"},{"size":5095,"mtime":1607400441611,"results":"166","hashOfConfig":"100"},{"size":12214,"mtime":1606249617913,"results":"167","hashOfConfig":"100"},{"size":3576,"mtime":1600654280187,"results":"168","hashOfConfig":"100"},{"size":18499,"mtime":1604947013567,"results":"169","hashOfConfig":"100"},{"size":1001,"mtime":1599991398440,"results":"170","hashOfConfig":"100"},{"size":305,"mtime":1599695530970,"results":"171","hashOfConfig":"100"},{"size":344,"mtime":1589871941347,"results":"172","hashOfConfig":"100"},{"size":900,"mtime":1589928683297,"results":"173","hashOfConfig":"100"},{"size":1030,"mtime":1603028987880,"results":"174","hashOfConfig":"100"},{"size":1230,"mtime":1603770306964,"results":"175","hashOfConfig":"100"},{"size":2510,"mtime":1604553187254,"results":"176","hashOfConfig":"100"},{"size":36470,"mtime":1607374982429,"results":"177","hashOfConfig":"100"},{"size":4677,"mtime":1603559658330,"results":"178","hashOfConfig":"100"},{"size":5777,"mtime":1603231051990,"results":"179","hashOfConfig":"100"},{"size":142,"mtime":1594495175689,"results":"180","hashOfConfig":"100"},{"size":7021,"mtime":1603559728491,"results":"181","hashOfConfig":"100"},{"size":583,"mtime":1592502142673,"results":"182","hashOfConfig":"100"},{"size":4229,"mtime":1607573432960,"results":"183","hashOfConfig":"100"},{"size":670,"mtime":1607390611852,"results":"184","hashOfConfig":"100"},{"size":7783,"mtime":1606249232344,"results":"185","hashOfConfig":"100"},{"size":350,"mtime":1595296673844,"results":"186","hashOfConfig":"100"},{"size":6770,"mtime":1607387932577,"results":"187","hashOfConfig":"100"},{"size":33,"mtime":1595438548763,"results":"188","hashOfConfig":"100"},{"size":8582,"mtime":1607388442752,"results":"189","hashOfConfig":"100"},{"size":5467,"mtime":1607643189013,"results":"190","hashOfConfig":"100"},{"size":15854,"mtime":1604556507196,"results":"191","hashOfConfig":"100"},{"size":307,"mtime":1603113707591,"results":"192","hashOfConfig":"100"},{"size":428,"mtime":1607562287556,"results":"193","hashOfConfig":"100"},{"size":2906,"mtime":1604949543455,"results":"194","hashOfConfig":"100"},{"size":283,"mtime":1597010527057,"results":"195","hashOfConfig":"100"},{"size":1787,"mtime":1596210783621,"results":"196","hashOfConfig":"100"},{"size":3031,"mtime":1607621004042,"results":"197","hashOfConfig":"100"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1av3dfn",{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"206"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"210"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"206"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"217"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"224"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"217"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"206"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"206"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"217"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"244","messages":"245","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"247"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"202"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"258"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"267","messages":"268","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"269","messages":"270","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"261"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"261"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"258"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"306","messages":"307","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"308","messages":"309","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"202"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"206"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"217"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"326","messages":"327","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"224"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"224"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"224"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"239"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"344","messages":"345","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"206"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"202"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"258"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"358","messages":"359","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"360","messages":"361","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"261"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"261"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"202"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"206"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"392","messages":"393","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"258"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"399","messages":"400","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"403","messages":"404","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"217"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"416","messages":"417","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"258"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"258"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"434","messages":"435","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"440","messages":"441","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/App.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/UIElements/LoadingSpinner.js",[],["442","443"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/pages/Event.js",["444","445","446","447","448"],"import React, { useState, useEffect, useContext } from 'react';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\n\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nimport EventItem from '../components/EventItem';\nimport EditEventItem from '../components/EditEventItem';\n// import EntryReportManager from '../components/EntryReportEventItem';\nimport { ClubAuthContext } from '../../shared/context/auth-context';\nimport EntryReportEventItem from '../components/EntryReportEventItem';\n\n// Events is called in App.js where the route been defined\n// 2 routes to call Event component\n// 1. path={'/events/:id'}\n// 2. In EventsItem <Link to={{pathname: `/events/${props.id}`, state: {props: props}}}> via EventWrapper\nconst Event = props => {\n\tconst clubAuthContext = useContext(ClubAuthContext);\n\t// props is passed via Link in the format of state: {props: props}\n\t// we need to get the props value using props.location.state.props.id\n\tconst eId = props.location.state.props.id;\n\tconst clubId = props.location.state.props.clubId;\n\t// readOnly is to control OwnerClub View Events, we do not want to go to <EditEventItem> route\n\tconst readOnly = props.location.state.props.readOnly;\n\t// entryReportManager is to direct the path to Entry Report Manager\n\tconst entryReportManager =\n\t\tprops.location.state.props.entryReportManager;\n\n\tconst [clubOwnerRequest, setClubOwnerRequest] = useState(false);\n\tconst [loadedEvent, setLoadedEvent] = useState();\n\tconst [loadedEventName, setLoadedEventName] = useState();\n\tconst [loadedEntryData, setLoadedEntryData] = useState();\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\n\t// 3 different routes here.\n\t// 1. Request from owner club for the event, backend returns all the event information for furture editing.\n\t//    This avoids multiple requests to the backend.\n\t// 2. Owner club gets event entry report\n\t// 3. The other is the general request.  This request will get limited info from backend.\n\t// *** No dependency here as intended.  This is to avoid re-renderng in EditEventManager to send request to backend again\n\tuseEffect(() => {\n\t\tconst fetechEvents = async () => {\n\t\t\ttry {\n\t\t\t\tlet responseData, responseStatus, responseMessage;\n\t\t\t\tif (\n\t\t\t\t\tclubId === clubAuthContext.clubId &&\n\t\t\t\t\t!entryReportManager\n\t\t\t\t) {\n\t\t\t\t\t// this route is for owner club to query an owned event\n\t\t\t\t\t[\n\t\t\t\t\t\tresponseData,\n\t\t\t\t\t\tresponseStatus,\n\t\t\t\t\t\tresponseMessage\n\t\t\t\t\t] = await sendRequest(\n\t\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL +\n\t\t\t\t\t\t\t`/events/ownerClubEvent/${eId}`,\n\t\t\t\t\t\t'GET',\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// adding JWT to header for authentication, JWT contains clubId\n\t\t\t\t\t\t\tAuthorization: 'Bearer ' + clubAuthContext.clubToken\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tsetClubOwnerRequest(true);\n\t\t\t\t\tsetLoadedEvent(responseData.event);\n\t\t\t\t} else if (\n\t\t\t\t\tclubId === clubAuthContext.clubId &&\n\t\t\t\t\tentryReportManager\n\t\t\t\t) {\n\t\t\t\t\t// This route is for owner club to query entry report\n\t\t\t\t\t[\n\t\t\t\t\t\tresponseData,\n\t\t\t\t\t\tresponseStatus,\n\t\t\t\t\t\tresponseMessage\n\t\t\t\t\t] = await sendRequest(\n\t\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL +\n\t\t\t\t\t\t\t`/events/entryreport/${eId}`,\n\t\t\t\t\t\t'GET',\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// adding JWT to header for authentication, JWT contains clubId\n\t\t\t\t\t\t\tAuthorization: 'Bearer ' + clubAuthContext.clubToken\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tsetClubOwnerRequest(true);\n\t\t\t\t\tsetLoadedEntryData(responseData);\n\t\t\t\t} else {\n\t\t\t\t\t// this route is to query an event from users\n\t\t\t\t\t[\n\t\t\t\t\t\tresponseData,\n\t\t\t\t\t\tresponseStatus,\n\t\t\t\t\t\tresponseMessage\n\t\t\t\t\t] = await sendRequest(\n\t\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL + `/events/${eId}`\n\t\t\t\t\t);\n\t\t\t\t\tsetLoadedEvent(responseData.event);\n\t\t\t\t}\n\t\t\t} catch (err) {}\n\t\t};\n\t\tfetechEvents();\n\t}, []);\n\n\t// calling EventsList from EventsList.js where it passes EVENTS to child EventsList\n\t// just treat the following call as EventsList(items = EVENTS); items is the props\n\t// name defined in EventsList\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t{isLoading && (\n\t\t\t\t<div className=\"center\">\n\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{/* For club who owns the event, we will go to EditEventItem */}\n\t\t\t{!isLoading &&\n\t\t\t\tloadedEvent &&\n\t\t\t\tclubOwnerRequest &&\n\t\t\t\t!readOnly &&\n\t\t\t\t!entryReportManager && <EditEventItem event={loadedEvent} />}\n\t\t\t{/* For Entry Report readOnly = true && entryReportManager = true */}\n\t\t\t{!isLoading &&\n\t\t\t\tloadedEntryData &&\n\t\t\t\tclubOwnerRequest &&\n\t\t\t\treadOnly &&\n\t\t\t\tentryReportManager && (\n\t\t\t\t\t<EntryReportEventItem entryReportData={loadedEntryData} />\n\t\t\t\t)}\n\t\t\t{/* For users, clubs don't own the event, and OwnerClub wants to view event, we will go to\n\t\t\tEventItem */}\n\t\t\t{!isLoading &&\n\t\t\t\tloadedEvent &&\n\t\t\t\t(!clubOwnerRequest ||\n\t\t\t\t\t(clubOwnerRequest && readOnly && !entryReportManager)) && (\n\t\t\t\t\t<EventItem event={loadedEvent} />\n\t\t\t\t)}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default Event;\n",["449","450"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/pages/EventRegistration.js",["451","452","453","454"],"import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Field, Form, Formik, ErrorMessage } from 'formik';\nimport moment from 'moment';\nimport NavigationPrompt from 'react-router-navigation-prompt';\n\n// import { EditorState } from 'draft-js';\n// import { RichEditorExample } from '../components/RichEditor';\nimport 'draft-js/dist/Draft.css';\n\nimport { useClubLoginValidation } from '../../shared/hooks/clubLoginValidation-hook';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\n// import ImageUploader from '../../shared/components/FormElements/ImageUploader';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport PromptModal from '../../shared/components/UIElements/PromptModal';\n\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { ClubAuthContext } from '../../shared/context/auth-context';\nimport { FormContext } from '../../shared/context/form-context';\n\nimport '../../shared/css/EventForm.css';\n\nconst EventRegistration = props => {\n\tlet eventId = props.eventId;\n\tconst [initialized, setInitialized] = useState(false);\n\tconst clubAuthContext = useContext(ClubAuthContext);\n\tconst formContext = useContext(FormContext);\n\n\tconst [continueStatus, setContinueStatus] = useState(false);\n\t// publishButton controls when to enable CONTINUE button, set to true after saveHandler() succeeds\n\tconst [publishButton, setPublishButton] = useState(false);\n\t// set PUBLISH button name\n\tconst [publishBtnName, setPublishBtnName] = useState('PUBLISH');\n\n\t// this is the return function that passes finishing status back to NewEventManager\n\tuseEffect(() => {\n\t\tprops.registrationStatus(continueStatus);\n\t}, [continueStatus, props]);\n\n\tuseEffect(() => {\n\t\tlet mounted = true;\n\t\tif (mounted) {\n\t\t\tformContext.setIsInsideForm(true);\n\t\t}\n\t\treturn () => {\n\t\t\tmounted = false;\n\t\t};\n\t}, [formContext]);\n\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\n\t// authentication check\n\tuseClubLoginValidation('/clubs/events/registration');\n\n\t// If we are re-directing to this page, we want to clear up clubRedirectURL\n\tlet location = useLocation();\n\tReact.useEffect(() => {\n\t\tlet path = location.pathname;\n\t\tlet clubRedirectURL = clubAuthContext.clubRedirectURL;\n\t\tif (path === clubRedirectURL) {\n\t\t\t// re-init redirectURL after re-direction route\n\t\t\tclubAuthContext.setClubRedirectURL(null);\n\t\t}\n\t}, [location, clubAuthContext]);\n\n\tconst [totalCap, setTotalCap] = useState('');\n\tconst [numGroups, setNumGroups] = useState('');\n\tconst [capDistribution, setCapDistribution] = useState(false);\n\tconst [multiDayEvent, setMultiDayEvent] = useState(false);\n\n\t// initialize local storage\n\t// Get the existing data\n\tvar eventFormData = localStorage.getItem('eventFormData');\n\n\t// If no existing data, create an array; otherwise retrieve it\n\teventFormData = eventFormData ? JSON.parse(eventFormData) : {};\n\n\tconst [OKLeavePage, setOKLeavePage] = useState(true);\n\t// local storage gets the higest priority\n\t// get from localStorage\n\tif (\n\t\t!initialized &&\n\t\teventFormData &&\n\t\tmoment(eventFormData.expirationDate) > moment()\n\t) {\n\t\tsetInitialized(true);\n\t\t// Form data\n\t\tif (eventFormData.totalCap) {\n\t\t\tsetTotalCap(eventFormData.totalCap);\n\t\t}\n\t\tif (eventFormData.numGroups) {\n\t\t\tsetNumGroups(eventFormData.numGroups);\n\t\t}\n\t\tif (eventFormData.capDistribution) {\n\t\t\tsetCapDistribution(eventFormData.capDistribution);\n\t\t}\n\t\tif (eventFormData.multiDayEvent) {\n\t\t\tsetMultiDayEvent(eventFormData.multiDayEvent);\n\t\t}\n\t} else if (!initialized) {\n\t\tsetInitialized(true);\n\t\t// initialize localStorage\n\t\teventFormData['expirationDate'] = moment(\n\t\t\tmoment().add(1, 'days'),\n\t\t\tmoment.ISO_8601\n\t\t);\n\t\teventFormData['totalCap'] = '';\n\t\teventFormData['numGroups'] = '';\n\t\teventFormData['capDistribution'] = false;\n\t\teventFormData['multiDayEvent'] = false;\n\t\tlocalStorage.setItem(\n\t\t\t'eventFormData',\n\t\t\tJSON.stringify(eventFormData)\n\t\t);\n\t}\n\n\tconst removeEventFormData = () => {\n\t\tlocalStorage.removeItem('eventFormData');\n\t};\n\n\tconst initialValues = {\n\t\t// editorState: new EditorState.createEmpty(),\n\t\ttotalCap: totalCap,\n\t\tnumGroups: numGroups,\n\t\tcapDistribution: capDistribution,\n\t\tmultiDayEvent: multiDayEvent\n\t};\n\n\tconst updateEventFormData = (key, value) => {\n\t\tconst storageData = JSON.parse(\n\t\t\tlocalStorage.getItem('eventFormData')\n\t\t);\n\t\tstorageData[key] = value;\n\t\tlocalStorage.setItem(\n\t\t\t'eventFormData',\n\t\t\tJSON.stringify(storageData)\n\t\t);\n\t};\n\n\tconst [\n\t\tcapDistributionClicked,\n\t\tsetCapDistributionClicked\n\t] = useState(false);\n\n\tconst togglecapDistribution = event => {\n\t\tsetCapDistributionClicked(event.target.checked);\n\t};\n\n\tconst history = useHistory();\n\tconst saveHandler = async (values, actions) => {\n\t\ttry {\n\t\t\tawait sendRequest(\n\t\t\t\tprocess.env.REACT_APP_BACKEND_URL +\n\t\t\t\t\t`/events/registration/${eventId}`,\n\t\t\t\t'PATCH',\n\t\t\t\tJSON.stringify({\n\t\t\t\t\ttotalCap: values.totalCap,\n\t\t\t\t\tnumGroups: values.numGroups,\n\t\t\t\t\tcapDistribution: values.capDistribution,\n\t\t\t\t\tmultiDayEvent: values.multiDayEvent\n\t\t\t\t}),\n\t\t\t\t{\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t// adding JWT to header for authentication\n\t\t\t\t\tAuthorization: 'Bearer ' + clubAuthContext.clubToken\n\t\t\t\t}\n\t\t\t);\n\t\t\tsetOKLeavePage(true);\n\t\t\tsetContinueStatus(true);\n\t\t\tsetPublishButton(true);\n\t\t\tprops.saveStatus(true);\n\t\t} catch (err) {}\n\t};\n\n\t/***** Form Validation Section  *****/\n\tconst [validateTotalCap, setValidateTotalCap] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Total participants is required.';\n\t\t\t}\n\t\t\tlet numVal = parseInt(value);\n\t\t\tif (isNaN(numVal)) {\n\t\t\t\terror = 'Please inputer a number.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\n\tconst [validateNumGroups, setValidateNumGroups] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Number of groups is required.';\n\t\t\t}\n\t\t\tlet numVal = parseInt(value);\n\t\t\tif (isNaN(numVal)) {\n\t\t\t\terror = 'Please inputer a number.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\n\tconst publishHandler = async () => {\n\t\ttry {\n\t\t\tawait sendRequest(\n\t\t\t\tprocess.env.REACT_APP_BACKEND_URL +\n\t\t\t\t\t`/clubs/publish/${eventId}`,\n\t\t\t\t'PATCH',\n\t\t\t\tJSON.stringify({ published: true }),\n\t\t\t\t{\n\t\t\t\t\t// No need for content-type since body is null,\n\t\t\t\t\t// adding JWT to header for authentication\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\tAuthorization: 'Bearer ' + clubAuthContext.clubToken\n\t\t\t\t}\n\t\t\t);\n\t\t\tsetPublishButton(false);\n\t\t\tsetPublishBtnName('PUBLISHED');\n\t\t} catch (err) {}\n\t};\n\n\tconst eventForm = values => (\n\t\t<div className=\"event-form\">\n\t\t\t<div className=\"event-form-header\">\n\t\t\t\t<h4>Please enter event registration information</h4>\n\t\t\t\t<h5>\n\t\t\t\t\t&nbsp;Values cannot be modified after event been saved.\n\t\t\t\t</h5>\n\t\t\t\t<hr className=\"event-form__hr\" />\n\t\t\t</div>\n\t\t\t<Formik\n\t\t\t\tenableReinitialize={true}\n\t\t\t\tinitialValues={initialValues}\n\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\tsaveHandler(values);\n\t\t\t\t\tif (!actions.isSubmitting) {\n\t\t\t\t\t\tsetValidateTotalCap(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Total number of participants is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlet numVal = parseInt(value);\n\t\t\t\t\t\t\tif (isNaN(numVal)) {\n\t\t\t\t\t\t\t\terror = 'Please inputer a number.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateNumGroups(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Number of groups is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlet numVal = parseInt(value);\n\t\t\t\t\t\t\tif (isNaN(numVal)) {\n\t\t\t\t\t\t\t\terror = 'Please inputer a number.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}}>\n\t\t\t\t{({\n\t\t\t\t\tvalues,\n\t\t\t\t\terrors,\n\t\t\t\t\tisSubmitting,\n\t\t\t\t\tisValid,\n\t\t\t\t\tsetFieldValue,\n\t\t\t\t\tsubmitted,\n\t\t\t\t\ttouched,\n\t\t\t\t\thandleBlur\n\t\t\t\t}) => (\n\t\t\t\t\t<Form className=\"event-form-container\">\n\t\t\t\t\t\t<label htmlFor=\"totalCap\" className=\"event-form__label\">\n\t\t\t\t\t\t\t<i className=\"fal fa-users\"></i>\n\t\t\t\t\t\t\t&nbsp; Total Participants\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"totalCap\"\n\t\t\t\t\t\t\tname=\"totalCap\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tvalidate={validateTotalCap}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.name will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateEventFormData('totalCap', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.totalCap && errors.totalCap && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error_quarter\">\n\t\t\t\t\t\t\t\t{errors.totalCap}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label htmlFor=\"numGroups\" className=\"event-form__label\">\n\t\t\t\t\t\t\t<i className=\"fal fa-users-class\"></i>\n\t\t\t\t\t\t\t&nbsp; Number of Groups\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"numGroups\"\n\t\t\t\t\t\t\tname=\"numGroups\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tvalidate={validateNumGroups}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateEventFormData('numGroups', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}></Field>\n\t\t\t\t\t\t{touched.numGroups && errors.numGroups && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error_quarter\">\n\t\t\t\t\t\t\t\t{errors.numGroups}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label className=\"event-form__checkbox\">\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tid=\"capDistribution\"\n\t\t\t\t\t\t\t\tname=\"capDistribution\"\n\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t// validate={validateCapDistribution(values)}\n\t\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t&nbsp; Check the box if you want to evenly distribute\n\t\t\t\t\t\t\ttotal participant number to each group.\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t{props.multiDayEvent && (\n\t\t\t\t\t\t\t<label className=\"event-form__checkbox\">\n\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\tid=\"multiDayEvent\"\n\t\t\t\t\t\t\t\t\tname=\"multiDayEvent\"\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t// validate={validateCapDistribution(values)}\n\t\t\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t&nbsp; You are creating a multiple day event. Please\n\t\t\t\t\t\t\t\tcheck the box if each day represent a single event.\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{/* error message not working */}\n\t\t\t\t\t\t{/* {touched.capDistribution && errors.capDistribution && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.capDistribution}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<ErrorMessage\n\t\t\t\t\t\t\tname=\"capDistribution\"\n\t\t\t\t\t\t\tclassName=\"event-form__field-error-quarter\"\n\t\t\t\t\t\t/> */}\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tsize=\"medium-block\"\n\t\t\t\t\t\t\tmargin-left=\"1.5rem\"\n\t\t\t\t\t\t\tdisabled={isSubmitting || !isValid}>\n\t\t\t\t\t\t\tSAVE\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\tmargin-left=\"1.5rem\"\n\t\t\t\t\t\t\tdisabled={!publishButton}\n\t\t\t\t\t\t\tonClick={publishHandler}>\n\t\t\t\t\t\t\t{publishBtnName}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<NavigationPrompt\n\t\t\t\t\t\t\tafterConfirm={() => {\n\t\t\t\t\t\t\t\tformContext.setIsInsideForm(false);\n\t\t\t\t\t\t\t\tremoveEventFormData();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t// Confirm navigation if going to a path that does not start with current path.\n\t\t\t\t\t\t\t// We don't want to confirm navigation when OKLeavePage === true and redirect to '/clubs/auth' due to\n\t\t\t\t\t\t\t// authentication issue\n\t\t\t\t\t\t\twhen={(crntLocation, nextLocation) => {\n\t\t\t\t\t\t\t\t// remove ClubRedirectURL from memory\n\t\t\t\t\t\t\t\tclubAuthContext.setClubRedirectURL(null);\n\t\t\t\t\t\t\t\t// OKLeavePage meaning form was not touched yet\n\t\t\t\t\t\t\t\tif (OKLeavePage) {\n\t\t\t\t\t\t\t\t\tformContext.setIsInsideForm(false);\n\t\t\t\t\t\t\t\t\tremoveEventFormData();\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// nextLocation.pathname !== '/clubs/auth' &&  --- adding this line causing state update on an\n\t\t\t\t\t\t\t\t\t// unmounted component issue.  Without it, confirmation modal will pop up\n\t\t\t\t\t\t\t\t\t// always gives the warning, because we want to be able to\n\t\t\t\t\t\t\t\t\t// clear localStorage after confirm\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t!nextLocation ||\n\t\t\t\t\t\t\t\t\t\t!nextLocation.pathname.startsWith(\n\t\t\t\t\t\t\t\t\t\t\tcrntLocation.pathname\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t{({ isActive, onCancel, onConfirm }) => {\n\t\t\t\t\t\t\t\tif (isActive) {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<PromptModal\n\t\t\t\t\t\t\t\t\t\t\tonCancel={onCancel}\n\t\t\t\t\t\t\t\t\t\t\tonConfirm={onConfirm}\n\t\t\t\t\t\t\t\t\t\t\tcontentclassName=\"event-item__modal-content\"\n\t\t\t\t\t\t\t\t\t\t\tfooterclassName=\"event-item__modal-actions\"\n\t\t\t\t\t\t\t\t\t\t\terror=\"You sure want to leave? Unsaved data will be lost.\">\n\t\t\t\t\t\t\t\t\t\t\t{/* render props.children */}\n\t\t\t\t\t\t\t\t\t\t</PromptModal>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\tThis is probably an anti-pattern but ya know...\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t</NavigationPrompt>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t{isLoading && (\n\t\t\t\t<div className=\"center\">\n\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{eventForm()}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default EventRegistration;\n",["455","456"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/pages/NewEvent.js",["457","458","459","460"],"import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Field, Form, Formik } from 'formik';\nimport moment from 'moment';\nimport NavigationPrompt from 'react-router-navigation-prompt';\nimport * as Yup from 'yup';\n\n// import { EditorState } from 'draft-js';\n// import { RichEditorExample } from '../components/RichEditor';\n// import 'draft-js/dist/Draft.css';\n\nimport { useClubLoginValidation } from '../../shared/hooks/clubLoginValidation-hook';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport PromptModal from '../../shared/components/UIElements/PromptModal';\n\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { ClubAuthContext } from '../../shared/context/auth-context';\nimport { FormContext } from '../../shared/context/form-context';\n\nimport '../../shared/css/EventForm.css';\nimport { eventTypes } from '../../event/components/EventTypes';\n\nconst NewEvent = props => {\n\tconst [initialized, setInitialized] = useState(false);\n\tconst clubAuthContext = useContext(ClubAuthContext);\n\tconst formContext = useContext(FormContext);\n\n\t// contButton controls when to enable CONTINUE button, set to true after submitHandler() succeeds\n\t// const [contButton, setContButton] = useState(false);\n\t// continueStatus controls when to return props.newEventStatus back to NewEventManager\n\tconst [continueStatus, setContinueStatus] = useState(false);\n\tconst [eventId, setEventId] = useState();\n\tconst [isMultiDayEvent, setIsMultiDayEvent] = useState(false);\n\n\t// const continueHandler = () => {\n\t// \tsetContinueStatus(true);\n\t// };\n\t// this is the return function that passes finishing status back to NewEventManager\n\tuseEffect(() => {\n\t\tprops.newEventStatus(continueStatus);\n\t}, [continueStatus, props]);\n\n\t// return eventId to NewEventManager\n\tuseEffect(() => {\n\t\tprops.eventIdHandler(eventId);\n\t}, [eventId, props]);\n\n\tuseEffect(() => {\n\t\tlet mounted = true;\n\t\tif (mounted) {\n\t\t\tformContext.setIsInsideForm(true);\n\t\t}\n\t\treturn () => {\n\t\t\tmounted = false;\n\t\t};\n\t}, [formContext]);\n\n\tuseEffect(() => {\n\t\tprops.isMultiDayEvent(isMultiDayEvent);\n\t}, [isMultiDayEvent]);\n\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\n\t// authentication check\n\tuseClubLoginValidation('/clubs/events/new');\n\n\t// If we are re-directing to this page, we want to clear up clubRedirectURL\n\tlet location = useLocation();\n\tReact.useEffect(() => {\n\t\tlet path = location.pathname;\n\t\tlet clubRedirectURL = clubAuthContext.clubRedirectURL;\n\t\tif (path === clubRedirectURL) {\n\t\t\t// re-init redirectURL after re-direction route\n\t\t\tclubAuthContext.setClubRedirectURL(null);\n\t\t}\n\t}, [location, clubAuthContext]);\n\n\tlet tomorrow = moment().add(1, 'days').format('YYYY-MM-DD');\n\tconst [name, setName] = useState('');\n\tconst [type, setType] = useState('Autocross');\n\tconst [startDate, setStartDate] = useState(tomorrow);\n\tconst [endDate, setEndDate] = useState(tomorrow);\n\tconst [regStartDate, setRegStartDate] = useState(tomorrow);\n\tconst [regEndDate, setRegEndDate] = useState(tomorrow);\n\tconst [venue, setVenue] = useState('');\n\tconst [address, setAddress] = useState('');\n\tconst [description, setDescription] = useState('');\n\tconst [instruction, setInstruction] = useState('');\n\n\t// initialize local storage\n\t// Get the existing data\n\tvar eventFormData = localStorage.getItem('eventFormData');\n\n\t// If no existing data, create an array; otherwise retrieve it\n\teventFormData = eventFormData ? JSON.parse(eventFormData) : {};\n\n\tconst [OKLeavePage, setOKLeavePage] = useState(true);\n\t// local storage gets the higest priority\n\t// get from localStorage\n\tif (\n\t\t!initialized &&\n\t\teventFormData &&\n\t\tmoment(eventFormData.expirationDate) > moment()\n\t) {\n\t\tsetInitialized(true);\n\t\t// Form data\n\t\tif (eventFormData.name) {\n\t\t\tsetName(eventFormData.name);\n\t\t}\n\t\tif (eventFormData.type) {\n\t\t\tsetType(eventFormData.type);\n\t\t}\n\t\tif (eventFormData.startDate) {\n\t\t\tsetStartDate(eventFormData.startDate);\n\t\t}\n\t\tif (eventFormData.endDate) {\n\t\t\tsetEndDate(eventFormData.endDate);\n\t\t}\n\t\tif (eventFormData.regStartDate) {\n\t\t\tsetRegStartDate(eventFormData.regStartDate);\n\t\t}\n\t\tif (eventFormData.regEndDate) {\n\t\t\tsetRegEndDate(eventFormData.regEndDate);\n\t\t}\n\t\tif (eventFormData.venue) {\n\t\t\tsetVenue(eventFormData.venue);\n\t\t}\n\t\tif (eventFormData.address) {\n\t\t\tsetAddress(eventFormData.address);\n\t\t}\n\t\tif (eventFormData.description) {\n\t\t\tsetDescription(eventFormData.description);\n\t\t}\n\t\tif (eventFormData.instruction) {\n\t\t\tsetInstruction(eventFormData.instruction);\n\t\t}\n\t} else if (!initialized) {\n\t\tsetInitialized(true);\n\t\t// initialize localStorage\n\t\teventFormData['expirationDate'] = moment(\n\t\t\tmoment().add(1, 'days'),\n\t\t\tmoment.ISO_8601\n\t\t);\n\t\teventFormData['name'] = '';\n\t\teventFormData['type'] = 'Autocross';\n\t\teventFormData['startDate'] = tomorrow;\n\t\teventFormData['endDate'] = tomorrow;\n\t\teventFormData['regStartDate'] = tomorrow;\n\t\teventFormData['regEndDate'] = tomorrow;\n\t\teventFormData['venue'] = '';\n\t\teventFormData['address'] = '';\n\t\teventFormData['description'] = '';\n\t\teventFormData['instruction'] = '';\n\t\tlocalStorage.setItem(\n\t\t\t'eventFormData',\n\t\t\tJSON.stringify(eventFormData)\n\t\t);\n\t}\n\n\tconst removeEventFormData = () => {\n\t\tlocalStorage.removeItem('eventFormData');\n\t\t// history.push(`/events/club/${clubAuthContext.clubId}`);\n\t};\n\n\tconst initialValues = {\n\t\t// editorState: new EditorState.createEmpty(),\n\t\tname: name,\n\t\ttype: type,\n\t\tstartDate: startDate,\n\t\tendDate: endDate,\n\t\tregStartDate: regStartDate,\n\t\tregEndDate: regEndDate,\n\t\tvenue: venue,\n\t\taddress: address,\n\t\tdescription: description,\n\t\tinstruction: instruction\n\t};\n\n\tconst updateEventFormData = (key, value) => {\n\t\tconst storageData = JSON.parse(\n\t\t\tlocalStorage.getItem('eventFormData')\n\t\t);\n\t\tstorageData[key] = value;\n\t\tlocalStorage.setItem(\n\t\t\t'eventFormData',\n\t\t\tJSON.stringify(storageData)\n\t\t);\n\t};\n\n\tconst history = useHistory();\n\tconst submitHandler = async (values, actions) => {\n\t\ttry {\n\t\t\tconst formData = new FormData();\n\t\t\tformData.append('name', values.name);\n\t\t\tformData.append('type', values.type);\n\t\t\tformData.append(\n\t\t\t\t'startDate',\n\t\t\t\tmoment(values.startDate, moment.ISO_8601)\n\t\t\t);\n\t\t\tformData.append(\n\t\t\t\t'endDate',\n\t\t\t\tmoment(values.endDate, moment.ISO_8601)\n\t\t\t);\n\t\t\tformData.append(\n\t\t\t\t'regStartDate',\n\t\t\t\tmoment(values.regStartDate, moment.ISO_8601)\n\t\t\t);\n\t\t\tformData.append(\n\t\t\t\t'regEndDate',\n\t\t\t\tmoment(values.regEndDate, moment.ISO_8601)\n\t\t\t);\n\t\t\tformData.append('venue', values.venue);\n\t\t\tformData.append('address', values.address);\n\t\t\tformData.append('description', values.description);\n\t\t\tformData.append('instruction', values.instruction);\n\t\t\tconst [\n\t\t\t\tresponseData,\n\t\t\t\tresponseStatus,\n\t\t\t\tresponseMessage\n\t\t\t] = await sendRequest(\n\t\t\t\tprocess.env.REACT_APP_BACKEND_URL + '/events',\n\t\t\t\t'POST',\n\t\t\t\tformData,\n\t\t\t\t{\n\t\t\t\t\t// adding JWT to header for authentication\n\t\t\t\t\tAuthorization: 'Bearer ' + clubAuthContext.clubToken\n\t\t\t\t}\n\t\t\t);\n\t\t\tsetOKLeavePage(true);\n\t\t\tsetEventId(responseData.event.id);\n\t\t\tif (values.startDate === values.endDate) {\n\t\t\t\tsetIsMultiDayEvent(false);\n\t\t\t} else {\n\t\t\t\tsetIsMultiDayEvent(true);\n\t\t\t}\n\t\t\t// move to next stage\n\t\t\tsetContinueStatus(true);\n\t\t} catch (err) {}\n\t};\n\n\t/***** Form Validation Section  *****/\n\t// 1. Field level: Field validate={validateName}. This validates when Field is onBlur\n\t// 2. startDate, endDate, regStartDate, and regEndDate use Yup beacuse Yup.ref makes it convenient to check peer fields\n\t// 3. Submit: use Formik isValid to enable the button.  Formik submission will validate everything.\n\tconst dateValidationSchema = Yup.object().shape({\n\t\tstartDate: Yup.date()\n\t\t\t.min(tomorrow, 'Start date must be no later than end date')\n\t\t\t.max(\n\t\t\t\tYup.ref('endDate'),\n\t\t\t\t'Start date must be no later than end date'\n\t\t\t)\n\t\t\t.required(),\n\t\tendDate: Yup.date()\n\t\t\t.min(\n\t\t\t\tYup.ref('startDate'),\n\t\t\t\t'End date cannot be earlier than start date'\n\t\t\t)\n\t\t\t.max('2021-12-31')\n\t\t\t.required(),\n\t\tregStartDate: Yup.date()\n\t\t\t.min(\n\t\t\t\ttomorrow,\n\t\t\t\t'Registration start date cannot be earlier than tomorrow'\n\t\t\t)\n\t\t\t.when('startDate', (startDate, schema) => {\n\t\t\t\tlet dayBefore = moment(startDate)\n\t\t\t\t\t.add(-1, 'days')\n\t\t\t\t\t.format('YYYY-MM-DD');\n\t\t\t\treturn schema.max(\n\t\t\t\t\tdayBefore,\n\t\t\t\t\t'Registration start date needs to be earlier event start date'\n\t\t\t\t);\n\t\t\t})\n\t\t\t.required(),\n\t\tregEndDate: Yup.date()\n\t\t\t.min(\n\t\t\t\tYup.ref('regStartDate'),\n\t\t\t\t'Registration end date cannot be earlier than registration start date'\n\t\t\t)\n\t\t\t.when('startDate', (startDate, schema) => {\n\t\t\t\tlet dayBefore = moment(startDate)\n\t\t\t\t\t.add(-1, 'days')\n\t\t\t\t\t.format('YYYY-MM-DD');\n\t\t\t\treturn schema.max(\n\t\t\t\t\tdayBefore,\n\t\t\t\t\t'Registration end date needs to be earlier event start date'\n\t\t\t\t);\n\t\t\t})\n\t\t\t.required()\n\t});\n\n\tconst [validateName, setValidateName] = useState(() => value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Event Name is required.';\n\t\t}\n\t\treturn error;\n\t});\n\n\tconst [validateVenue, setValidateVenue] = useState(() => value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Event Venue is required.';\n\t\t}\n\t\treturn error;\n\t});\n\n\tconst [validateAddress, setValidateAddress] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Event Address is required.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\n\tconst [validateDescription, setValidateDescription] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Event Description is required.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\n\tconst [validateInstruction, setValidateInstruction] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Event Instruction is required.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\t/***** End of Form Validation *****/\n\n\tconst eventForm = values => (\n\t\t<div className=\"event-form\">\n\t\t\t<div className=\"event-form-header\">\n\t\t\t\t<h4>Please enter event information</h4>\n\t\t\t\t<h5>&nbsp;All fields are required</h5>\n\t\t\t\t<hr className=\"event-form__hr\" />\n\t\t\t</div>\n\t\t\t<Formik\n\t\t\t\tenableReinitialize={true}\n\t\t\t\tinitialValues={initialValues}\n\t\t\t\tvalidationSchema={dateValidationSchema}\n\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\tsubmitHandler(values);\n\t\t\t\t\tif (!actions.isSubmitting) {\n\t\t\t\t\t\tsetValidateName(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Event Name is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateVenue(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Event Venue is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateAddress(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Event Address is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateDescription(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Event description is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateInstruction(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Event instruction is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}}>\n\t\t\t\t{({\n\t\t\t\t\tvalues,\n\t\t\t\t\terrors,\n\t\t\t\t\tisSubmitting,\n\t\t\t\t\tisValid,\n\t\t\t\t\tsetFieldValue,\n\t\t\t\t\tsubmitted,\n\t\t\t\t\ttouched,\n\t\t\t\t\thandleBlur\n\t\t\t\t}) => (\n\t\t\t\t\t<Form className=\"event-form-container\">\n\t\t\t\t\t\t<label htmlFor=\"name\" className=\"event-form__label\">\n\t\t\t\t\t\t\t<i className=\"fal fa-file-alt\" />\n\t\t\t\t\t\t\t&nbsp; Event Name\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field\"\n\t\t\t\t\t\t\tvalidate={validateName}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.name will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateEventFormData('name', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.name && errors.name && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.name}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label htmlFor=\"eventType\" className=\"event-form__label\">\n\t\t\t\t\t\t\t<i className=\"fal fa-flag-checkered\" />\n\t\t\t\t\t\t\t&nbsp; Event Type\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"type\"\n\t\t\t\t\t\t\tname=\"type\"\n\t\t\t\t\t\t\tas=\"select\"\n\t\t\t\t\t\t\tclassName=\"event-form__eventtype\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateEventFormData('type', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<option value=\"Event Type\" disabled>\n\t\t\t\t\t\t\t\tEvent Type\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t{eventTypes.map(option => {\n\t\t\t\t\t\t\t\tlet res = option.split(':');\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<option name={res[0]} key={res[0]}>\n\t\t\t\t\t\t\t\t\t\t{res[1]}\n\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"startDate\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_startdate\">\n\t\t\t\t\t\t\t<i className=\"fal fa-calendar-alt\" />\n\t\t\t\t\t\t\t&nbsp; Start Date\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"endDate\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_enddate\">\n\t\t\t\t\t\t\t<i className=\"fal fa-calendar-alt\" />\n\t\t\t\t\t\t\t&nbsp; End Date\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"startDate\"\n\t\t\t\t\t\t\tname=\"startDate\"\n\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\tmin={tomorrow}\n\t\t\t\t\t\t\tmax=\"2030-12-31\"\n\t\t\t\t\t\t\tclassName=\"event-form__startdate\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateEventFormData('startDate', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"endDate\"\n\t\t\t\t\t\t\tname=\"endDate\"\n\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\tmin={tomorrow}\n\t\t\t\t\t\t\tmax=\"2030-12-31\"\n\t\t\t\t\t\t\tclassName=\"event-form__enddate\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateEventFormData('endDate', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{(touched.startDate || touched.endDate) &&\n\t\t\t\t\t\t\t(errors.sartDate || errors.endDate) && (\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<div className=\"event-form__field-error-startDate\">\n\t\t\t\t\t\t\t\t\t\t{errors.startDate}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"event-form__field-error-endDate\">\n\t\t\t\t\t\t\t\t\t\t{errors.endDate}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"regStartDate\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_startdate\">\n\t\t\t\t\t\t\t<i className=\"fal fa-calendar-alt\" />\n\t\t\t\t\t\t\t&nbsp; Registration Start Date\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"regEndDate\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_enddate\">\n\t\t\t\t\t\t\t<i className=\"fal fa-calendar-alt\" />\n\t\t\t\t\t\t\t&nbsp; Registration End Date\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"regStartDate\"\n\t\t\t\t\t\t\tname=\"regStartDate\"\n\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\tmin={tomorrow}\n\t\t\t\t\t\t\tmax=\"2030-12-31\"\n\t\t\t\t\t\t\tclassName=\"event-form__startdate\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateEventFormData(\n\t\t\t\t\t\t\t\t\t'regStartDate',\n\t\t\t\t\t\t\t\t\tevent.target.value\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"regEndDate\"\n\t\t\t\t\t\t\tname=\"regEndDate\"\n\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\tmin={tomorrow}\n\t\t\t\t\t\t\tmax=\"2030-12-31\"\n\t\t\t\t\t\t\tclassName=\"event-form__enddate\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateEventFormData('regEndDate', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{(touched.regStartDate || touched.regEndDate) &&\n\t\t\t\t\t\t\t(errors.regStartDate || errors.regEndDate) && (\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<div className=\"event-form__field-error-startDate\">\n\t\t\t\t\t\t\t\t\t\t{errors.regStartDate}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"event-form__field-error-endDate\">\n\t\t\t\t\t\t\t\t\t\t{errors.regEndDate}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label htmlFor=\"venue\" className=\"event-form__label\">\n\t\t\t\t\t\t\t<i className=\"fal fa-plane-alt\"></i>\n\t\t\t\t\t\t\t&nbsp; Venue\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"venue\"\n\t\t\t\t\t\t\tname=\"venue\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tplaceholder=\"ex: Crows Landing\"\n\t\t\t\t\t\t\tclassName=\"event-form__field\"\n\t\t\t\t\t\t\tvalidate={validateVenue}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateEventFormData('venue', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.venue && errors.venue && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.venue}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label htmlFor=\"address\" className=\"event-form__label\">\n\t\t\t\t\t\t\t<i className=\"far fa-map-marker-alt\" />\n\t\t\t\t\t\t\t&nbsp; Venue Address\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"address\"\n\t\t\t\t\t\t\tname=\"address\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tplaceholder=\"ex: Crows Landing, CA\"\n\t\t\t\t\t\t\tclassName=\"event-form__field\"\n\t\t\t\t\t\t\tvalidate={validateAddress}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateEventFormData('address', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.address && errors.address && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.address}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{/* <label\n\t\t\t\t\t\t\thtmlFor=\"description\"\n\t\t\t\t\t\t\tclassName=\"event-form__label\">\n\t\t\t\t\t\t\tEvent Description\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<RichEditorExample\n\t\t\t\t\t\t\teditorState={values.editorState}\n\t\t\t\t\t\t\tonChange={setFieldValue}\n\t\t\t\t\t\t\tvalidate={validateDescription}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateEventFormData(\n\t\t\t\t\t\t\t\t\t'description',\n\t\t\t\t\t\t\t\t\tevent.target.value\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (event.target.value) {\n\t\t\t\t\t\t\t\t\tsetDescriptionOK(false);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsetDescriptionOK(true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/> */}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"description\"\n\t\t\t\t\t\t\tclassName=\"event-form__label\">\n\t\t\t\t\t\t\t<i className=\"fal fa-edit\" />\n\t\t\t\t\t\t\t&nbsp; Event Description\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"decription\"\n\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\tas=\"textarea\"\n\t\t\t\t\t\t\trows=\"15\"\n\t\t\t\t\t\t\tcols=\"50\"\n\t\t\t\t\t\t\tplaceholder=\"Please enter event description\"\n\t\t\t\t\t\t\tclassName=\"event-form__field-textarea\"\n\t\t\t\t\t\t\tvalidate={validateDescription}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateEventFormData(\n\t\t\t\t\t\t\t\t\t'description',\n\t\t\t\t\t\t\t\t\tevent.target.value\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.description && errors.description && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.description}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"instruction\"\n\t\t\t\t\t\t\tclassName=\"event-form__label\">\n\t\t\t\t\t\t\t<i className=\"fal fa-list-alt\" />\n\t\t\t\t\t\t\t&nbsp; Event Instruction\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"instruction\"\n\t\t\t\t\t\t\tname=\"instruction\"\n\t\t\t\t\t\t\tas=\"textarea\"\n\t\t\t\t\t\t\trows=\"15\"\n\t\t\t\t\t\t\tcols=\"50\"\n\t\t\t\t\t\t\tplaceholder=\"Please enter event instruction\"\n\t\t\t\t\t\t\tclassName=\"event-form__field-textarea\"\n\t\t\t\t\t\t\tvalidate={validateInstruction}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateEventFormData(\n\t\t\t\t\t\t\t\t\t'instruction',\n\t\t\t\t\t\t\t\t\tevent.target.value\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.instruction && errors.instruction && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.instruction}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\tmargin-left=\"1.5rem\"\n\t\t\t\t\t\t\tdisabled={isSubmitting || !isValid}>\n\t\t\t\t\t\t\tSAVE &amp; CONTINUE\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t{/* <Button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\tmargin-left=\"1.5rem\"\n\t\t\t\t\t\t\tdisabled={!contButton}\n\t\t\t\t\t\t\tonClick={continueHandler}>\n\t\t\t\t\t\t\tCONTINUE\n\t\t\t\t\t\t</Button> */}\n\t\t\t\t\t\t<NavigationPrompt\n\t\t\t\t\t\t\tafterConfirm={() => {\n\t\t\t\t\t\t\t\tformContext.setIsInsideForm(false);\n\t\t\t\t\t\t\t\tremoveEventFormData();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t// Confirm navigation if going to a path that does not start with current path.\n\t\t\t\t\t\t\t// We don't want to confirm navigation when OKLeavePage === true and redirect to '/clubs/auth' due to\n\t\t\t\t\t\t\t// authentication issue\n\t\t\t\t\t\t\twhen={(crntLocation, nextLocation) => {\n\t\t\t\t\t\t\t\t// remove ClubRedirectURL from memory\n\t\t\t\t\t\t\t\tclubAuthContext.setClubRedirectURL(null);\n\t\t\t\t\t\t\t\t// OKLeavePage meaning form was not touched yet\n\t\t\t\t\t\t\t\tif (OKLeavePage) {\n\t\t\t\t\t\t\t\t\tformContext.setIsInsideForm(false);\n\t\t\t\t\t\t\t\t\tremoveEventFormData();\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// nextLocation.pathname !== '/clubs/auth' &&  --- adding this line causing state update on an\n\t\t\t\t\t\t\t\t\t// unmounted component issue.  Without it, confirmation modal will pop up\n\t\t\t\t\t\t\t\t\t// always gives the warning, because we want to be able to\n\t\t\t\t\t\t\t\t\t// clear localStorage after confirm\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t!nextLocation ||\n\t\t\t\t\t\t\t\t\t\t!nextLocation.pathname.startsWith(\n\t\t\t\t\t\t\t\t\t\t\tcrntLocation.pathname\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t{({ isActive, onCancel, onConfirm }) => {\n\t\t\t\t\t\t\t\tif (isActive) {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<PromptModal\n\t\t\t\t\t\t\t\t\t\t\tonCancel={onCancel}\n\t\t\t\t\t\t\t\t\t\t\tonConfirm={onConfirm}\n\t\t\t\t\t\t\t\t\t\t\tcontentclassName=\"event-item__modal-content\"\n\t\t\t\t\t\t\t\t\t\t\tfooterclassName=\"event-item__modal-actions\"\n\t\t\t\t\t\t\t\t\t\t\terror=\"You sure want to leave? Unsaved data will be lost.\">\n\t\t\t\t\t\t\t\t\t\t\t{/* render props.children */}\n\t\t\t\t\t\t\t\t\t\t</PromptModal>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\tThis is probably an anti-pattern but ya know...\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t</NavigationPrompt>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t{isLoading && (\n\t\t\t\t<div className=\"center\">\n\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{eventForm()}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default NewEvent;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/ClubManager.js",["461","462","463","464","465","466","467","468","469","470","471","472","473"],"import React, { useContext, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { ClubAuthContext } from '../../shared/context/auth-context';\nimport './ClubManager.css';\n\nconst ManageClub = () => {\n\tconst clubAuthContext = useContext(ClubAuthContext);\n\tlet cid = clubAuthContext.clubId;\n\tlet clubName = clubAuthContext.clubName;\n\n\tconst [clubInfo, setClubInfo] = useState(false);\n\tconst [clubInfoClass, setClubInfoClass] = useState('li-tab');\n\tconst [accountManager, setaccountManager] = useState(false);\n\tconst [accountManagerClass, setaccountManagerClass] = useState(\n\t\t'li-tab'\n\t);\n\tconst [teamManager, setteamManager] = useState(false);\n\tconst [teamManagerClass, setteamManagerClass] = useState('li-tab');\n\n\t// 2. In EventsItem <Link to={{pathname: `/events/${props.id}`, state: {props: props}}}> via EventWrapper\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div className=\"list-header clearfix\">\n\t\t\t\t<div className=\"h3\">Club Manager</div>\n\t\t\t</div>\n\n\t\t\t<div className=\"list-content\">\n\t\t\t\t<div className=\"list-content-link\">\n\t\t\t\t\t<Link to={`/clubs/profileManager/${cid}`}>\n\t\t\t\t\t\t<i\n\t\t\t\t\t\t\tclassName=\"fa fa-sort-desc pull-right\"\n\t\t\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\tProfile Manager\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Link to={`/clubs/profileManager/${cid}`} exact=\"exact\">\n\t\t\t\t\t\t<p className=\"list-content-desc\">\n\t\t\t\t\t\t\tHere’s where you define everything that you wish to show\n\t\t\t\t\t\t\ton your club main page. Tell prospective drivers about\n\t\t\t\t\t\t\tyour club, your races, your mission, and your staff. You\n\t\t\t\t\t\t\tcan also set up your contact information.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Link to={`/clubs/accountManager/${cid}`} exact=\"exact\">\n\t\t\t\t\t\t<i\n\t\t\t\t\t\t\tclassName=\"fa fa-sort-desc pull-right\"\n\t\t\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\tAccount Manager\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Link to={`/clubs/accountManager/${cid}`} exact=\"exact\">\n\t\t\t\t\t\t<p className=\"list-content-desc\">\n\t\t\t\t\t\t\tSetup your payment receive methods and Stripe account\n\t\t\t\t\t\t\tinformation in the account manager.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</Link>\n\t\t\t\t\t{/* <Link to={`/clubs/teamManager/${cid}`} exact=\"exact\">\n\t\t\t\t\t\t<i\n\t\t\t\t\t\t\tclassName=\"fa fa-sort-desc pull-right\"\n\t\t\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\tTeam Manager\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Link to={`/clubs/teamManager/${cid}`} exact=\"exact\">\n\t\t\t\t\t\t<p className=\"list-content-desc\">\n\t\t\t\t\t\t\tManage Your Team Invite your co-workers to access your\n\t\t\t\t\t\t\tclub dashboard.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</Link> */}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default ManageClub;\n",["474","475"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/RegistrationManager.js",[],["476","477"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/ClubProfileManager.js",["478","479"],"import React, { useContext, useEffect, useState } from 'react';\nimport Button from '../../shared/components/FormElements/Button';\nimport ClubProfile from './ClubProfile';\nimport ClubPhotos from './ClubPhotos';\nimport ClubProfileViewer from './ClubProfileViewer';\nimport '../../shared/css/EventForm.css';\nimport '../../event/components/EventItem.css';\nimport './ClubManager.css';\n\nconst ClubProfileManager = () => {\n\t// eventInfo controls what to display in Tab Content\n\tconst [clubProfile, setClubProfile] = useState(false);\n\t// eventInfoClass contorls className used for Button\n\tconst [clubProfileClass, setClubProfileClass] = useState(\n\t\t'editeventmanager-grey'\n\t);\n\tconst [photo, setPhoto] = useState(false);\n\tconst [photoClass, setPhotoClass] = useState(\n\t\t'editeventmanager-grey'\n\t);\n\tconst [clubProfileViewer, setClubProfileViewer] = useState(false);\n\tconst [\n\t\tclubProfileViewerClass,\n\t\tsetClubProfileViewerClass\n\t] = useState('editeventmanager-grey');\n\n\tconst clubProfileClickHandler = () => {\n\t\tsetClubProfile(true);\n\t\tsetClubProfileClass('editeventmanager-orange');\n\t\tsetPhoto(false);\n\t\tsetPhotoClass('editeventmanager-grey');\n\t\tsetClubProfileViewer(false);\n\t\tsetClubProfileViewerClass('editeventmanager-grey');\n\t};\n\tconst photoClickHandler = () => {\n\t\tsetClubProfile(false);\n\t\tsetClubProfileClass('editeventmanager-grey');\n\t\tsetPhoto(true);\n\t\tsetPhotoClass('editeventmanager-orange');\n\t\tsetClubProfileViewer(false);\n\t\tsetClubProfileViewerClass('editeventmanager-grey');\n\t};\n\tconst clubProfileViewerClickHandler = () => {\n\t\tsetClubProfile(false);\n\t\tsetClubProfileClass('editeventmanager-grey');\n\t\tsetPhoto(false);\n\t\tsetPhotoClass('editeventmanager-grey');\n\t\tsetClubProfileViewer(true);\n\t\tsetClubProfileViewerClass('editeventmanager-orange');\n\t};\n\n\t// set defualt page, if none is false, we will use eventInfo as default\n\tif (!clubProfile && !photo && !clubProfileViewer) {\n\t\tclubProfileClickHandler();\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div className=\"list-header clearfix\">\n\t\t\t\t<div className=\"h3\">Profile Manager</div>\n\t\t\t</div>\n\n\t\t\t{/* Edit Event Manager Tabs*/}\n\t\t\t<div className=\"eventmanager\">\n\t\t\t\t<div className=\"dashboard-tabs activity-sections\">\n\t\t\t\t\t<br />\n\t\t\t\t\t<ul className=\"nav nav-tabs\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tsize={clubProfileClass}\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\tonClick={clubProfileClickHandler}>\n\t\t\t\t\t\t\tClub Profile\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tsize={photoClass}\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\tonClick={photoClickHandler}>\n\t\t\t\t\t\t\tPhotos\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tsize={clubProfileViewerClass}\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\tonClick={clubProfileViewerClickHandler}>\n\t\t\t\t\t\t\tView Club Profile\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<div className=\"tab-content\">\n\t\t\t\t\t\t{clubProfile && <ClubProfile />}\n\t\t\t\t\t\t{photo && <ClubPhotos />}\n\t\t\t\t\t\t{clubProfileViewer && <ClubProfileViewer />}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default ClubProfileManager;\n",["480","481"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/ClubPhotos.js",["482","483","484","485","486","487"],"import React, { useContext, useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Field, Form, Formik } from 'formik';\nimport NavigationPrompt from 'react-router-navigation-prompt';\n\nimport { useClubLoginValidation } from '../../shared/hooks/clubLoginValidation-hook';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport ImageUploader from '../../shared/components/FormElements/ImageUploader';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport PromptModal from '../../shared/components/UIElements/PromptModal';\n\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { ClubAuthContext } from '../../shared/context/auth-context';\nimport { FormContext } from '../../shared/context/form-context';\n\nimport '../../shared/css/EventForm.css';\n\nconst ClubPhotos = () => {\n\tconst clubAuthContext = useContext(ClubAuthContext);\n\tconst clubId = clubAuthContext.clubId;\n\tconst formContext = useContext(FormContext);\n\n\tuseEffect(() => {\n\t\tlet mounted = true;\n\t\tif (mounted) {\n\t\t\tformContext.setIsInsideForm(true);\n\t\t}\n\t\treturn () => {\n\t\t\tmounted = false;\n\t\t};\n\t}, [formContext]);\n\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\n\t// authentication check\n\tuseClubLoginValidation(`/clubs/photos/${clubId}`);\n\n\t// If we are re-directing to this page, we want to clear up clubRedirectURL\n\tlet location = useLocation();\n\tuseEffect(() => {\n\t\tlet path = location.pathname;\n\t\tlet clubRedirectURL = clubAuthContext.clubRedirectURL;\n\t\tif (path === clubRedirectURL) {\n\t\t\t// re-init redirectURL after re-direction route\n\t\t\tclubAuthContext.setClubRedirectURL(null);\n\t\t}\n\t}, [location, clubAuthContext]);\n\n\tconst [OKLeavePage, setOKLeavePage] = useState(true);\n\tconst [loadedImage, setLoadedImage] = useState('');\n\tconst [loadedProfileImage, setLoadedProfileImage] = useState('');\n\tconst [loadedClubProfile, setLoadedClubProfile] = useState('');\n\tuseEffect(() => {\n\t\tconst fetchClubProfile = async () => {\n\t\t\ttry {\n\t\t\t\tconst [\n\t\t\t\t\tresponseData,\n\t\t\t\t\tresponseStatus,\n\t\t\t\t\tresponseMessage\n\t\t\t\t] = await sendRequest(\n\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL +\n\t\t\t\t\t\t`/clubs/profile/${clubId}`,\n\t\t\t\t\t'GET',\n\t\t\t\t\tnull,\n\t\t\t\t\t{\n\t\t\t\t\t\t// adding JWT to header for authentication, JWT contains clubId\n\t\t\t\t\t\tAuthorization: 'Bearer ' + clubAuthContext.clubToken\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tsetLoadedImage(responseData.image);\n\t\t\t\tsetLoadedClubProfile(responseData.clubProfile);\n\t\t\t\tsetLoadedProfileImage(responseData.clubProfile.profileImage);\n\t\t\t} catch (err) {}\n\t\t};\n\t\tfetchClubProfile();\n\t}, [clubId, setLoadedImage, setLoadedProfileImage]);\n\n\tconst initialValues = {\n\t\timage: loadedImage,\n\t\tprofileImage: loadedProfileImage\n\t};\n\n\tconst [saveButtonEnabled, setSaveButtonEnabled] = useState(false);\n\tconst submitHandler = async (values, actions) => {\n\t\ttry {\n\t\t\tconst formData = new FormData();\n\t\t\tformData.append('webPage', loadedClubProfile.webPage);\n\t\t\tformData.append('faceBook', loadedClubProfile.faceBook);\n\t\t\tformData.append('youTube', loadedClubProfile.youTube);\n\t\t\tformData.append('contactEmail', loadedClubProfile.contactEmail);\n\t\t\tformData.append('description', loadedClubProfile.description);\n\t\t\tformData.append('clubImage', values.image);\n\t\t\tformData.append('clubProfileImage', values.profileImage);\n\t\t\tconst [\n\t\t\t\tresponseData,\n\t\t\t\tresponseStatus,\n\t\t\t\tresponseMessage\n\t\t\t] = await sendRequest(\n\t\t\t\tprocess.env.REACT_APP_BACKEND_URL + `/clubs/profile`,\n\t\t\t\t'PATCH',\n\t\t\t\tformData,\n\t\t\t\t{\n\t\t\t\t\t// adding JWT to header for authentication\n\t\t\t\t\tAuthorization: 'Bearer ' + clubAuthContext.clubToken\n\t\t\t\t}\n\t\t\t);\n\t\t\tsetOKLeavePage(true);\n\t\t\tsetSaveButtonEnabled(false);\n\t\t} catch (err) {}\n\t};\n\n\t// const validateImageSize = value => {\n\t// \tlet error;\n\t// \tif (value && value.size > 1500000) {\n\t// \t\terror = 'File size needs to be smaller than 1.5MB';\n\t// \t} else {\n\t// \t\tsetSaveButtonEnabled(true);\n\t// \t}\n\t// \treturn error;\n\t// };\n\n\t// const validateProfileImageSize = value => {\n\t// \tlet error;\n\t// \tif (value && value.size > 1500000) {\n\t// \t\terror = 'File size needs to be smaller than 1.5MB';\n\t// \t} else {\n\t// \t\tsetSaveButtonEnabled(true);\n\t// \t}\n\t// \treturn error;\n\t// };\n\n\tconst [validateImageSize, setValidateImageSize] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (value && value.size > 1500000) {\n\t\t\t\terror = 'File size needs to be smaller than 1.5MB';\n\t\t\t} else {\n\t\t\t\tsetSaveButtonEnabled(true);\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\n\tconst [\n\t\tvalidateProfileImageSize,\n\t\tsetValidateProfileImageSize\n\t] = useState(() => value => {\n\t\tlet error;\n\t\tif (value && value.size > 1500000) {\n\t\t\terror = 'File size needs to be smaller than 1.5MB';\n\t\t} else {\n\t\t\tsetSaveButtonEnabled(true);\n\t\t}\n\t\treturn error;\n\t});\n\n\t/***** End of Form Validation *****/\n\n\tconst clubPhotosForm = values => (\n\t\t<div className=\"event-form\">\n\t\t\t<div className=\"event-form-header\">\n\t\t\t\t<h4>Please upload club logo and profile photo</h4>\n\t\t\t\t<hr className=\"event-form__hr\" />\n\t\t\t</div>\n\t\t\t<Formik\n\t\t\t\tenableReinitialize={true}\n\t\t\t\tinitialValues={initialValues}\n\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\tsubmitHandler(values);\n\t\t\t\t\tif (actions.isSubmitting) {\n\t\t\t\t\t\tactions.setSubmitting(false);\n\t\t\t\t\t}\n\t\t\t\t\tif (!actions.isSubmitting) {\n\t\t\t\t\t\tsetValidateImageSize(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (value && value.size > 1500000) {\n\t\t\t\t\t\t\t\terror = 'File size needs to be smaller than 1.5MB';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsetSaveButtonEnabled(true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateProfileImageSize(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (value && value.size > 1500000) {\n\t\t\t\t\t\t\t\terror = 'File size needs to be smaller than 1.5MB';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsetSaveButtonEnabled(true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}}>\n\t\t\t\t{({\n\t\t\t\t\tvalues,\n\t\t\t\t\terrors,\n\t\t\t\t\thandleChange,\n\t\t\t\t\thandleSubmit,\n\t\t\t\t\tisSubmitting,\n\t\t\t\t\tisValid,\n\t\t\t\t\tsetFieldValue,\n\t\t\t\t\ttouched,\n\t\t\t\t\thandleBlur\n\t\t\t\t}) => (\n\t\t\t\t\t<Form className=\"event-form-container\">\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"image\"\n\t\t\t\t\t\t\tname=\"image\"\n\t\t\t\t\t\t\ttitle=\"Club Logo\"\n\t\t\t\t\t\t\tcomponent={ImageUploader}\n\t\t\t\t\t\t\tvalidate={validateImageSize}\n\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\n\t\t\t\t\t\t\terrorMessage={errors.image ? errors.image : ''}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\tsetSaveButtonEnabled(true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tlabelStyle=\"event-form__label\"\n\t\t\t\t\t\t\tinputStyle=\"event-form__field-select\"\n\t\t\t\t\t\t\tpreviewStyle=\"image-upload__preview\"\n\t\t\t\t\t\t\terrorStyle=\"event-form__field-error\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"profileImage\"\n\t\t\t\t\t\t\tname=\"profileImage\"\n\t\t\t\t\t\t\ttitle=\"Profile Image\"\n\t\t\t\t\t\t\tcomponent={ImageUploader}\n\t\t\t\t\t\t\tvalidate={validateProfileImageSize}\n\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\n\t\t\t\t\t\t\terrorMessage={\n\t\t\t\t\t\t\t\terrors.profileImage ? errors.profileImage : ''\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\tsetSaveButtonEnabled(true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tlabelStyle=\"event-form__label\"\n\t\t\t\t\t\t\tinputStyle=\"event-form__field-select\"\n\t\t\t\t\t\t\tpreviewStyle=\"image-upload__preview\"\n\t\t\t\t\t\t\terrorStyle=\"event-form__field-error\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tsize=\"medium-block\"\n\t\t\t\t\t\t\tmargin-left=\"1.5rem\"\n\t\t\t\t\t\t\t// cannot put isValid because not necessary to have both images uploaded at the same time\n\t\t\t\t\t\t\tdisabled={isSubmitting || !saveButtonEnabled}>\n\t\t\t\t\t\t\tSAVE\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<NavigationPrompt\n\t\t\t\t\t\t\tafterConfirm={() => {\n\t\t\t\t\t\t\t\tformContext.setIsInsideForm(false);\n\t\t\t\t\t\t\t\t// removeEventFormData();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t// Confirm navigation if going to a path that does not start with current path.\n\t\t\t\t\t\t\t// We don't want to confirm navigation when OKLeavePage === true and redirect to '/clubs/auth' due to\n\t\t\t\t\t\t\t// authentication issue\n\t\t\t\t\t\t\twhen={(crntLocation, nextLocation) => {\n\t\t\t\t\t\t\t\t// remove ClubRedirectURL from memory\n\t\t\t\t\t\t\t\tclubAuthContext.setClubRedirectURL(null);\n\t\t\t\t\t\t\t\t// OKLeavePage meaning form was not touched yet\n\t\t\t\t\t\t\t\tif (OKLeavePage) {\n\t\t\t\t\t\t\t\t\tformContext.setIsInsideForm(false);\n\t\t\t\t\t\t\t\t\t// removeEventFormData();\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// nextLocation.pathname !== '/clubs/auth' &&  --- adding this line causing state update on an\n\t\t\t\t\t\t\t\t\t// unmounted component issue.  Without it, confirmation modal will pop up\n\t\t\t\t\t\t\t\t\t// always gives the warning, because we want to be able to\n\t\t\t\t\t\t\t\t\t// clear localStorage after confirm\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t!nextLocation ||\n\t\t\t\t\t\t\t\t\t\t!nextLocation.pathname.startsWith(\n\t\t\t\t\t\t\t\t\t\t\tcrntLocation.pathname\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t{({ isActive, onCancel, onConfirm }) => {\n\t\t\t\t\t\t\t\tif (isActive) {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<PromptModal\n\t\t\t\t\t\t\t\t\t\t\tonCancel={onCancel}\n\t\t\t\t\t\t\t\t\t\t\tonConfirm={onConfirm}\n\t\t\t\t\t\t\t\t\t\t\tcontentclassName=\"event-item__modal-content\"\n\t\t\t\t\t\t\t\t\t\t\tfooterclassName=\"event-item__modal-actions\"\n\t\t\t\t\t\t\t\t\t\t\terror=\"You sure want to leave? Unsaved data will be lost.\"></PromptModal>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\tThis is probably an anti-pattern but ya know...\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t</NavigationPrompt>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t{isLoading && (\n\t\t\t\t<div className=\"center\">\n\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{clubPhotosForm()}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default ClubPhotos;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubs/pages/Clubs.js",["488","489"],"import React, { useEffect, useState } from 'react';\n\nimport ClubsList from '../components/ClubsList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\n\nconst Clubs = () => {\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\n\tconst [loadedClubs, setLoadedClubs] = useState();\n\t// if the dependency is empty, it will only run once\n\t// don't make useEffect function async, because useEffect does not want the\n\t// function returns a promise\n\tuseEffect(() => {\n\t\tlet mounted = true;\n\t\tconst fetchClubs = async () => {\n\t\t\ttry {\n\t\t\t\t// send GET request to backend\n\t\t\t\tconst [\n\t\t\t\t\tresponseData,\n\t\t\t\t\tresponseStatus,\n\t\t\t\t\tresponseMessage\n\t\t\t\t] = await sendRequest(\n\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL + '/clubs'\n\t\t\t\t);\n\n\t\t\t\t/**\n\t\t\t\t * this corresponds to back end clubsController.getAllClubs\n\t\t\t\t * res.status(200).json({\n\t\t\t\t *   clubs: clubs.map(club => club.toObject({ getters: true }))\n\t\t\t\t * });\n\t\t\t\t **/\n\t\t\t\t//\n\t\t\t\tsetLoadedClubs(responseData.clubs);\n\t\t\t} catch (err) {}\n\t\t};\n\t\tif (mounted) {\n\t\t\tfetchClubs();\n\t\t}\n\t\treturn () => (mounted = false);\n\t}, [sendRequest]);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t{isLoading && (\n\t\t\t\t<div className=\"center\">\n\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{/* we only want to render ClubsList if loadClubs has something; otherwise \n\t\t\tthere will be an error */}\n\t\t\t{!isLoading && loadedClubs && <ClubsList items={loadedClubs} />}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default Clubs;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/entryDashboard/pages/EditEntryManager.js",["490","491","492","493","494","495","496","497","498","499","500","501"],"import React, { useContext, useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Button from '../../shared/components/FormElements/Button';\nimport CarSelector from './CarSelector';\nimport EditClassification from './EditClassification';\nimport EventForm from '../../event/pages/EventForm';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport SubmitEntry from './SubmitEntry';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { UserAuthContext } from '../../shared/context/auth-context';\n\nimport './Entry.css';\n\nconst EditEntryManager = props => {\n\tconst eventId = useParams().id;\n\tconst [eventName, setEventName] = useState('');\n\t// Allow users to cancel registration after reg is closed. Currently un-supported,\n\t// Need to make an option for club to opt this option if we'd like to support this feature.\n\tconst [regClosed, setRegClosed] = useState(false);\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\tconst userAuthContext = useContext(UserAuthContext);\n\n\t// passing from EventItem\n\tuseEffect(() => {\n\t\tif (\n\t\t\tprops.location &&\n\t\t\tprops.location.state &&\n\t\t\tprops.location.state.eventName\n\t\t\t// && props.location.state.regClosed\n\t\t) {\n\t\t\tsetEventName(props.location.state.eventName);\n\t\t\t// setRegClosed(props.location.state.regClosed);\n\t\t}\n\t}, [props, setEventName]);\n\n\tconst [entry, setEntry] = useState();\n\tconst [entryId, setEntryId] = useState();\n\tconst [entryCarId, setEntryCarId] = useState();\n\tconst [carNumber, setCarNumber] = useState();\n\tconst [raceClass, setRaceClass] = useState();\n\n\t// only get entry data from backend at the very beginning,\n\t// Whenever we modify the entry information in sub-tabs, we use getNewEntry to receive new entry\n\t// so each tab does not need to retrieve entry information again.\n\tuseEffect(() => {\n\t\tconst getEntry = async () => {\n\t\t\tlet responseData, responseStatus, responseMessage;\n\t\t\ttry {\n\t\t\t\t[\n\t\t\t\t\tresponseData,\n\t\t\t\t\tresponseStatus,\n\t\t\t\t\tresponseMessage\n\t\t\t\t] = await sendRequest(\n\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL +\n\t\t\t\t\t\t`/users/entry/${eventId}`,\n\t\t\t\t\t'GET',\n\t\t\t\t\tnull,\n\t\t\t\t\t{\n\t\t\t\t\t\t// adding JWT to header for authentication, JWT contains userId\n\t\t\t\t\t\tAuthorization: 'Bearer ' + userAuthContext.userToken\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t} catch (err) {}\n\t\t\tsetEntry(responseData.entry);\n\t\t\tsetEntryCarId(responseData.entry.carId);\n\t\t\tsetEntryId(responseData.entry.id);\n\t\t\tsetCarNumber(responseData.entry.carNumber);\n\t\t\tsetRaceClass(responseData.entry.raceClass);\n\t\t};\n\t\tgetEntry();\n\t}, []);\n\n\t// get newEntry from sub-component whenever there is a new change\n\tconst getNewEntry = newEntry => {\n\t\tsetEntry(newEntry);\n\t\tsetEntryCarId(newEntry.carId);\n\t\tsetEntryId(newEntry.id);\n\n\t\t// write entry to localStorage\n\t\tlet userData = JSON.parse(localStorage.getItem('userData'));\n\n\t\tlet newUserEntries = [];\n\t\tnewUserEntries = userData.userEntries;\n\t\tlet userEntryIndex;\n\t\tfor (let i = 0; i < newUserEntries.length; ++i) {\n\t\t\tif (newUserEntries[i].id === newEntry.id) {\n\t\t\t\tuserEntryIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tnewUserEntries.splice(userEntryIndex, 1, newEntry);\n\t\tuserData.userEntries = newUserEntries;\n\t\tlocalStorage.setItem('userData', JSON.stringify(userData));\n\t};\n\n\tlet userData = JSON.parse(localStorage.getItem('userData'));\n\t// get userId from localStorage\n\tlet userId = undefined;\n\tif (userData.userId) {\n\t\tuserId = userData.userId;\n\t}\n\n\t// collect information from each tab, we will send them to backend via SUBMIT tab\n\t// const [carId, setCarId] = useState();\n\tconst [formAnswer, setFormAnswer] = useState();\n\n\tconst [carSelector, setCarSelector] = useState(false);\n\tconst [carSelectorClass, setCarSelectorClass] = useState(\n\t\t'editeventmanager-grey'\n\t);\n\tconst [classification, setClassification] = useState(false);\n\tconst [classificationClass, setClassificationClass] = useState(\n\t\t'editeventmanager-grey'\n\t);\n\tconst [form, setFform] = useState(false);\n\tconst [formClass, setFformClass] = useState(\n\t\t'editeventmanager-grey'\n\t);\n\tconst [submit, setSubmit] = useState(false);\n\tconst [submitClass, setSubmitClass] = useState(\n\t\t'editeventmanager-grey'\n\t);\n\tconst [percentage, setPercentage] = useState('0');\n\n\tconst carSelectorClickHandler = () => {\n\t\tsetCarSelector(true);\n\t\tsetCarSelectorClass('editeventmanager-orange');\n\t\tsetClassification(false);\n\t\tsetClassificationClass('editeventmanager-grey');\n\t\tsetFform(false);\n\t\tsetFformClass('editeventmanager-grey');\n\t\tsetSubmit(false);\n\t\tsetSubmitClass('editeventmanager-grey');\n\t\tsetPercentage('0');\n\t};\n\tconst classificationClickHandler = () => {\n\t\tsetCarSelector(false);\n\t\tsetCarSelectorClass('editeventmanager-grey');\n\t\tsetClassification(true);\n\t\tsetClassificationClass('editeventmanager-orange');\n\t\tsetFform(false);\n\t\tsetFformClass('editeventmanager-grey');\n\t\tsetSubmit(false);\n\t\tsetSubmitClass('editeventmanager-grey');\n\t\tsetPercentage('25');\n\t};\n\tconst formClickHandler = () => {\n\t\tsetCarSelector(false);\n\t\tsetCarSelectorClass('editeventmanager-grey');\n\t\tsetClassification(false);\n\t\tsetClassificationClass('editeventmanager-grey');\n\t\tsetFform(true);\n\t\tsetFformClass('editeventmanager-orange');\n\t\tsetSubmit(false);\n\t\tsetSubmitClass('editeventmanager-grey');\n\t\tsetPercentage('50');\n\t};\n\tconst submitClickHandler = () => {\n\t\tsetCarSelector(false);\n\t\tsetCarSelectorClass('editeventmanager-grey');\n\t\tsetClassification(false);\n\t\tsetClassificationClass('editeventmanager-grey');\n\t\tsetFform(false);\n\t\tsetFformClass('editeventmanager-grey');\n\t\tsetSubmit(true);\n\t\tsetSubmitClass('editeventmanager-orange');\n\t\tsetPercentage('75');\n\t};\n\n\tconst finishHandler = () => {\n\t\tsetPercentage('100');\n\t};\n\n\t// set defualt page, if none is false, we will use carSelector as default\n\tuseEffect(() => {\n\t\tif (\n\t\t\t!carSelector &&\n\t\t\t!classification &&\n\t\t\t!form &&\n\t\t\t!submit &&\n\t\t\t!regClosed\n\t\t) {\n\t\t\tcarSelectorClickHandler();\n\t\t} else if (regClosed) {\n\t\t\tsubmitClickHandler();\n\t\t}\n\t}, [\n\t\tcarSelector,\n\t\tclassification,\n\t\tform,\n\t\tsubmit,\n\t\tregClosed,\n\t\tcarSelectorClickHandler,\n\t\tsubmitClickHandler\n\t]);\n\n\t// getting continue status back from <Form />\n\tconst [formStatus, setFormStatus] = useState(false);\n\tconst formHandler = status => {\n\t\tif (status) {\n\t\t\tsetFormStatus(status);\n\t\t}\n\t};\n\tuseEffect(() => {\n\t\tif (formStatus) {\n\t\t\tsubmitClickHandler();\n\t\t}\n\t}, [formStatus, submitClickHandler]);\n\n\tconst getFormAnswer = answer => {\n\t\tsetFormAnswer(answer);\n\t};\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t{isLoading && (\n\t\t\t\t<div className=\"center\">\n\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<div className=\"list-header clearfix\">\n\t\t\t\t<div className=\"h3-heavy\">{eventName}</div>\n\t\t\t\t<div className=\"h3\">\n\t\t\t\t\tPlease click on the tab to make changes.\n\t\t\t\t</div>\n\t\t\t\t{regClosed && (\n\t\t\t\t\t<div className=\"h3-heavy\">\n\t\t\t\t\t\tRegistration is now closed.&nbsp;&nbsp;You can not modify\n\t\t\t\t\t\tyour entry except canceling it.\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\n\t\t\t{/* New Event Manager Tabs*/}\n\t\t\t<div className=\"eventmanager\">\n\t\t\t\t<div className=\"dashboard-tabs activity-sections\">\n\t\t\t\t\t<br />\n\t\t\t\t\t<ul className=\"nav nav-tabs\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tsize={carSelectorClass}\n\t\t\t\t\t\t\tdisabled={regClosed}\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\tonClick={carSelectorClickHandler}>\n\t\t\t\t\t\t\tCar\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tsize={classificationClass}\n\t\t\t\t\t\t\tdisabled={regClosed}\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\tonClick={classificationClickHandler}>\n\t\t\t\t\t\t\tClassification\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tsize={formClass}\n\t\t\t\t\t\t\tdisabled={regClosed}\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\tonClick={formClickHandler}>\n\t\t\t\t\t\t\tForm\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tsize={submitClass}\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\tonClick={submitClickHandler}>\n\t\t\t\t\t\t\tRegistration\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<div className=\"tab-content\">\n\t\t\t\t\t\t{carSelector && (\n\t\t\t\t\t\t\t<CarSelector\n\t\t\t\t\t\t\t\tentryId={entryId}\n\t\t\t\t\t\t\t\tuserId={userId}\n\t\t\t\t\t\t\t\tisNewEntry={false}\n\t\t\t\t\t\t\t\tentryCarId={entryCarId}\n\t\t\t\t\t\t\t\tgetNewEntry={getNewEntry}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{classification && (\n\t\t\t\t\t\t\t<EditClassification\n\t\t\t\t\t\t\t\tentryId={entryId}\n\t\t\t\t\t\t\t\tuserId={userId}\n\t\t\t\t\t\t\t\tcarNumber={carNumber}\n\t\t\t\t\t\t\t\traceClass={raceClass}\n\t\t\t\t\t\t\t\tgetNewEntry={getNewEntry}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{/* editingMode is to indicate request from EditEntryManager not NewNewEntryManager */}\n\t\t\t\t\t\t{form && (\n\t\t\t\t\t\t\t<EventForm\n\t\t\t\t\t\t\t\tentryId={entryId}\n\t\t\t\t\t\t\t\teventId={eventId}\n\t\t\t\t\t\t\t\teditingMode={true}\n\t\t\t\t\t\t\t\tgetNewEntry={getNewEntry}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{submit && (\n\t\t\t\t\t\t\t<SubmitEntry\n\t\t\t\t\t\t\t\tentryId={entryId}\n\t\t\t\t\t\t\t\teditingMode={true}\n\t\t\t\t\t\t\t\teventId={eventId}\n\t\t\t\t\t\t\t\teventName={eventName}\n\t\t\t\t\t\t\t\tformAnswer={entry.answer}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default EditEntryManager;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/cars/pages/NewCar.js",["502","503","504"],"import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Field, Form, Formik } from 'formik';\nimport moment from 'moment';\nimport NavigationPrompt from 'react-router-navigation-prompt';\n\n// import { EditorState } from 'draft-js';\n// import { RichEditorExample } from '../components/RichEditor';\n// import 'draft-js/dist/Draft.css';\n\nimport { useUserLoginValidation } from '../../shared/hooks/userLoginValidation-hook';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport ImageUploader from '../../shared/components/FormElements/ImageUploader';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport PromptModal from '../../shared/components/UIElements/PromptModal';\n\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { UserAuthContext } from '../../shared/context/auth-context';\nimport { FormContext } from '../../shared/context/form-context';\n\nimport '../../shared/css/EventForm.css';\n\nconst NewCar = setFieldValue => {\n\tconst [initialized, setInitialized] = useState(false);\n\tconst userAuthContext = useContext(UserAuthContext);\n\tconst formContext = useContext(FormContext);\n\tlet userName = userAuthContext.userName;\n\tuseEffect(() => {\n\t\tlet mounted = true;\n\t\tif (mounted) {\n\t\t\tformContext.setIsInsideForm(true);\n\t\t}\n\t\treturn () => {\n\t\t\tmounted = false;\n\t\t};\n\t}, [formContext]);\n\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\n\t// authentication check\n\tuseUserLoginValidation('/users/cars/new');\n\t// If we are re-directing to this page, we want to clear up clubRedirectURL\n\tlet location = useLocation();\n\tReact.useEffect(() => {\n\t\tlet path = location.pathname;\n\t\tlet userRedirectURL = userAuthContext.userRedirectURL;\n\t\tif (path === userRedirectURL) {\n\t\t\t// re-init redirectURL after re-direction route\n\t\t\tuserAuthContext.setUserRedirectURL(null);\n\t\t}\n\t}, [location, userAuthContext]);\n\n\tconst [year, setYear] = useState('');\n\tconst [make, setMake] = useState('');\n\tconst [model, setModel] = useState('');\n\tconst [trimLevel, setTrimLevel] = useState('');\n\tconst [share, setShare] = useState(false);\n\tconst [tireBrand, setTireBrand] = useState('');\n\tconst [tireName, setTireName] = useState('');\n\tconst [tireFrontWidth, setTireFrontWidth] = useState('');\n\tconst [tireFrontDiameter, setTireFrontDiameter] = useState('');\n\tconst [tireFrontRatio, setTireFrontRatio] = useState('');\n\tconst [tireRearWidth, setTireRearWidth] = useState('');\n\tconst [tireRearDiameter, setTireRearDiameter] = useState('');\n\tconst [tireRearRatio, setTireRearRatio] = useState('');\n\tconst [frontPressure, setFrontPressure] = useState('');\n\tconst [rearPressure, setRearPressure] = useState('');\n\tconst [LFCamber, setLFCamber] = useState('');\n\tconst [RFCamber, setRFCamber] = useState('');\n\tconst [LRCamber, setLRCamber] = useState('');\n\tconst [RRCamber, setRRCamber] = useState('');\n\tconst [LFCaster, setLFCaster] = useState('');\n\tconst [RFCaster, setRFCaster] = useState('');\n\tconst [LFToe, setLFToe] = useState('');\n\tconst [RFToe, setRFToe] = useState('');\n\tconst [frontToe, setfrontToe] = useState('');\n\tconst [LRToe, setLRToe] = useState('');\n\tconst [RRToe, setRRToe] = useState('');\n\tconst [rearToe, setRearToe] = useState('');\n\tconst [FBar, setFBar] = useState('');\n\tconst [RBar, setRBar] = useState('');\n\tconst [FRebound, setFRebound] = useState('');\n\tconst [RRebound, setRRebound] = useState('');\n\tconst [FCompression, setFCompression] = useState('');\n\tconst [RCompression, setRCompression] = useState('');\n\tconst [note, setNote] = useState('');\n\n\t// todo: retrieve file from Reader: const [image, setImage] = useState();\n\t// todo: const [courseMap, setCourseMap] = useState('');\n\tlet image = undefined;\n\n\t// initialize local storage\n\t// Get the existing data\n\tvar carFormData = localStorage.getItem('carFormData');\n\n\t// If no existing data, create an array; otherwise retrieve it\n\tcarFormData = carFormData ? JSON.parse(carFormData) : {};\n\n\tconst [OKLeavePage, setOKLeavePage] = useState(true);\n\t// local storage gets the higest priority\n\t// get from localStorage\n\tif (\n\t\t!initialized &&\n\t\tcarFormData &&\n\t\tmoment(carFormData.expirationDate) > moment()\n\t) {\n\t\tsetInitialized(true);\n\t\t// Form data\n\t\tif (carFormData.year) {\n\t\t\tsetYear(carFormData.year);\n\t\t}\n\t\tif (carFormData.make) {\n\t\t\tsetMake(carFormData.make);\n\t\t}\n\t\tif (carFormData.model) {\n\t\t\tsetModel(carFormData.model);\n\t\t}\n\t\tif (carFormData.trimLevel) {\n\t\t\tsetTrimLevel(carFormData.trimLevel);\n\t\t}\n\t\tif (carFormData.share) {\n\t\t\tsetShare(carFormData.share);\n\t\t}\n\t\tif (carFormData.tireBrand) {\n\t\t\tsetTireBrand(carFormData.tireBrand);\n\t\t}\n\t\tif (carFormData.tireName) {\n\t\t\tsetTireName(carFormData.tireName);\n\t\t}\n\t\tif (carFormData.tireFrontWidth) {\n\t\t\tsetTireFrontWidth(carFormData.tireFrontWidth);\n\t\t}\n\t\tif (carFormData.tireFrontDiameter) {\n\t\t\tsetTireFrontDiameter(carFormData.tireFrontDiameter);\n\t\t}\n\t\tif (carFormData.tireFrontRatio) {\n\t\t\tsetTireFrontRatio(carFormData.tireFrontRatio);\n\t\t}\n\t\tif (carFormData.tireRearWidth) {\n\t\t\tsetTireRearWidth(carFormData.tireRearWidth);\n\t\t}\n\t\tif (carFormData.tireRearDiameter) {\n\t\t\tsetTireRearDiameter(carFormData.tireRearDiameter);\n\t\t}\n\t\tif (carFormData.tireRearRatio) {\n\t\t\tsetTireRearRatio(carFormData.tireRearRatio);\n\t\t}\n\t\tif (carFormData.frontPressure) {\n\t\t\tsetFrontPressure(carFormData.frontPressure);\n\t\t}\n\t\tif (carFormData.rearPressure) {\n\t\t\tsetRearPressure(carFormData.rearPressure);\n\t\t}\n\t\tif (carFormData.LFCamber) {\n\t\t\tsetLFCamber(carFormData.LFCamber);\n\t\t}\n\t\tif (carFormData.RFCamber) {\n\t\t\tsetRFCamber(carFormData.RFCamber);\n\t\t}\n\t\tif (carFormData.LRCamber) {\n\t\t\tsetLRCamber(carFormData.LRCamber);\n\t\t}\n\t\tif (carFormData.RRCamber) {\n\t\t\tsetRRCamber(carFormData.RRCamber);\n\t\t}\n\t\tif (carFormData.LFCaster) {\n\t\t\tsetLFCaster(carFormData.LFCaster);\n\t\t}\n\t\tif (carFormData.RFCaster) {\n\t\t\tsetRFCaster(carFormData.RFCaster);\n\t\t}\n\t\tif (carFormData.LFToe) {\n\t\t\tsetLFToe(carFormData.LFToe);\n\t\t}\n\t\tif (carFormData.RFToe) {\n\t\t\tsetRFToe(carFormData.RFToe);\n\t\t}\n\t\tif (carFormData.frontToe) {\n\t\t\tsetfrontToe(carFormData.frontToe);\n\t\t}\n\t\tif (carFormData.LRToe) {\n\t\t\tsetLRToe(carFormData.LRToe);\n\t\t}\n\t\tif (carFormData.RRToe) {\n\t\t\tsetRRToe(carFormData.RRToe);\n\t\t}\n\t\tif (carFormData.rearToe) {\n\t\t\tsetRearToe(carFormData.rearToe);\n\t\t}\n\t\tif (carFormData.FBar) {\n\t\t\tsetFBar(carFormData.FBar);\n\t\t}\n\t\tif (carFormData.RBar) {\n\t\t\tsetRBar(carFormData.RBar);\n\t\t}\n\t\tif (carFormData.FRebound) {\n\t\t\tsetFRebound(carFormData.FRebound);\n\t\t}\n\t\tif (carFormData.RRebound) {\n\t\t\tsetRRebound(carFormData.RRebound);\n\t\t}\n\t\tif (carFormData.FCompression) {\n\t\t\tsetFCompression(carFormData.FCompression);\n\t\t}\n\t\tif (carFormData.RCompression) {\n\t\t\tsetRCompression(carFormData.RCompression);\n\t\t}\n\t\tif (carFormData.note) {\n\t\t\tsetNote(carFormData.note);\n\t\t}\n\t\tif (carFormData.image) {\n\t\t\t//setImage(carFormData.image);\n\t\t\t// setImageOK(false);\n\t\t}\n\t} else if (!initialized) {\n\t\tsetInitialized(true);\n\t\t// initialize localStorage\n\t\tcarFormData['expirationDate'] = moment(\n\t\t\tmoment().add(1, 'days'),\n\t\t\tmoment.ISO_8601\n\t\t);\n\t\tcarFormData['year'] = '';\n\t\tcarFormData['make'] = '';\n\t\tcarFormData['model'] = '';\n\t\tcarFormData['trimLevel'] = '';\n\t\tcarFormData['share'] = '';\n\t\tcarFormData['tireBrand'] = '';\n\t\tcarFormData['tireName'] = '';\n\t\tcarFormData['tireFrontWidth'] = '';\n\t\tcarFormData['tireFrontDiameter'] = '';\n\t\tcarFormData['tireFrontRatio'] = '';\n\t\tcarFormData['tireRearWidth'] = '';\n\t\tcarFormData['tireRearDiameter'] = '';\n\t\tcarFormData['tireRearRatio'] = '';\n\t\tcarFormData['frontPressure'] = '';\n\t\tcarFormData['rearPressure'] = '';\n\t\tcarFormData['LFCamber'] = '';\n\t\tcarFormData['RFCamber'] = '';\n\t\tcarFormData['LRCamber'] = '';\n\t\tcarFormData['RRCamber'] = '';\n\t\tcarFormData['LFCaster'] = '';\n\t\tcarFormData['RFCaster'] = '';\n\t\tcarFormData['LFToe'] = '';\n\t\tcarFormData['RFToe'] = '';\n\t\tcarFormData['frontToe'] = '';\n\t\tcarFormData['LRToe'] = '';\n\t\tcarFormData['RRToe'] = '';\n\t\tcarFormData['rearToe'] = '';\n\t\tcarFormData['FBar'] = '';\n\t\tcarFormData['RBar'] = '';\n\t\tcarFormData['FRebound'] = '';\n\t\tcarFormData['RRebound'] = '';\n\t\tcarFormData['FCompression'] = '';\n\t\tcarFormData['RCompression'] = '';\n\t\tcarFormData['note'] = '';\n\t\tcarFormData['image'] = undefined;\n\t\tlocalStorage.setItem('carFormData', JSON.stringify(carFormData));\n\t}\n\n\tconst removeCarFormData = () => {\n\t\tlocalStorage.removeItem('carFormData');\n\t};\n\n\tconst initialValues = {\n\t\t// editorState: new EditorState.createEmpty(),\n\t\tyear: year,\n\t\tmake: make,\n\t\tmodel: model,\n\t\ttrimLevel: trimLevel,\n\t\tshare: share,\n\t\ttireBrand: tireBrand,\n\t\ttireName: tireName,\n\t\ttireFrontWidth: tireFrontWidth,\n\t\ttireFrontRatio: tireFrontRatio,\n\t\ttireFrontDiameter: tireFrontDiameter,\n\t\ttireRearWidth: tireRearWidth,\n\t\ttireRearRatio: tireRearRatio,\n\t\ttireRearDiameter: tireRearDiameter,\n\t\tfrontPressure: frontPressure,\n\t\trearPressure: rearPressure,\n\t\tLFCamber: LFCamber,\n\t\tRFCamber: RFCamber,\n\t\tLRCamber: LRCamber,\n\t\tRRCamber: RRCamber,\n\t\tLFCaster: LFCaster,\n\t\tRFCaster: RFCaster,\n\t\tLFToe: LFToe,\n\t\tRFToe: RFToe,\n\t\tfrontToe: frontToe,\n\t\tLRToe: LRToe,\n\t\tRRToe: RRToe,\n\t\trearToe: rearToe,\n\t\tFBar: FBar,\n\t\tRBar: RBar,\n\t\tFRebound: FRebound,\n\t\tRRebound: RRebound,\n\t\tFCompression: FCompression,\n\t\tRCompression: RCompression,\n\t\tnote: note,\n\t\timage: image\n\t};\n\n\tconst updateCarFormData = (key, value) => {\n\t\tconst storageData = JSON.parse(\n\t\t\tlocalStorage.getItem('carFormData')\n\t\t);\n\t\tstorageData[key] = value;\n\t\tlocalStorage.setItem('carFormData', JSON.stringify(storageData));\n\t};\n\n\tconst history = useHistory();\n\tconst submitHandler = async (values, actions) => {\n\t\ttry {\n\t\t\tconst formData = new FormData();\n\t\t\tformData.append('year', values.year);\n\t\t\tformData.append('make', values.make);\n\t\t\tformData.append('model', values.model);\n\t\t\tformData.append('trimLevel', values.trimLevel);\n\t\t\tformData.append('share', values.share);\n\t\t\tformData.append('tireBrand', values.tireBrand);\n\t\t\tformData.append('tireName', values.tireName);\n\t\t\tformData.append('tireFrontWidth', values.tireFrontWidth);\n\t\t\tformData.append('tireFrontRatio', values.tireFrontRatio);\n\t\t\tformData.append('tireFrontDiameter', values.tireFrontDiameter);\n\t\t\tformData.append('tireRearWidth', values.tireRearWidth);\n\t\t\tformData.append('tireRearRatio', values.tireRearRatio);\n\t\t\tformData.append('tireRearDiameter', values.tireRearDiameter);\n\t\t\tformData.append('frontPressure', values.frontPressure);\n\t\t\tformData.append('rearPressure', values.rearPressure);\n\n\t\t\tformData.append('LFCamber', values.LFCamber);\n\t\t\tformData.append('RFCamber', values.RFCamber);\n\t\t\tformData.append('LRCamber', values.LRCamber);\n\t\t\tformData.append('RRCamber', values.RRCamber);\n\t\t\tformData.append('LFCaster', values.LFCaster);\n\t\t\tformData.append('RFCaster', values.RFCaster);\n\t\t\tformData.append('LFToe', values.LFToe);\n\t\t\tformData.append('RFToe', values.RFToe);\n\t\t\tformData.append('frontToe', values.frontToe);\n\t\t\tformData.append('LRToe', values.LRToe);\n\t\t\tformData.append('RRToe', values.RRToe);\n\t\t\tformData.append('rearToe', values.rearToe);\n\t\t\tformData.append('FBar', values.FBar);\n\t\t\tformData.append('RBar', values.RBar);\n\n\t\t\tformData.append('FRebound', values.FRebound);\n\t\t\tformData.append('RRebound', values.RRebound);\n\t\t\tformData.append('FCompression', values.FCompression);\n\t\t\tformData.append('RCompression', values.RCompression);\n\t\t\tformData.append('note', values.note);\n\t\t\tformData.append('carImage', values.image);\n\n\t\t\tconst [\n\t\t\t\tresponseData,\n\t\t\t\tresponseStatus,\n\t\t\t\tresponseMessage\n\t\t\t] = await sendRequest(\n\t\t\t\tprocess.env.REACT_APP_BACKEND_URL + '/cars',\n\t\t\t\t'POST',\n\t\t\t\tformData,\n\t\t\t\t{\n\t\t\t\t\t// adding JWT to header for authentication\n\t\t\t\t\tAuthorization: 'Bearer ' + userAuthContext.userToken\n\t\t\t\t}\n\t\t\t);\n\t\t\tsetOKLeavePage(true);\n\t\t\t// Redirect the club to a diffrent page\n\t\t\thistory.push(`/users/garagewrapper/${userAuthContext.userId}`);\n\t\t} catch (err) {}\n\t};\n\n\t/***** Form Validation Section  *****/\n\t// 1. Field level: Field validate={validateName}. This validates when Field is onBlur\n\t// 3. Submit: use Formik isValid to enable the button.  Formik submission will validate everything.\n\tconst [validateYear, setValidateYear] = useState(() => value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Year is required.';\n\t\t}\n\t\treturn error;\n\t});\n\n\tconst [validateMake, setValidateMake] = useState(() => value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Make is required.';\n\t\t}\n\t\treturn error;\n\t});\n\n\tconst [validateModel, setValidateModel] = useState(() => value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Model is required.';\n\t\t}\n\t\treturn error;\n\t});\n\n\tconst [validateTireBrand, setValidateTireBrand] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Tire Brand is required.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\n\tconst [validateTireName, setValidateTireName] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Tire Name is required.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\n\tconst [\n\t\tvalidateTireFrontWidth,\n\t\tsetValidateTireFrontWidth\n\t] = useState(() => value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Front Tire Width is required.';\n\t\t}\n\t\treturn error;\n\t});\n\tconst [\n\t\tvalidateTireFrontRatio,\n\t\tsetValidateTireFrontRatio\n\t] = useState(() => value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Front Tire Ratio is required.';\n\t\t}\n\t\treturn error;\n\t});\n\tconst [\n\t\tvalidateTireFrontDiameter,\n\t\tsetValidateTireFrontDiameter\n\t] = useState(() => value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Front Tire Diameter is required.';\n\t\t}\n\t\treturn error;\n\t});\n\tconst [validateTireRearWidth, setValidateTireRearWidth] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Rear Tire Width is required.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\tconst [validateTireRearRatio, setValidateTireRearRatio] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Rear Tire Ratio is required.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\tconst [\n\t\tvalidateTireRearDiameter,\n\t\tsetValidateTireRearDiameter\n\t] = useState(() => value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Rear Tire Diameter is required.';\n\t\t}\n\t\treturn error;\n\t});\n\n\tconst validateImageSize = value => {\n\t\tlet error;\n\t\tif (value && value.size > 1500000) {\n\t\t\terror = 'File size needs to be smaller than 1.5MB';\n\t\t}\n\t\treturn error;\n\t};\n\t/***** End of Form Validation *****/\n\n\tconst carForm = values => (\n\t\t<div className=\"event-form\">\n\t\t\t<div className=\"event-form-header\">\n\t\t\t\t<h4>\n\t\t\t\t\t{userName}\n\t\t\t\t\t's new car\n\t\t\t\t</h4>\n\t\t\t\t<hr className=\"event-form__hr\" />\n\t\t\t</div>\n\t\t\t<Formik\n\t\t\t\tenableReinitialize={true}\n\t\t\t\tinitialValues={initialValues}\n\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\tsubmitHandler(values);\n\t\t\t\t\tif (!actions.isSubmitting) {\n\t\t\t\t\t\tsetValidateYear(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Year is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateMake(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Make is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateModel(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Model is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateTireBrand(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Tire Brand is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateTireName(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Tire Name is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateTireFrontWidth(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Front Tire Width is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateTireFrontRatio(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Front Tire Ratio is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateTireFrontDiameter(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Front Tire Diameter is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateTireRearWidth(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Rear Tire Width is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateTireRearRatio(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Rear Tire Ratio is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateTireRearDiameter(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Rear Tire Diameter is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}}>\n\t\t\t\t{({\n\t\t\t\t\tvalues,\n\t\t\t\t\terrors,\n\t\t\t\t\tisSubmitting,\n\t\t\t\t\tisValid,\n\t\t\t\t\tsetFieldValue,\n\t\t\t\t\ttouched,\n\t\t\t\t\thandleBlur\n\t\t\t\t}) => (\n\t\t\t\t\t<Form className=\"event-form-container\">\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"year\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\t<i className=\"far fa-car-side\" />\n\t\t\t\t\t\t\t&nbsp; Year &nbsp;\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"far fa-gas-pump\"\n\t\t\t\t\t\t\t\tstyle={{ color: 'Tomato' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"make\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\tMake &nbsp;\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"far fa-gas-pump\"\n\t\t\t\t\t\t\t\tstyle={{ color: 'Tomato' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"model\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\tModel &nbsp;\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"far fa-gas-pump\"\n\t\t\t\t\t\t\t\tstyle={{ color: 'Tomato' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"trimLevel\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\tTrim\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"year\"\n\t\t\t\t\t\t\tname=\"year\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tvalidate={validateYear}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.year will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('year', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"make\"\n\t\t\t\t\t\t\tname=\"make\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tvalidate={validateMake}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.make will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('make', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"model\"\n\t\t\t\t\t\t\tname=\"model\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tvalidate={validateModel}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.model will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('model', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"trimLevel\"\n\t\t\t\t\t\t\tname=\"trimLevel\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.trimLevel will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('trimLevel', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{(touched.year ||\n\t\t\t\t\t\t\ttouched.make ||\n\t\t\t\t\t\t\ttouched.model ||\n\t\t\t\t\t\t\ttouched.trimLevel) &&\n\t\t\t\t\t\t\t(errors.year ||\n\t\t\t\t\t\t\t\terrors.make ||\n\t\t\t\t\t\t\t\terrors.model ||\n\t\t\t\t\t\t\t\terrors.trimLevel) && (\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<div className=\"event-form__field-error_quarter\">\n\t\t\t\t\t\t\t\t\t\t{errors.year}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"event-form__field-error_quarter\">\n\t\t\t\t\t\t\t\t\t\t{errors.make}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"event-form__field-error_quarter\">\n\t\t\t\t\t\t\t\t\t\t{errors.model}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"event-form__field-error_quarter\">\n\t\t\t\t\t\t\t\t\t\t{errors.trimLevel}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"tireBrand\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_half\">\n\t\t\t\t\t\t\t<i className=\"fad fa-tire\" />\n\t\t\t\t\t\t\t&nbsp; Tire Brand &nbsp;\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"far fa-gas-pump\"\n\t\t\t\t\t\t\t\tstyle={{ color: 'Tomato' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"tireName\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_half\">\n\t\t\t\t\t\t\tTire Name &nbsp;\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"far fa-gas-pump\"\n\t\t\t\t\t\t\t\tstyle={{ color: 'Tomato' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"tireBrand\"\n\t\t\t\t\t\t\tname=\"tireBrand\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_half\"\n\t\t\t\t\t\t\tvalidate={validateTireBrand}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.tireBrand will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('tireBrand', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"tireName\"\n\t\t\t\t\t\t\tname=\"tireName\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_half\"\n\t\t\t\t\t\t\tvalidate={validateTireName}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.name will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('tireName', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{(touched.tireBrand || touched.tireName) &&\n\t\t\t\t\t\t\t(errors.tireBrand || errors.tireName) && (\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<div className=\"event-form__field-error_half\">\n\t\t\t\t\t\t\t\t\t\t{errors.tireBrand}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"event-form__field-error_half\">\n\t\t\t\t\t\t\t\t\t\t{errors.tireName}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"tireFrontWidth\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\t<i className=\"far fa-ruler-horizontal\" />\n\t\t\t\t\t\t\t&nbsp; Front Tire Width &nbsp;\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"far fa-gas-pump\"\n\t\t\t\t\t\t\t\tstyle={{ color: 'Tomato' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"tireFrontRatio\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\tFront Tire Ratio &nbsp;\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"far fa-gas-pump\"\n\t\t\t\t\t\t\t\tstyle={{ color: 'Tomato' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"tireFrontDiameter\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\tFront Tire Diameter &nbsp;\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"far fa-gas-pump\"\n\t\t\t\t\t\t\t\tstyle={{ color: 'Tomato' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"tireFrontWidth\"\n\t\t\t\t\t\t\tname=\"tireFrontWidth\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tvalidate={validateTireFrontWidth}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.tireFrontWidth will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData(\n\t\t\t\t\t\t\t\t\t'tireFrontWidth',\n\t\t\t\t\t\t\t\t\tevent.target.value\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"tireFrontRatio\"\n\t\t\t\t\t\t\tname=\"tireFrontRatio\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tvalidate={validateTireFrontRatio}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.tireFrontRatio will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData(\n\t\t\t\t\t\t\t\t\t'tireFrontRatio',\n\t\t\t\t\t\t\t\t\tevent.target.value\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"tireFrontDiameter\"\n\t\t\t\t\t\t\tname=\"tireFrontDiameter\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tvalidate={validateTireFrontDiameter}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.tireFrontDiameter will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData(\n\t\t\t\t\t\t\t\t\t'tireFrontDiameter',\n\t\t\t\t\t\t\t\t\tevent.target.value\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{(touched.tireFrontWidth ||\n\t\t\t\t\t\t\ttouched.tireFrontRatio ||\n\t\t\t\t\t\t\ttouched.tireFrontDiameter) &&\n\t\t\t\t\t\t\t(errors.tireFrontWidth ||\n\t\t\t\t\t\t\t\terrors.tireFrontRatio ||\n\t\t\t\t\t\t\t\terrors.tireFrontDiameter) && (\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<div className=\"event-form__field-error_third\">\n\t\t\t\t\t\t\t\t\t\t{errors.tireFrontWidth}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"event-form__field-error_third\">\n\t\t\t\t\t\t\t\t\t\t{errors.tireFrontRatio}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"event-form__field-error_third\">\n\t\t\t\t\t\t\t\t\t\t{errors.tireFrontDiameter}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"tireRearWidth\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\t<i className=\"far fa-ruler-horizontal\" />\n\t\t\t\t\t\t\t&nbsp; Rear Tire Width &nbsp;\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"far fa-gas-pump\"\n\t\t\t\t\t\t\t\tstyle={{ color: 'Tomato' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"tireRearRatio\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\tRear Tire Ratio &nbsp;\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"far fa-gas-pump\"\n\t\t\t\t\t\t\t\tstyle={{ color: 'Tomato' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"tireRearDiameter\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\tRear Tire Diameter &nbsp;\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"far fa-gas-pump\"\n\t\t\t\t\t\t\t\tstyle={{ color: 'Tomato' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"tireRearWidth\"\n\t\t\t\t\t\t\tname=\"tireRearWidth\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tvalidate={validateTireRearWidth}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.tireRearWidth will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData(\n\t\t\t\t\t\t\t\t\t'tireRearWidth',\n\t\t\t\t\t\t\t\t\tevent.target.value\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"tireRearRatio\"\n\t\t\t\t\t\t\tname=\"tireRearRatio\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tvalidate={validateTireRearRatio}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.tireRearRatio will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData(\n\t\t\t\t\t\t\t\t\t'tireRearRatio',\n\t\t\t\t\t\t\t\t\tevent.target.value\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"tireRearDiameter\"\n\t\t\t\t\t\t\tname=\"tireRearDiameter\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tvalidate={validateTireRearDiameter}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.tireRearDiameter will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData(\n\t\t\t\t\t\t\t\t\t'tireRearDiameter',\n\t\t\t\t\t\t\t\t\tevent.target.value\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{(touched.tireRearWidth ||\n\t\t\t\t\t\t\ttouched.tireRearRatio ||\n\t\t\t\t\t\t\ttouched.tireRearDiameter) &&\n\t\t\t\t\t\t\t(errors.tireRearWidth ||\n\t\t\t\t\t\t\t\terrors.tireRearRatio ||\n\t\t\t\t\t\t\t\terrors.tireRearDiameter) && (\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<div className=\"event-form__field-error_third\">\n\t\t\t\t\t\t\t\t\t\t{errors.tireRearWidth}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"event-form__field-error_third\">\n\t\t\t\t\t\t\t\t\t\t{errors.tireRearRatio}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"event-form__field-error_third\">\n\t\t\t\t\t\t\t\t\t\t{errors.tireRearDiameter}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t{/* This first checkbox will result in a boolean value being stored. Note that the `value` prop\n\t\t\t\t\t            \t\t\t\ton the <Field/> is omitted */}\n\t\t\t\t\t\t<label className=\"event-form__checkbox\">\n\t\t\t\t\t\t\t<Field type=\"checkbox\" name=\"share\" />\n\t\t\t\t\t\t\t{/* {`${values.share}`} */} &nbsp; Check if you want to\n\t\t\t\t\t\t\tmake the following information visible to public\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"frontPressure\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_half\">\n\t\t\t\t\t\t\t<i className=\"fal fa-tire-pressure-warning\" />\n\t\t\t\t\t\t\t&nbsp; Front Tire Pressure psi\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"rearPressure\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_half\">\n\t\t\t\t\t\t\tRear Tire Pressure psi\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"frontPressure\"\n\t\t\t\t\t\t\tname=\"frontPressure\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_half\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.frontPressure will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData(\n\t\t\t\t\t\t\t\t\t'frontPressure',\n\t\t\t\t\t\t\t\t\tevent.target.value\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.frontPressure && errors.frontPressure && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.frontPressure}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"rearPressure\"\n\t\t\t\t\t\t\tname=\"rearPressure\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_half\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.rearPressure will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('rearPressure', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.rearPressure && errors.rearPressure && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.rearPressure}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"LFCamber\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\t<i className=\"fal fa-ruler-triangle fa-rotate-90\" />\n\t\t\t\t\t\t\t&nbsp; Left Front Camber &#x00B0;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"RFCamber\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\tRight Front Camber &#x00B0;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"LRCamber\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\tLeft Rear Camber &#x00B0;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"RRCamber\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\tRight Rear Camber &#x00B0;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"LFCamber\"\n\t\t\t\t\t\t\tname=\"LFCamber\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.LFCamber will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('LFCamber', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.LFCamber && errors.LFCamber && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.LFCamber}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"RFCamber\"\n\t\t\t\t\t\t\tname=\"RFCamber\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.RFCamber will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('RFCamber', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.RFCamber && errors.RFCamber && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.RFCamber}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"LRCamber\"\n\t\t\t\t\t\t\tname=\"LRCamber\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.LRCamber will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('LRCamber', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.LRCamber && errors.LRCamber && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.LRCamber}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"RRCamber\"\n\t\t\t\t\t\t\tname=\"RRCamber\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.RRCamber will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('RRCamber', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.RRCamber && errors.RRCamber && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.RRCamber}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"LFCaster\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_half\">\n\t\t\t\t\t\t\t<i className=\"fal fa-starfighter-alt\" />\n\t\t\t\t\t\t\t&nbsp; Left Front Caster &#x00B0;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"RFCaster\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_half\">\n\t\t\t\t\t\t\tRight Front Caster &#x00B0;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"LFCaster\"\n\t\t\t\t\t\t\tname=\"LFCaster\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_half\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.LFCaster will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('LFCaster', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.LFCaster && errors.LFCaster && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.LFCaster}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"RFCaster\"\n\t\t\t\t\t\t\tname=\"RFCaster\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_half\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.RFCaster will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('RFCaster', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.RFCaster && errors.RFCaster && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.RFCaster}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"LFToe\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\t<i className=\"far fa-steering-wheel \" />\n\t\t\t\t\t\t\t&nbsp; Left Front Toe &#x2033;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"RFToe\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\tRight Front Toe &#x2033;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"frontToe\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\tFront Toe &#x2033;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"LFToe\"\n\t\t\t\t\t\t\tname=\"LFToe\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.LFToe will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('LFToe', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"RFToe\"\n\t\t\t\t\t\t\tname=\"RFToe\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.RFToe will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('RFToe', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"frontToe\"\n\t\t\t\t\t\t\tname=\"frontToe\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.frontToe will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('frontToe', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.LFToe && errors.LFToe && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.LFToe}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{touched.RFToe && errors.RFToe && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.RFToe}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{touched.frontToe && errors.frontToe && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.frontToe}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"LRToe\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\t<i className=\"far fa-steering-wheel\" />\n\t\t\t\t\t\t\t&nbsp; Left Rear Toe &#x2033;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"RRToe\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\tRight Rear Toe &#x2033;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"rearToe\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\tRear Toe &#x2033;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"LRToe\"\n\t\t\t\t\t\t\tname=\"LRToe\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.LRToe will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('LRToe', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"RRToe\"\n\t\t\t\t\t\t\tname=\"RRToe\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.RRToe will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('RRToe', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"rearToe\"\n\t\t\t\t\t\t\tname=\"rearToe\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.rearToe will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('rearToe', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.LRToe && errors.LRToe && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.LRToe}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{touched.RRToe && errors.RRToe && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.RRToe}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{touched.rearToe && errors.rearToe && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.rearToe}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"FBar\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_half\">\n\t\t\t\t\t\t\t<i className=\"fas fa-line-height fa-rotate-270\" />\n\t\t\t\t\t\t\t&nbsp; Front Sway Bar\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"RBar\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_half\">\n\t\t\t\t\t\t\tRear Sway Bar\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"FBar\"\n\t\t\t\t\t\t\tname=\"FBar\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_half\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.FBar will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('FBar', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.FBar && errors.FBar && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.FBar}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"RBar\"\n\t\t\t\t\t\t\tname=\"RBar\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_half\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.RBar will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('RBar', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.RBar && errors.RBar && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.RBar}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"FRebound\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\t<i className=\"far fa-sort-numeric-up-alt\" />\n\t\t\t\t\t\t\t&nbsp; Front Rebound\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"RRebound\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\tRear Rebound\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"FCompression\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\tFront Compression\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"RCompression\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\tRear Compression\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"FRebound\"\n\t\t\t\t\t\t\tname=\"FRebound\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.FRebound will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('FRebound', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.FRebound && errors.FRebound && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.FRebound}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"RRebound\"\n\t\t\t\t\t\t\tname=\"RRebound\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.RRebound will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('RRebound', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.RRebound && errors.RRebound && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.RRebound}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"FCompression\"\n\t\t\t\t\t\t\tname=\"FCompression\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.FCompression will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('FCompression', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.FCompression && errors.FCompression && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.FCompression}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"RCompression\"\n\t\t\t\t\t\t\tname=\"RCompression\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.RCompression will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('RCompression', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.RCompression && errors.RCompression && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.RCompression}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label htmlFor=\"note\" className=\"event-form__label\">\n\t\t\t\t\t\t\t<i className=\"far fa-sticky-note\" />\n\t\t\t\t\t\t\t&nbsp; Note(max: 350 characters)\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"note\"\n\t\t\t\t\t\t\tname=\"note\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tcomponent=\"textarea\"\n\t\t\t\t\t\t\trows=\"5\"\n\t\t\t\t\t\t\tcols=\"70\"\n\t\t\t\t\t\t\tmaxLength=\"350\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_textarea\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.note will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('note', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.note && errors.note && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.note}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"image\"\n\t\t\t\t\t\t\tname=\"image\"\n\t\t\t\t\t\t\ttitle=\"image\"\n\t\t\t\t\t\t\tcomponent={ImageUploader}\n\t\t\t\t\t\t\tvalidate={validateImageSize}\n\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\n\t\t\t\t\t\t\terrorMessage={errors.image ? errors.image : ''}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\t// if (event.target.value) {\n\t\t\t\t\t\t\t\t// \tsetImageOK(false);\n\t\t\t\t\t\t\t\t// } else {\n\t\t\t\t\t\t\t\t// \tsetImageOK(true);\n\t\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tlabelStyle=\"event-form__label\"\n\t\t\t\t\t\t\tinputStyle=\"event-form__field-select\"\n\t\t\t\t\t\t\tpreviewStyle=\"image-upload__preview\"\n\t\t\t\t\t\t\terrorStyle=\"event-form__field-error\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\tmargin-left=\"1.5rem\"\n\t\t\t\t\t\t\tdisabled={isSubmitting || !isValid}>\n\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<NavigationPrompt\n\t\t\t\t\t\t\tafterConfirm={() => {\n\t\t\t\t\t\t\t\tformContext.setIsInsideForm(false);\n\t\t\t\t\t\t\t\tremoveCarFormData();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t// Confirm navigation if going to a path that does not start with current path.\n\t\t\t\t\t\t\t// We don't want to confirm navigation when OKLeavePage === true and redirect to '/users/auth' due to\n\t\t\t\t\t\t\t// authentication issue\n\t\t\t\t\t\t\twhen={(crntLocation, nextLocation) => {\n\t\t\t\t\t\t\t\t// remove UserRedirectURL from memory\n\t\t\t\t\t\t\t\tuserAuthContext.setUserRedirectURL(null);\n\t\t\t\t\t\t\t\t// OKLeavePage meaning form was not touched yet\n\t\t\t\t\t\t\t\tif (OKLeavePage) {\n\t\t\t\t\t\t\t\t\tformContext.setIsInsideForm(false);\n\t\t\t\t\t\t\t\t\tremoveCarFormData();\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// nextLocation.pathname !== '/users/auth' &&  --- adding this line causing state update on an\n\t\t\t\t\t\t\t\t\t// unmounted component issue.  Without it, confirmation modal will pop up\n\t\t\t\t\t\t\t\t\t// always gives the warning, because we want to be able to\n\t\t\t\t\t\t\t\t\t// clear localStorage after confirm\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t!nextLocation ||\n\t\t\t\t\t\t\t\t\t\t!nextLocation.pathname.startsWith(\n\t\t\t\t\t\t\t\t\t\t\tcrntLocation.pathname\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t{({ isActive, onCancel, onConfirm }) => {\n\t\t\t\t\t\t\t\tif (isActive) {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<PromptModal\n\t\t\t\t\t\t\t\t\t\t\tonCancel={onCancel}\n\t\t\t\t\t\t\t\t\t\t\tonConfirm={onConfirm}\n\t\t\t\t\t\t\t\t\t\t\tcontentClass=\"event-item__modal-content\"\n\t\t\t\t\t\t\t\t\t\t\tfooterClass=\"event-item__modal-actions\"\n\t\t\t\t\t\t\t\t\t\t\terror=\"You sure want to leave? Unsaved data will be lost.\">\n\t\t\t\t\t\t\t\t\t\t\t{/* render props.children */}\n\t\t\t\t\t\t\t\t\t\t</PromptModal>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\tThis is probably an anti-pattern but ya know...\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t</NavigationPrompt>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t{isLoading && (\n\t\t\t\t<div className=\"center\">\n\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{carForm()}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default NewCar;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/hooks/clubLoginValidation-hook.js",[],["505","506"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/components/EditEventItem.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/entryDashboard/pages/EventWaiver.js",["507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/Navigation/NavLinks.js",["525","526"],"import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport {\n\tClubAuthContext,\n\tUserAuthContext\n} from '../../context/auth-context';\nimport { FormContext } from '../../context/form-context';\nimport { useLogOut } from '../../hooks/logout-hook';\nimport ErrorModal from '../UIElements/ErrorModal';\nimport LoadingSpinner from '../UIElements/LoadingSpinner';\n\nimport './NavLinks.css';\n\nconst NavLinks = props => {\n\t/* ----- Club Section ----- */\n\tconst clubAuthContext = useContext(ClubAuthContext);\n\tconst clubLoggedIn = clubAuthContext.isClubLoggedIn;\n\tlet cid = clubAuthContext.clubId;\n\n\t// check if we are inside a form page, we want to disable LOGOUT button\n\t// to avoid race condition between existing form page and logout handler\n\tconst formContext = useContext(FormContext);\n\tconst isInsideForm = formContext.isInsideForm;\n\n\t/* ----- User Section ----- */\n\tconst userAuthContext = useContext(UserAuthContext);\n\tconst userLoggedIn = userAuthContext.isUserLoggedIn;\n\tlet uId = userAuthContext.userId;\n\n\tconst { isLoading, error, logoutHandler, clearError } = useLogOut();\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t<ul className=\"nav-links\">\n\t\t\t\t{/* Make clubManager the entry page of Dashboard  */}\n\t\t\t\t{clubLoggedIn && (\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<NavLink to={`/clubs/clubManager`} exact>\n\t\t\t\t\t\t\tDASHBOARD\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t</li>\n\t\t\t\t)}\n\t\t\t\t{!clubLoggedIn && !userLoggedIn && (\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<NavLink to=\"/users/auth\" exact>\n\t\t\t\t\t\t\tDriver Login\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t</li>\n\t\t\t\t)}\n\t\t\t\t{!clubLoggedIn && !userLoggedIn && (\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<NavLink to=\"/clubs/auth\" exact>\n\t\t\t\t\t\t\tClub Login\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t</li>\n\t\t\t\t)}\n\t\t\t\t{/* {clubLoggedIn && !isInsideForm && ( */}\n\t\t\t\t{clubLoggedIn && (\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<button onClick={logoutHandler}>LOGOUT</button>\n\t\t\t\t\t\t{isLoading && <LoadingSpinner asOverlay />}\n\t\t\t\t\t</li>\n\t\t\t\t)}\n\t\t\t\t{/********* user section *******/}\n\t\t\t\t{userLoggedIn && (\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<NavLink to={`/users/events/${uId}`} exact>\n\t\t\t\t\t\t\tMy EVENTS\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t</li>\n\t\t\t\t)}\n\t\t\t\t{userLoggedIn && (\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<NavLink to={`/users/garagewrapper/${uId}`} exact>\n\t\t\t\t\t\t\tMy Garage\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t</li>\n\t\t\t\t)}\n\t\t\t\t{userLoggedIn && (\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<NavLink to={'/users/cars/new'} exact>\n\t\t\t\t\t\t\tAdd Car\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t</li>\n\t\t\t\t)}\n\t\t\t\t{userLoggedIn && (\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<button onClick={logoutHandler}>LOGOUT</button>\n\t\t\t\t\t\t{isLoading && <LoadingSpinner asOverlay />}\n\t\t\t\t\t</li>\n\t\t\t\t)}\n\t\t\t</ul>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default NavLinks;\n",["527","528"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/entryDashboard/pages/Classification.js",["529","530"],"import React, { useContext, useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Field, Form, Formik } from 'formik';\nimport moment from 'moment';\nimport NavigationPrompt from 'react-router-navigation-prompt';\n\n// import { EditorState } from 'draft-js';\n// import { RichEditorExample } from '../components/RichEditor';\nimport 'draft-js/dist/Draft.css';\n\nimport Button from '../../shared/components/FormElements/Button';\nimport PromptModal from '../../shared/components/UIElements/PromptModal';\nimport { UserAuthContext } from '../../shared/context/auth-context';\nimport { FormContext } from '../../shared/context/form-context';\n\nimport '../../shared/css/EventForm.css';\n\nconst Classification = props => {\n\tconst [initialized, setInitialized] = useState(false);\n\tconst userAuthContext = useContext(UserAuthContext);\n\tconst formContext = useContext(FormContext);\n\n\t// continueStatus controls when to return props.newEventStatus back to NewEventManager\n\tconst [continueStatus, setContinueStatus] = useState(false);\n\tconst [formValues, setFormValues] = useState();\n\n\t// this is the return function that passes finishing status back to NewEventManager\n\tuseEffect(() => {\n\t\tif (continueStatus) {\n\t\t\tprops.classificationStatus(continueStatus);\n\t\t\tif (formValues !== undefined && formValues) {\n\t\t\t\tprops.carNumberHandler(formValues.carNumber);\n\t\t\t\tprops.raceClassHandler(formValues.raceClass);\n\t\t\t}\n\t\t}\n\t}, [continueStatus, props, formValues]);\n\n\tuseEffect(() => {\n\t\tlet mounted = true;\n\t\tif (mounted) {\n\t\t\tformContext.setIsInsideForm(true);\n\t\t}\n\t\treturn () => {\n\t\t\tmounted = false;\n\t\t};\n\t}, [formContext]);\n\n\t// If we are re-directing to this page, we want to clear up clubRedirectURL\n\tlet location = useLocation();\n\tReact.useEffect(() => {\n\t\tlet path = location.pathname;\n\t\tlet userRedirectURL = userAuthContext.userRedirectURL;\n\t\tif (path === userRedirectURL) {\n\t\t\t// re-init redirectURL after re-direction route\n\t\t\tuserAuthContext.setUserRedirectURL(null);\n\t\t}\n\t}, [location, userAuthContext]);\n\n\tconst [carNumber, setCarNumber] = useState('');\n\tconst [raceClass, setRaceClass] = useState('');\n\n\t// initialize local storage\n\t// Get the existing data\n\tvar eventFormData = localStorage.getItem('eventFormData');\n\n\t// If no existing data, create an array; otherwise retrieve it\n\teventFormData = eventFormData ? JSON.parse(eventFormData) : {};\n\n\tconst [OKLeavePage, setOKLeavePage] = useState(true);\n\t// local storage gets the higest priority\n\t// get from localStorage\n\tif (\n\t\t!initialized &&\n\t\teventFormData &&\n\t\tmoment(eventFormData.expirationDate) > moment()\n\t) {\n\t\tsetInitialized(true);\n\t\t// Form data\n\t\tif (eventFormData.carNumber) {\n\t\t\tsetCarNumber(eventFormData.carNumber);\n\t\t}\n\t\tif (eventFormData.raceClass) {\n\t\t\tsetRaceClass(eventFormData.raceClass);\n\t\t}\n\t} else if (!initialized) {\n\t\tsetInitialized(true);\n\t\t// initialize localStorage\n\t\teventFormData['expirationDate'] = moment(\n\t\t\tmoment().add(1, 'days'),\n\t\t\tmoment.ISO_8601\n\t\t);\n\t\teventFormData['carNumber'] = '';\n\t\teventFormData['raceGroup'] = '';\n\t\tlocalStorage.setItem(\n\t\t\t'eventFormData',\n\t\t\tJSON.stringify(eventFormData)\n\t\t);\n\t}\n\n\tconst removeEventFormData = () => {\n\t\tlocalStorage.removeItem('eventFormData');\n\t};\n\n\tconst initialValues = {\n\t\tcarNumber: carNumber,\n\t\traceClass: raceClass\n\t};\n\n\tconst updateEventFormData = (key, value) => {\n\t\tconst storageData = JSON.parse(\n\t\t\tlocalStorage.getItem('eventFormData')\n\t\t);\n\t\tstorageData[key] = value;\n\t\tlocalStorage.setItem(\n\t\t\t'eventFormData',\n\t\t\tJSON.stringify(storageData)\n\t\t);\n\t};\n\n\t/***** Form Validation Section  *****/\n\tconst [validateCarNumber, setValidateCarNumber] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Car number is required.';\n\t\t\t}\n\t\t\tlet numVal = parseInt(value);\n\t\t\tif (isNaN(numVal)) {\n\t\t\t\terror = 'Please inputer a number.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\n\tconst [validateRaceClass, setValidateRaceClass] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Race class is required.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\t/***** End of Form Validation *****/\n\n\tconst submitHandler = values => {\n\t\t// return back to NewEntryManager\n\t\tsetContinueStatus(true);\n\t\tsetFormValues(values);\n\t};\n\n\tconst eventForm = values => (\n\t\t<div className=\"event-form\">\n\t\t\t<div className=\"event-form-header\">\n\t\t\t\t<h4>Race Number and Class</h4>\n\t\t\t\t<h5>&nbsp;All fields are required</h5>\n\t\t\t\t<hr className=\"event-form__hr\" />\n\t\t\t</div>\n\t\t\t<Formik\n\t\t\t\tenableReinitialize={true}\n\t\t\t\tinitialValues={initialValues}\n\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\tsubmitHandler(values);\n\t\t\t\t}}>\n\t\t\t\t{({\n\t\t\t\t\tvalues,\n\t\t\t\t\terrors,\n\t\t\t\t\tisSubmitting,\n\t\t\t\t\tisValid,\n\t\t\t\t\tsetFieldValue,\n\t\t\t\t\tsubmitted,\n\t\t\t\t\ttouched,\n\t\t\t\t\thandleBlur\n\t\t\t\t}) => (\n\t\t\t\t\t<Form className=\"event-form-container\">\n\t\t\t\t\t\t<label htmlFor=\"carNumber\" className=\"event-form__label\">\n\t\t\t\t\t\t\t<i className=\"fal fa-question-circle\"></i>\n\t\t\t\t\t\t\t&nbsp; Car Number\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"carNumber\"\n\t\t\t\t\t\t\tname=\"carNumber\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tvalidate={validateCarNumber}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.name will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateEventFormData('carNumber', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.carNumber && errors.carNumber && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error_quarter\">\n\t\t\t\t\t\t\t\t{errors.carNumber}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label htmlFor=\"numGroups\" className=\"event-form__label\">\n\t\t\t\t\t\t\t<i className=\"fal fa-users-class\"></i>\n\t\t\t\t\t\t\t{/* <i className=\"fad fa-cars\"></i> */}\n\t\t\t\t\t\t\t&nbsp; Race Class\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"raceClass\"\n\t\t\t\t\t\t\tname=\"raceClass\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tvalidate={validateRaceClass}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateEventFormData('raceClass', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}></Field>\n\t\t\t\t\t\t{touched.raceClass && errors.raceClass && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error_quarter\">\n\t\t\t\t\t\t\t\t{errors.raceClass}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tsize=\"small-block\"\n\t\t\t\t\t\t\tmargin-left=\"1.5rem\"\n\t\t\t\t\t\t\tdisabled={isSubmitting || !isValid}>\n\t\t\t\t\t\t\tSAVE &amp; CONTINUE\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<NavigationPrompt\n\t\t\t\t\t\t\tafterConfirm={() => {\n\t\t\t\t\t\t\t\tformContext.setIsInsideForm(false);\n\t\t\t\t\t\t\t\tremoveEventFormData();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t// Confirm navigation if going to a path that does not start with current path.\n\t\t\t\t\t\t\t// We don't want to confirm navigation when OKLeavePage === true and redirect to '/clubs/auth' due to\n\t\t\t\t\t\t\t// authentication issue\n\t\t\t\t\t\t\twhen={(crntLocation, nextLocation) => {\n\t\t\t\t\t\t\t\t// remove UserRedirectURL from memory\n\t\t\t\t\t\t\t\tuserAuthContext.setUserRedirectURL(null);\n\t\t\t\t\t\t\t\t// OKLeavePage meaning form was not touched yet\n\t\t\t\t\t\t\t\tif (OKLeavePage) {\n\t\t\t\t\t\t\t\t\tformContext.setIsInsideForm(false);\n\t\t\t\t\t\t\t\t\tremoveEventFormData();\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// nextLocation.pathname !== '/clubs/auth' &&  --- adding this line causing state update on an\n\t\t\t\t\t\t\t\t\t// unmounted component issue.  Without it, confirmation modal will pop up\n\t\t\t\t\t\t\t\t\t// always gives the warning, because we want to be able to\n\t\t\t\t\t\t\t\t\t// clear localStorage after confirm\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t!nextLocation ||\n\t\t\t\t\t\t\t\t\t\t!nextLocation.pathname.startsWith(\n\t\t\t\t\t\t\t\t\t\t\tcrntLocation.pathname\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t{({ isActive, onCancel, onConfirm }) => {\n\t\t\t\t\t\t\t\tif (isActive) {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<PromptModal\n\t\t\t\t\t\t\t\t\t\t\tonCancel={onCancel}\n\t\t\t\t\t\t\t\t\t\t\tonConfirm={onConfirm}\n\t\t\t\t\t\t\t\t\t\t\tcontentclassName=\"event-item__modal-content\"\n\t\t\t\t\t\t\t\t\t\t\tfooterclassName=\"event-item__modal-actions\"\n\t\t\t\t\t\t\t\t\t\t\terror=\"You sure want to leave? Unsaved data will be lost.\">\n\t\t\t\t\t\t\t\t\t\t\t{/* render props.children */}\n\t\t\t\t\t\t\t\t\t\t</PromptModal>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\tThis is probably an anti-pattern but ya know...\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t</NavigationPrompt>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t</div>\n\t);\n\n\treturn <React.Fragment>{eventForm()}</React.Fragment>;\n};\n\nexport default Classification;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/UIElements/Map.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubs/components/ClubItem.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/form.jsx",["531","532","533"],"import React, { useContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useParams } from 'react-router-dom';\n\nimport Button from '../../shared/components/FormElements/Button';\nimport { EventEmitter } from 'fbemitter';\nimport FormValidator from './form-validator';\nimport FormElements from './form-elements';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\n\nimport '../scss/form-builder-form.scss';\n\nimport { UserAuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n/**\n * <Form /> component. We will call it FormBuilderGenerator\n */\n\nconst {\n\tImage,\n\tCheckboxes,\n\tSignature,\n\tDownload,\n\tCamera,\n\tParagraphCheckbox,\n\tMultipleRadioButtonGroup\n} = FormElements;\n\n// This is the technique used to call hook in the class using Render Props.\n// https://hellocode.dev/using-hooks-with-classes#render-props\n// Make a wrapper function to wrap useHttpClient returns the logics from useHttpClient()\n// Later, in render code, we create <HookWrapper /> component and call its props function.\nfunction HookWrapper({ children }) {\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\n\tconst userAuthContext = useContext(UserAuthContext);\n\tconst userToken = userAuthContext.userToken;\n\tconst eventId = useParams().id;\n\treturn children({\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError,\n\t\tuserToken,\n\t\teventId\n\t});\n}\n\nexport default class ReactForm extends React.Component {\n\tform;\n\n\t// private variable section\n\tinputs = {};\n\tanswerData;\n\t// we will assign sendRequest() to sendRQ\n\tsendRQ;\n\tuserToken;\n\teventId;\n\tfullMessage;\n\t// end of private variable section\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.answerData = this._convert(props.answer_data);\n\t\tthis.emitter = new EventEmitter();\n\t\tthis.entryId = props.entryId;\n\t\tthis.editingMode = props.editingMode;\n\t\t// this.getNewEntry = newEntry => {\n\t\t// \tconsole.log('75 newEntry = ', newEntry);\n\t\t// \tprops.getNewEntry(newEntry);\n\t\t// };\n\t}\n\n\tgetNewEntry(newEntry) {\n\t\tconsole.log('75 newEntry = ', newEntry);\n\t\tthis.props.getNewEntry(newEntry);\n\t}\n\n\t// convert provided answers\n\t_convert(answers) {\n\t\tconsole.log('_convert ');\n\t\tif (Array.isArray(answers)) {\n\t\t\tconst result = {};\n\t\t\tanswers.forEach(x => {\n\t\t\t\tif (x.name.indexOf('tags_') > -1) {\n\t\t\t\t\tresult[x.name] = x.value.map(y => y.value);\n\t\t\t\t} else {\n\t\t\t\t\tresult[x.name] = x.value;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn result;\n\t\t}\n\t\treturn answers;\n\t}\n\n\t_getDefaultValue(item) {\n\t\tconsole.log('_getDefaultValue ');\n\t\tif (item.field_name && this.answerData) {\n\t\t\treturn this.answerData[item.field_name];\n\t\t}\n\t\treturn null;\n\t}\n\n\t// get default values for Checkboxes and Paragraphcheckbox\n\t_optionsDefaultValue(item) {\n\t\tconsole.log('_optionsDefaultValue ');\n\t\tconst defaultValue = this._getDefaultValue(item);\n\t\tif (defaultValue) {\n\t\t\treturn defaultValue;\n\t\t}\n\n\t\tconst defaultChecked = [];\n\t\titem.options.forEach(option => {\n\t\t\tif (\n\t\t\t\tthis.answerData &&\n\t\t\t\tthis.answerData[`option_${option.key}`]\n\t\t\t) {\n\t\t\t\tdefaultChecked.push(option.key);\n\t\t\t}\n\t\t});\n\t\treturn defaultChecked;\n\t}\n\n\t_getItemValue(item, ref) {\n\t\tconsole.log('_getItemValue ');\n\t\tlet $item = {\n\t\t\telement: item.element,\n\t\t\tvalue: ''\n\t\t};\n\t\tif (item.element === 'Rating') {\n\t\t\t$item.value = ref.inputField.current.state.rating;\n\t\t} else if (item.element === 'Tags') {\n\t\t\t$item.value = ref.inputField.current.state.value;\n\t\t} else if (item.element === 'DatePicker') {\n\t\t\t$item.value = ref.state.value;\n\t\t} else if (item.element === 'Camera') {\n\t\t\t$item.value = ref.state.img\n\t\t\t\t? ref.state.img.replace('data:image/png;base64,', '')\n\t\t\t\t: '';\n\t\t} else if (ref && ref.inputField) {\n\t\t\tconsole.log('I am in ref & ref.inputField');\n\t\t\t$item = ReactDOM.findDOMNode(ref.inputField.current);\n\t\t\tif (typeof $item.value === 'string') {\n\t\t\t\t$item.value = $item.value.trim();\n\t\t\t}\n\t\t}\n\t\treturn $item;\n\t}\n\n\t_isIncorrect(item) {\n\t\tconsole.log('_isIncorrect ');\n\t\tlet incorrect = false;\n\t\tif (item.canHaveAnswer) {\n\t\t\tconst ref = this.inputs[item.field_name];\n\t\t\tif (\n\t\t\t\titem.element === 'Checkboxes' ||\n\t\t\t\titem.element === 'RadioButtons' ||\n\t\t\t\titem.element === 'ParagraphCheckbox' ||\n\t\t\t\titem.element === 'MultipleRadionButtonGroup'\n\t\t\t) {\n\t\t\t\titem.options.forEach(option => {\n\t\t\t\t\tconst $option = ReactDOM.findDOMNode(\n\t\t\t\t\t\tref.options[`child_ref_${option.key}`]\n\t\t\t\t\t);\n\t\t\t\t\tif (\n\t\t\t\t\t\t(option.hasOwnProperty('correct') && !$option.checked) ||\n\t\t\t\t\t\t(!option.hasOwnProperty('correct') && $option.checked)\n\t\t\t\t\t) {\n\t\t\t\t\t\tincorrect = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconst $item = this._getItemValue(item, ref);\n\t\t\t\tif (item.element === 'Rating') {\n\t\t\t\t\tif ($item.value.toString() !== item.correct) {\n\t\t\t\t\t\tincorrect = true;\n\t\t\t\t\t}\n\t\t\t\t} else if (\n\t\t\t\t\t$item.value.toLowerCase() !==\n\t\t\t\t\titem.correct.trim().toLowerCase()\n\t\t\t\t) {\n\t\t\t\t\tincorrect = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn incorrect;\n\t}\n\n\t_isInvalid(item) {\n\t\tlet invalid = false;\n\t\tif (item.required === true) {\n\t\t\tif (\n\t\t\t\titem.element === 'Checkboxes' ||\n\t\t\t\titem.element === 'RadioButtons' ||\n\t\t\t\titem.element === 'ParagraphCheckbox'\n\t\t\t) {\n\t\t\t\tconst ref = this.inputs[item.field_name];\n\t\t\t\tlet checked_options = 0;\n\t\t\t\titem.options.forEach(option => {\n\t\t\t\t\tconst $option = ReactDOM.findDOMNode(\n\t\t\t\t\t\tref.options[`child_ref_${option.key}`]\n\t\t\t\t\t);\n\t\t\t\t\tif ($option.checked) {\n\t\t\t\t\t\tchecked_options += 1;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (checked_options < 1) {\n\t\t\t\t\t// errors.push(item.label + ' is required!');\n\t\t\t\t\tinvalid = true;\n\t\t\t\t}\n\t\t\t} else if (item.element === 'MultipleRadioButtonGroup') {\n\t\t\t\tconsole.log(\n\t\t\t\t\t'MultipleRadioButtonGroup this.inputs = ',\n\t\t\t\t\tthis.inputs\n\t\t\t\t);\n\t\t\t\tconsole.log('item = ', item);\n\n\t\t\t\t// ***** HACK ****** //\n\t\t\t\t// Becuase we don't have a field_name for parent Group,  so\n\t\t\t\t// we use item.options[0].field_name to get information.\n\t\t\t\t// group is the MultipleRadioButtonGroup not the child option\n\t\t\t\tlet group = this.inputs[item.options[0].field_name];\n\t\t\t\tconsole.log('group = ', group);\n\n\t\t\t\t// group.options contains all the children RadioButtons choices\n\t\t\t\t// group.props.data.options has RadioButons\n\t\t\t\t// 1. Get each RadioButtons with its ref of choice options\n\t\t\t\t//    The way to get ref of choices is to get the key\n\t\t\t\t//    \"child_ref_undefined_\" + choice key\n\n\t\t\t\t// The number of the checked choices must match the number of\n\t\t\t\t// group.props.data.options\n\t\t\t\tlet checked_options = true;\n\t\t\t\tgroup.props.data.options.forEach(option => {\n\t\t\t\t\tlet optionValid = false;\n\t\t\t\t\toption.options.forEach(opt => {\n\t\t\t\t\t\t// let key = 'child_ref_undefined_' + opt.key;\n\t\t\t\t\t\tlet key = 'child_ref_RadioButtons_' + opt.key;\n\t\t\t\t\t\tconsole.log('key = ', key);\n\t\t\t\t\t\tconsole.log('checked = ', group.options[key].checked);\n\t\t\t\t\t\toptionValid |= group.options[key].checked;\n\t\t\t\t\t\tconsole.log('optionValid = ', optionValid);\n\t\t\t\t\t});\n\t\t\t\t\tchecked_options &= optionValid;\n\t\t\t\t});\n\n\t\t\t\tif (!checked_options) {\n\t\t\t\t\tinvalid = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst ref = this.inputs[item.field_name];\n\t\t\t\tconst $item = this._getItemValue(item, ref);\n\t\t\t\tif (item.element === 'Rating') {\n\t\t\t\t\tif ($item.value === 0) {\n\t\t\t\t\t\tinvalid = true;\n\t\t\t\t\t}\n\t\t\t\t} else if (\n\t\t\t\t\t$item.value === undefined ||\n\t\t\t\t\t$item.value.length < 1\n\t\t\t\t) {\n\t\t\t\t\tinvalid = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn invalid;\n\t}\n\n\t_collect(item) {\n\t\tlet itemDataArray = [];\n\t\tconsole.log('_collect ');\n\t\tconst ref = this.inputs[item.field_name];\n\t\tif (\n\t\t\titem.element === 'Checkboxes' ||\n\t\t\titem.element === 'RadioButtons' ||\n\t\t\titem.element === 'ParagraphCheckbox'\n\t\t) {\n\t\t\tconst itemData = { name: item.field_name };\n\t\t\tconsole.log('_collect item.element = ', item.element);\n\t\t\tconst checked_options = [];\n\t\t\titem.options.forEach(option => {\n\t\t\t\tconst $option = ReactDOM.findDOMNode(\n\t\t\t\t\tref.options[`child_ref_${option.key}`]\n\t\t\t\t);\n\t\t\t\tconsole.log('$option = ', $option);\n\t\t\t\tconsole.log('option = ', option);\n\t\t\t\tconsole.log(\n\t\t\t\t\t'ref.option[child_ref_${option.key}] = ',\n\t\t\t\t\tref.options[`child_ref_${option.key}`]\n\t\t\t\t);\n\t\t\t\tif ($option.checked) {\n\t\t\t\t\tchecked_options.push(option.key);\n\t\t\t\t}\n\t\t\t});\n\t\t\titemData.value = checked_options;\n\t\t\titemDataArray.push(itemData);\n\t\t\tconsole.log('itemData = ', itemData);\n\t\t} else if (item.element === 'MultipleRadioButtonGroup') {\n\t\t\tconsole.log(\n\t\t\t\t'MultipleRadioButtonGroup this.inputs = ',\n\t\t\t\tthis.inputs\n\t\t\t);\n\t\t\tconsole.log('item = ', item);\n\n\t\t\t// ***** HACK ****** //\n\t\t\t// Becuase we don't have a field_name for parent Group,  so\n\t\t\t// we use item.options[0].field_name to get information.\n\t\t\t// group is the MultipleRadioButtonGroup not the child option\n\t\t\tlet group = this.inputs[item.options[0].field_name];\n\t\t\tconsole.log('group = ', group);\n\n\t\t\t// group.options contains all the children RadioButtons choices\n\t\t\t// group.props.data.options has RadioButons\n\t\t\t// 1. Get each RadioButtons with its ref of choice options\n\t\t\t//    The way to get ref of choices is to get the key\n\t\t\t//    \"child_ref_undefined_\" + choice key\n\n\t\t\t// The number of the checked choices must match the number of\n\t\t\t// group.props.data.options\n\t\t\tgroup.props.data.options.forEach(option => {\n\t\t\t\tlet itemData = {};\n\t\t\t\tlet checked_options = [];\n\t\t\t\toption.options.forEach(opt => {\n\t\t\t\t\tconsole.log('I am creating undefined key ');\n\t\t\t\t\tlet key = 'child_ref_RadioButtons_' + opt.key;\n\t\t\t\t\tconsole.log('key = ', key);\n\t\t\t\t\tif (group.options[key].checked) {\n\t\t\t\t\t\tchecked_options.push(opt.key);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\titemData.name = option.field_name;\n\t\t\t\titemData.value = checked_options;\n\t\t\t\titemDataArray.push(itemData);\n\t\t\t});\n\t\t} else {\n\t\t\tconst itemData = { name: item.field_name };\n\t\t\tif (!ref) return null;\n\t\t\titemData.value = this._getItemValue(item, ref).value;\n\t\t\titemDataArray.push(itemData);\n\t\t}\n\t\treturn itemDataArray;\n\t}\n\n\t_collectFormData(data) {\n\t\tconsole.log('_collectFormData ');\n\t\tconst formData = [];\n\t\tdata.forEach(item => {\n\t\t\tconst item_data = this._collect(item);\n\t\t\titem_data.map(data => {\n\t\t\t\tformData.push(data);\n\t\t\t});\n\t\t\t// if (item_data) {\n\t\t\t// \tformData.push(item_data);\n\t\t\t// }\n\t\t});\n\t\treturn formData;\n\t}\n\n\t_getSignatureImg(item) {\n\t\tconst ref = this.inputs[item.field_name];\n\t\tconst $canvas_sig = ref.canvas.current;\n\t\tif ($canvas_sig) {\n\t\t\tconst base64 = $canvas_sig\n\t\t\t\t.toDataURL()\n\t\t\t\t.replace('data:image/png;base64,', '');\n\t\t\tconst isEmpty = $canvas_sig.isEmpty();\n\t\t\tconst $input_sig = ReactDOM.findDOMNode(ref.inputField.current);\n\t\t\tif (isEmpty) {\n\t\t\t\t$input_sig.value = '';\n\t\t\t} else {\n\t\t\t\t$input_sig.value = base64;\n\t\t\t}\n\t\t}\n\t}\n\n\tasync handleSubmit(e) {\n\t\tconsole.log('376 responseData.entry');\n\t\te.preventDefault();\n\t\tlet errors = [];\n\t\tif (!this.props.skip_validations) {\n\t\t\terrors = this.validateForm();\n\t\t\t// Publish errors, if any.\n\t\t\tthis.emitter.emit('formValidation', errors);\n\t\t}\n\n\t\tconsole.log('384 responseData.entry');\n\t\t// Only submit if there are no errors.\n\t\tif (errors.length < 1) {\n\t\t\tconst answer_data = this.props;\n\t\t\tif (answer_data) {\n\t\t\t\t// send answer_data back to NewEntryManager, we will send to backend all together in Submit tab\n\t\t\t\tconst answer = this._collectFormData(this.props.data);\n\t\t\t\t// editinMode meaning we are in EditEntryManager\n\t\t\t\tif (this.editingMode) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconsole.log('393 responseData.entry = ');\n\t\t\t\t\t\tconst answer = this._collectFormData(this.props.data);\n\t\t\t\t\t\t// we need to use JSON.stringify to send array objects.\n\t\t\t\t\t\t// FormData with JSON.stringify not working\n\t\t\t\t\t\tlet [\n\t\t\t\t\t\t\tresponseData,\n\t\t\t\t\t\t\tresponseStatus,\n\t\t\t\t\t\t\tresponseMessage\n\t\t\t\t\t\t] = await this.sendRQ(\n\t\t\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL +\n\t\t\t\t\t\t\t\t`/entries/formAnswer/${this.entryId}`,\n\t\t\t\t\t\t\t'PATCH',\n\t\t\t\t\t\t\tJSON.stringify({\n\t\t\t\t\t\t\t\tanswer: answer\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t'Content-type': 'application/json',\n\t\t\t\t\t\t\t\t// adding JWT to header for authentication\n\t\t\t\t\t\t\t\t// Authorization: 'Bearer ' + storageData.userToken\n\t\t\t\t\t\t\t\tAuthorization: 'Bearer ' + this.userToken\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconsole.log(\"responseMessage = \", responseMessage);\n\t\t\t\t\t\tif (responseStatus === 202) {\n\t\t\t\t\t\t\t// either group is full or event is full\n\t\t\t\t\t\t\tthis.fullMessage = responseMessage;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// if status is 200, we want to print out Total Price so this is not a fullMessage\n\t\t\t\t\t\t\tthis.fullMessage = 'NO ' + responseMessage;;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconsole.log(\"this.fullMessage = \", this.fullMessage);\n\t\t\t\t\t\tthis.getNewEntry(responseData.entry);\n\t\t\t\t\t} catch (err) {}\n\t\t\t\t} else {\n\t\t\t\t\t// this route is for NewEntryManager\n\t\t\t\t\tconsole.log('answer = ', answer);\n\t\t\t\t\tthis.props.returnFormAnswer(answer);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow new Error('Submit failed. Please select answers.');\n\t\t\t}\n\t\t}\n\t}\n\n\tvalidateForm() {\n\t\tconsole.log('validateForm');\n\t\tconst errors = [];\n\t\tlet data_items = this.props.data;\n\t\tif (this.props.display_short) {\n\t\t\tdata_items = this.props.data.filter(\n\t\t\t\ti => i.alternateForm === true\n\t\t\t);\n\t\t}\n\n\t\tdata_items.forEach(item => {\n\t\t\tif (item.element === 'Signature') {\n\t\t\t\tthis._getSignatureImg(item);\n\t\t\t}\n\n\t\t\tif (this._isInvalid(item)) {\n\t\t\t\terrors.push(`${item.label} is required!`);\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tthis.props.validateForCorrectness &&\n\t\t\t\tthis._isIncorrect(item)\n\t\t\t) {\n\t\t\t\terrors.push(`${item.label} was answered incorrectly!`);\n\t\t\t}\n\t\t});\n\n\t\treturn errors;\n\t}\n\n\tgetInputElement(item) {\n\t\tconsole.log('getInputElement');\n\t\tconsole.log('item = ', item);\n\t\tconst Input = FormElements[item.element];\n\t\tconsole.log('Input = ', Input);\n\t\treturn (\n\t\t\t<Input\n\t\t\t\thandleChange={this.handleChange}\n\t\t\t\tref={c => (this.inputs[item.field_name] = c)}\n\t\t\t\tmutable={true}\n\t\t\t\tkey={`form_${item.id}`}\n\t\t\t\tdata={item}\n\t\t\t\tread_only={this.props.read_only}\n\t\t\t\tdefaultValue={this._getDefaultValue(item)}\n\t\t\t/>\n\t\t);\n\t}\n\n\t_getMultipleInputDefaultValues(item) {\n\t\tlet answers = [];\n\t\tconsole.log('this.answerData = ', this.answerData);\n\t\titem.options.forEach(option => {\n\t\t\tlet optAnswer = {};\n\t\t\tif (option.field_name && this.answerData) {\n\t\t\t\tif (this.answerData[option.field_name]) {\n\t\t\t\t\toptAnswer[option.field_name] = this.answerData[\n\t\t\t\t\t\toption.field_name\n\t\t\t\t\t][0];\n\t\t\t\t\tanswers.push(optAnswer);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tconsole.log('464 answers = ', answers);\n\t\treturn answers;\n\t}\n\n\tgetMultipleInputElement(item) {\n\t\tconsole.log('getMultipleInputElement');\n\t\tconsole.log('item = ', item);\n\t\tconst Input = FormElements[item.element];\n\n\t\treturn (\n\t\t\t<Input\n\t\t\t\thandleChange={this.handleChange}\n\t\t\t\tref={c => (this.inputs[item.options[0].field_name] = c)}\n\t\t\t\tmutable={true}\n\t\t\t\tkey={`form_${item.id}`}\n\t\t\t\tdata={item}\n\t\t\t\tread_only={this.props.read_only}\n\t\t\t\tdefaultValue={this._getMultipleInputDefaultValues(item)}\n\t\t\t/>\n\t\t);\n\t}\n\n\tgetSimpleElement(item) {\n\t\tconsole.log('getSimpleElement');\n\t\tconst Element = FormElements[item.element];\n\t\treturn (\n\t\t\t<Element mutable={true} key={`form_${item.id}`} data={item} />\n\t\t);\n\t}\n\n\trender() {\n\t\tlet data_items = this.props.data;\n\n\t\tif (!data_items) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.props.display_short) {\n\t\t\tdata_items = this.props.data.filter(\n\t\t\t\ti => i.alternateForm === true\n\t\t\t);\n\t\t}\n\n\t\tdata_items.forEach(item => {\n\t\t\tif (\n\t\t\t\titem &&\n\t\t\t\titem.readOnly &&\n\t\t\t\titem.variableKey &&\n\t\t\t\tthis.props.variables[item.variableKey]\n\t\t\t) {\n\t\t\t\tthis.answerData[item.field_name] = this.props.variables[\n\t\t\t\t\titem.variableKey\n\t\t\t\t];\n\t\t\t}\n\t\t});\n\n\t\tconst items = data_items.map(item => {\n\t\t\tif (!item) return null;\n\t\t\tswitch (item.element) {\n\t\t\t\tcase 'TextInput':\n\t\t\t\tcase 'NumberInput':\n\t\t\t\tcase 'TextArea':\n\t\t\t\tcase 'Dropdown':\n\t\t\t\tcase 'DatePicker':\n\t\t\t\tcase 'RadioButtons':\n\t\t\t\tcase 'Rating':\n\t\t\t\tcase 'Tags':\n\t\t\t\tcase 'Range':\n\t\t\t\t\treturn this.getInputElement(item);\n\t\t\t\tcase 'Signature':\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Signature\n\t\t\t\t\t\t\tref={c => (this.inputs[item.field_name] = c)}\n\t\t\t\t\t\t\tread_only={this.props.read_only || item.readOnly}\n\t\t\t\t\t\t\tmutable={true}\n\t\t\t\t\t\t\tkey={`form_${item.id}`}\n\t\t\t\t\t\t\tdata={item}\n\t\t\t\t\t\t\tdefaultValue={this._getDefaultValue(item)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\tcase 'Checkboxes':\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Checkboxes\n\t\t\t\t\t\t\tref={c => (this.inputs[item.field_name] = c)}\n\t\t\t\t\t\t\tread_only={this.props.read_only}\n\t\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\t\tmutable={true}\n\t\t\t\t\t\t\tkey={`form_${item.id}`}\n\t\t\t\t\t\t\tdata={item}\n\t\t\t\t\t\t\tdefaultValue={this._optionsDefaultValue(item)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\tcase 'ParagraphCheckbox':\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ParagraphCheckbox\n\t\t\t\t\t\t\tref={c => (this.inputs[item.field_name] = c)}\n\t\t\t\t\t\t\tread_only={this.props.read_only}\n\t\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\t\tmutable={true}\n\t\t\t\t\t\t\tkey={`form_${item.id}`}\n\t\t\t\t\t\t\tdata={item}\n\t\t\t\t\t\t\tdefaultValue={this._optionsDefaultValue(item)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\tcase 'MultipleRadioButtonGroup':\n\t\t\t\t\tconsole.log('inside MultipleRadioButtonGroup');\n\t\t\t\t\tconsole.log('this.inputs = ', this.inputs);\n\t\t\t\t\tconsole.log('item = ', item);\n\t\t\t\t\tconsole.log('item.id = ', item.id);\n\n\t\t\t\t\treturn this.getMultipleInputElement(item);\n\t\t\t\tcase 'Image':\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\tref={c => (this.inputs[item.field_name] = c)}\n\t\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\t\tmutable={true}\n\t\t\t\t\t\t\tkey={`form_${item.id}`}\n\t\t\t\t\t\t\tdata={item}\n\t\t\t\t\t\t\tdefaultValue={this._getDefaultValue(item)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\tcase 'Download':\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Download\n\t\t\t\t\t\t\tdownload_path={this.props.download_path}\n\t\t\t\t\t\t\tmutable={true}\n\t\t\t\t\t\t\tkey={`form_${item.id}`}\n\t\t\t\t\t\t\tdata={item}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\tcase 'Camera':\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Camera\n\t\t\t\t\t\t\tref={c => (this.inputs[item.field_name] = c)}\n\t\t\t\t\t\t\tread_only={this.props.read_only || item.readOnly}\n\t\t\t\t\t\t\tmutable={true}\n\t\t\t\t\t\t\tkey={`form_${item.id}`}\n\t\t\t\t\t\t\tdata={item}\n\t\t\t\t\t\t\tdefaultValue={this._getDefaultValue(item)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\tdefault:\n\t\t\t\t\treturn this.getSimpleElement(item);\n\t\t\t}\n\t\t});\n\n\t\tconst formTokenStyle = {\n\t\t\tdisplay: 'none'\n\t\t};\n\n\t\tconst actionName = this.props.action_name\n\t\t\t? this.props.action_name\n\t\t\t: 'Submit';\n\t\tconst backName = this.props.back_name\n\t\t\t? this.props.back_name\n\t\t\t: 'Cancel';\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tborderStyle: 'double',\n\t\t\t\t\t\tborderColor: '#a3aeae'\n\t\t\t\t\t}}>\n\t\t\t\t\t<HookWrapper>\n\t\t\t\t\t\t{({\n\t\t\t\t\t\t\tisLoading,\n\t\t\t\t\t\t\terror,\n\t\t\t\t\t\t\tsendRequest,\n\t\t\t\t\t\t\tclearError,\n\t\t\t\t\t\t\tuserToken,\n\t\t\t\t\t\t\teventId\n\t\t\t\t\t\t}) => {\n\t\t\t\t\t\t\t// assignments\n\t\t\t\t\t\t\tthis.sendRQ = sendRequest;\n\t\t\t\t\t\t\tthis.userToken = userToken;\n\t\t\t\t\t\t\tthis.eventId = eventId;\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t{isLoading && (\n\t\t\t\t\t\t\t\t\t\t<div className=\"center\">\n\t\t\t\t\t\t\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t{error && (\n\t\t\t\t\t\t\t\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}}\n\t\t\t\t\t</HookWrapper>\n\t\t\t\t\t<FormValidator emitter={this.emitter} />\n\t\t\t\t\t<div className=\"react-form-builder-form\">\n\t\t\t\t\t\t<form\n\t\t\t\t\t\t\tencType=\"multipart/form-data\"\n\t\t\t\t\t\t\tref={c => (this.form = c)}\n\t\t\t\t\t\t\taction={this.props.form_action}\n\t\t\t\t\t\t\tonSubmit={this.handleSubmit.bind(this)}\n\t\t\t\t\t\t\tmethod={this.props.form_method}>\n\t\t\t\t\t\t\t{this.props.authenticity_token && (\n\t\t\t\t\t\t\t\t<div style={formTokenStyle}>\n\t\t\t\t\t\t\t\t\t<input name=\"utf8\" type=\"hidden\" value=\"&#x2713;\" />\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tname=\"authenticity_token\"\n\t\t\t\t\t\t\t\t\t\ttype=\"hidden\"\n\t\t\t\t\t\t\t\t\t\tvalue={this.props.authenticity_token}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tname=\"task_id\"\n\t\t\t\t\t\t\t\t\t\ttype=\"hidden\"\n\t\t\t\t\t\t\t\t\t\tvalue={this.props.task_id}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{items}\n\t\t\t\t\t\t\t<div className=\"btn-toolbar\">\n\t\t\t\t\t\t\t\t{!this.props.hide_actions && (\n\t\t\t\t\t\t\t\t\t// <input\n\t\t\t\t\t\t\t\t\t// \ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t// \tclassName=\"btn btn-school btn-big\"\n\t\t\t\t\t\t\t\t\t// \tvalue={actionName}\n\t\t\t\t\t\t\t\t\t// />\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\t\t\t\tmargin-left=\"1.5rem\">\n\t\t\t\t\t\t\t\t\t\t{actionName}\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t{!this.props.hide_actions && this.props.back_action && (\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\thref={this.props.back_action}\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-default btn-cancel btn-big\">\n\t\t\t\t\t\t\t\t\t\t{backName}\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{this.fullMessage && !this.fullMessage.startsWith('NO') && (\n\t\t\t\t\t\t\t\t<p\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tcolor: 'red'\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t{this.fullMessage}{' '}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{this.fullMessage && this.fullMessage.startsWith('NO') && (\n\t\t\t\t\t\t\t\t<p\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tcolor: 'green'\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\tYour entry is successfully submitted.{' '}\n\t\t\t\t\t\t\t\t\t{this.fullMessage.slice(3)}{' '}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nReactForm.defaultProps = { validateForCorrectness: false };\n",["534","535"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/toolbar-draggable-item.jsx",[],["536","537"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/sortable-element.jsx",["538"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport { DragSource, DropTarget } from 'react-dnd';\nimport ItemTypes from './ItemTypes';\n\nconst style = {\n\tborder: '1px dashed gray',\n\tpadding: '0.5rem 1rem',\n\tmarginBottom: '.5rem',\n\tbackgroundColor: 'white',\n\tcursor: 'move'\n};\n\nconst cardSource = {\n\tbeginDrag(props) {\n\t\treturn {\n\t\t\tid: props.id,\n\t\t\tindex: props.index\n\t\t};\n\t}\n};\n\nconst cardTarget = {\n\thover(props, monitor, component) {\n\t\tconst item = monitor.getItem();\n\t\t// console.log('item = ', item);\n\t\tconst dragIndex = item.index;\n\t\t// console.log('dragIndex = ', dragIndex);\n\t\tconst hoverIndex = props.index;\n\t\t// console.log('hoverIndex = ', hoverIndex);\n\n\t\t// Don't replace items with themselves\n\t\tif (dragIndex === hoverIndex) {\n\t\t\treturn;\n\t\t}\n\t\tif (dragIndex === -1) {\n\t\t\titem.index = hoverIndex;\n\t\t\t// console.log('item.data = ', item.data);\n\t\t\tprops.insertCard(item.onCreate(item.data), hoverIndex);\n\t\t}\n\n\t\t// Determine rectangle on screen\n\t\tconst hoverBoundingRect = findDOMNode(\n\t\t\tcomponent\n\t\t).getBoundingClientRect();\n\n\t\t// Get vertical middle\n\t\tconst hoverMiddleY =\n\t\t\t(hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n\n\t\t// Determine mouse position\n\t\tconst clientOffset = monitor.getClientOffset();\n\n\t\t// Get pixels to the top\n\t\tconst hoverClientY = clientOffset.y - hoverBoundingRect.top;\n\n\t\t// Only perform the move when the mouse has crossed half of the items height\n\t\t// When dragging downwards, only move when the cursor is below 50%\n\t\t// When dragging upwards, only move when the cursor is above 50%\n\n\t\t// Dragging downwards\n\t\tif (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Dragging upwards\n\t\tif (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Time to actually perform the action\n\t\tprops.moveCard(dragIndex, hoverIndex);\n\n\t\t// Note: we're mutating the monitor item here!\n\t\t// Generally it's better to avoid mutations,\n\t\t// but it's good here for the sake of performance\n\t\t// to avoid expensive index searches.\n\t\titem.index = hoverIndex;\n\t}\n};\n\n// eslint-disable-next-line no-unused-vars\nexport default function (ComposedComponent) {\n\tclass Card extends Component {\n\t\tstatic propTypes = {\n\t\t\tconnectDragSource: PropTypes.func,\n\t\t\tconnectDropTarget: PropTypes.func,\n\t\t\tindex: PropTypes.number.isRequired,\n\t\t\tisDragging: PropTypes.bool,\n\t\t\tid: PropTypes.any.isRequired,\n\t\t\t// text: PropTypes.string.isRequired,\n\t\t\tmoveCard: PropTypes.func.isRequired,\n\t\t\tseq: PropTypes.number\n\t\t};\n\n\t\tstatic defaultProps = {\n\t\t\tseq: -1\n\t\t};\n\n\t\trender() {\n\t\t\tconst {\n\t\t\t\tisDragging,\n\t\t\t\tconnectDragSource,\n\t\t\t\tconnectDropTarget\n\t\t\t} = this.props;\n\t\t\tconst opacity = isDragging ? 0 : 1;\n\n\t\t\treturn connectDragSource(\n\t\t\t\tconnectDropTarget(\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<ComposedComponent\n\t\t\t\t\t\t\t{...this.props}\n\t\t\t\t\t\t\tstyle={{ ...style, opacity }}></ComposedComponent>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}\n\n\tconst x = DropTarget(ItemTypes.CARD, cardTarget, connect => ({\n\t\tconnectDropTarget: connect.dropTarget()\n\t}))(Card);\n\treturn DragSource(\n\t\tItemTypes.CARD,\n\t\tcardSource,\n\t\t(connect, monitor) => ({\n\t\t\tconnectDragSource: connect.dragSource(),\n\t\t\tisDragging: monitor.isDragging()\n\t\t})\n\t)(x);\n}\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/ClubAccount.js",["539","540","541","542","543","544","545","546","547","548","549"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/entryDashboard/pages/SubmitEntry.js",["550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/users/components/UserCarsItem.js",["571","572","573","574","575","576","577","578","579","580"],"import React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Avatar from '../../shared/components/UIElements/Avatar';\nimport Card from '../../shared/components/UIElements/Card';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { UserAuthContext } from '../../shared/context/auth-context';\n\nimport '../../shared/css/EventsItem.css';\nimport './UserCarsItem.css';\n\n// UserCarItem renders a card for each event\nconst UserCarsItem = props => {\n\tlet carSelector = props.carSelector;\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\tconst userAuthContext = useContext(UserAuthContext);\n\tconst [overlay, setOverlay] = useState();\n\n\tuseEffect(() => {\n\t\t// if props.entryCar is true meaning this car is used for event entry\n\t\tif (props.isEntryCar) {\n\t\t\tsetOverlay('ON DUTY');\n\t\t} else {\n\t\t\tif (props.active) {\n\t\t\t\tsetOverlay('ACTIVE');\n\t\t\t} else {\n\t\t\t\tsetOverlay('RETIRED');\n\t\t\t}\n\t\t}\n\t}, [props.isEntryCar, props.active, setOverlay]);\n\n\tconst submitHandler = () => {\n\t\tprops.carSelectorStatus(true);\n\t\tprops.carIdHandler(props.id);\n\t};\n\n\tconst [newEntry, setNewEntry] = useState();\n\n\tconst changeCarHandler = async () => {\n\t\ttry {\n\t\t\tconst [\n\t\t\t\tresponseData,\n\t\t\t\tresponseStatus,\n\t\t\t\tresponseMessage\n\t\t\t] = await sendRequest(\n\t\t\t\tprocess.env.REACT_APP_BACKEND_URL +\n\t\t\t\t\t`/entries/car/${props.entryId}`,\n\t\t\t\t'PATCH',\n\t\t\t\tJSON.stringify({ carId: props.id }),\n\t\t\t\t{\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t// adding JWT to header for authentication, JWT contains clubId\n\t\t\t\t\tAuthorization: 'Bearer ' + userAuthContext.userToken\n\t\t\t\t}\n\t\t\t);\n\t\t\tconsole.log('new Entry = ', responseData.entry);\n\t\t\tsetNewEntry(responseData.entry);\n\t\t\tprops.getNewEntry(responseData.entry);\n\t\t} catch (err) {}\n\t};\n\n\treturn (\n\t\t<li className=\"events-item\">\n\t\t\t<Card className=\"events-item__content\">\n\t\t\t\t{/* Display car in User garage */}\n\t\t\t\t{!carSelector && (\n\t\t\t\t\t<Link to={`/users/cars/${props.id}`}>\n\t\t\t\t\t\t<div className=\"events-item__image\">\n\t\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\t\timage={props.image}\n\t\t\t\t\t\t\t\talt={props.model}\n\t\t\t\t\t\t\t\tclassName=\"avatar__event\"\n\t\t\t\t\t\t\t\t// for car published is always true\n\t\t\t\t\t\t\t\tpublished={true}\n\t\t\t\t\t\t\t\tpublishDescription={overlay}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"events-item__info\">\n\t\t\t\t\t\t\t<h2>{props.year}</h2>\n\t\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\t\t{props.make}&nbsp;{props.model}&nbsp;{props.trimLevel}\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t{/* <h1>{props.model}</h1> */}\n\t\t\t\t\t\t\t{/* <h4>by {props.clubName}</h4> */}\n\t\t\t\t\t\t\t<h2></h2>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Link>\n\t\t\t\t)}\n\t\t\t\t{/* <Link to={`/users/cars/${props.id}`}> */}\n\t\t\t\t{/* Create buttion for selecting a car to enter an event */}\n\t\t\t\t{carSelector && props.isNewEntry && (\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"carselector-button\"\n\t\t\t\t\t\tonClick={submitHandler}>\n\t\t\t\t\t\t<div className=\"events-item__image\">\n\t\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\t\timage={props.image}\n\t\t\t\t\t\t\t\talt={props.model}\n\t\t\t\t\t\t\t\tclassName=\"avatar__event\"\n\t\t\t\t\t\t\t\t// for car published is always true\n\t\t\t\t\t\t\t\tpublished={true}\n\t\t\t\t\t\t\t\tpublishDescription={overlay}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"events-item__info\">\n\t\t\t\t\t\t\t<h2>{props.year}</h2>\n\t\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\t\t{props.make}&nbsp;{props.model}&nbsp;{props.trimLevel}\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t{/* <h1>{props.model}</h1> */}\n\t\t\t\t\t\t\t{/* <h4>by {props.clubName}</h4> */}\n\t\t\t\t\t\t\t<h2></h2>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\t\t\t\t{/* This is the car been entered to the event. We don't want to create a link for it*/}\n\t\t\t\t{carSelector && props.isEntryCar && !props.isNewEntry && (\n\t\t\t\t\t<button className=\"pickedcar-button\">\n\t\t\t\t\t\t<div className=\"events-item__image\">\n\t\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\t\timage={props.image}\n\t\t\t\t\t\t\t\talt={props.model}\n\t\t\t\t\t\t\t\tclassName=\"avatar__event\"\n\t\t\t\t\t\t\t\t// for car published is always true\n\t\t\t\t\t\t\t\tpublished={true}\n\t\t\t\t\t\t\t\tpublishDescription={overlay}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"events-item__info\">\n\t\t\t\t\t\t\t<h2>{props.year}</h2>\n\t\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\t\t{props.make}&nbsp;{props.model}&nbsp;{props.trimLevel}\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t{/* <h1>{props.model}</h1> */}\n\t\t\t\t\t\t\t{/* <h4>by {props.clubName}</h4> */}\n\t\t\t\t\t\t\t<h2></h2>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\t\t\t\t{carSelector && !props.isEntryCar && !props.isNewEntry && (\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"carselector-button\"\n\t\t\t\t\t\tonClick={changeCarHandler}>\n\t\t\t\t\t\t<div className=\"events-item__image\">\n\t\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\t\timage={props.image}\n\t\t\t\t\t\t\t\talt={props.model}\n\t\t\t\t\t\t\t\tclassName=\"avatar__event\"\n\t\t\t\t\t\t\t\t// for car published is always true\n\t\t\t\t\t\t\t\tpublished={true}\n\t\t\t\t\t\t\t\tpublishDescription={overlay}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"events-item__info\">\n\t\t\t\t\t\t\t<h2>{props.year}</h2>\n\t\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\t\t{props.make}&nbsp;{props.model}&nbsp;{props.trimLevel}\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t{/* <h1>{props.model}</h1> */}\n\t\t\t\t\t\t\t{/* <h4>by {props.clubName}</h4> */}\n\t\t\t\t\t\t\t<h2></h2>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\t\t\t</Card>\n\t\t</li>\n\t);\n};\n\nexport default UserCarsItem;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/pages/EventForm.js",["581","582","583","584","585","586","587","588","589"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/context/form-context.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/UIElements/Card.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/pages/UpdateEventRegistration.js",["590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/FormElements/ImageUploader.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/entryDashboard/pages/EditClassification.js",["607","608","609","610"],"import React, { useContext, useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Field, Form, Formik } from 'formik';\nimport NavigationPrompt from 'react-router-navigation-prompt';\n\n// import { EditorState } from 'draft-js';\n// import { RichEditorExample } from '../components/RichEditor';\n// import 'draft-js/dist/Draft.css';\n\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport PromptModal from '../../shared/components/UIElements/PromptModal';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { UserAuthContext } from '../../shared/context/auth-context';\nimport { FormContext } from '../../shared/context/form-context';\n\nimport '../../shared/css/EventForm.css';\n\nconst EditClassification = props => {\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\n\tconst userAuthContext = useContext(UserAuthContext);\n\tconst formContext = useContext(FormContext);\n\n\t// this is the return function that passes finishing status back to NewEventManager\n\tuseEffect(() => {\n\t\tlet mounted = true;\n\t\tif (mounted) {\n\t\t\tformContext.setIsInsideForm(true);\n\t\t}\n\t\treturn () => {\n\t\t\tmounted = false;\n\t\t};\n\t}, [formContext]);\n\n\t// If we are re-directing to this page, we want to clear up clubRedirectURL\n\tlet location = useLocation();\n\tReact.useEffect(() => {\n\t\tlet path = location.pathname;\n\t\tlet userRedirectURL = userAuthContext.userRedirectURL;\n\t\tif (path === userRedirectURL) {\n\t\t\t// re-init redirectURL after re-direction route\n\t\t\tuserAuthContext.setUserRedirectURL(null);\n\t\t}\n\t}, [location, userAuthContext]);\n\n\tconst [OKLeavePage, setOKLeavePage] = useState(true);\n\n\tconst initialValues = {\n\t\tcarNumber: props.carNumber,\n\t\traceClass: props.raceClass\n\t};\n\n\t/***** Form Validation Section  *****/\n\tconst [validateCarNumber, setValidateCarNumber] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Car number is required.';\n\t\t\t}\n\t\t\tlet numVal = parseInt(value);\n\t\t\tif (isNaN(numVal)) {\n\t\t\t\terror = 'Please inputer a number.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\n\tconst [validateRaceClass, setValidateRaceClass] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Race class is required.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\t/***** End of Form Validation *****/\n\n\tif (\n\t\t!userAuthContext ||\n\t\t!userAuthContext.userId ||\n\t\tuserAuthContext.userId !== props.userId\n\t) {\n\t\treturn (\n\t\t\t<div className=\"list-header clearfix\">\n\t\t\t\t{/* <div className=\"selector-title\"> */}\n\t\t\t\t<div className=\"h3\">Not authorized to access garage</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tconst submitHandler = async values => {\n\t\ttry {\n\t\t\tconst [\n\t\t\t\tresponseData,\n\t\t\t\tresponseStatus,\n\t\t\t\tresponseMessage\n\t\t\t] = await sendRequest(\n\t\t\t\tprocess.env.REACT_APP_BACKEND_URL +\n\t\t\t\t\t`/entries/classNumber/${props.entryId}`,\n\t\t\t\t'PATCH',\n\t\t\t\tJSON.stringify({\n\t\t\t\t\tcarNumber: values.carNumber,\n\t\t\t\t\traceClass: values.raceClass\n\t\t\t\t}),\n\t\t\t\t{\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t// adding JWT to header for authentication, JWT contains clubId\n\t\t\t\t\tAuthorization: 'Bearer ' + userAuthContext.userToken\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tconsole.log('responseData = ', responseData);\n\t\t\tprops.getNewEntry(responseData.entry);\n\t\t} catch (err) {}\n\t};\n\n\tconst eventForm = values => (\n\t\t<div className=\"event-form\">\n\t\t\t<div className=\"event-form-header\">\n\t\t\t\t<h4>Race Number and Class</h4>\n\t\t\t\t<h5>&nbsp;All fields are required</h5>\n\t\t\t\t<hr className=\"event-form__hr\" />\n\t\t\t</div>\n\t\t\t<Formik\n\t\t\t\tenableReinitialize={true}\n\t\t\t\tinitialValues={initialValues}\n\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\tsubmitHandler(values);\n\t\t\t\t}}>\n\t\t\t\t{({\n\t\t\t\t\tvalues,\n\t\t\t\t\terrors,\n\t\t\t\t\tisSubmitting,\n\t\t\t\t\tisValid,\n\t\t\t\t\tdirty,\n\t\t\t\t\tsetFieldValue,\n\t\t\t\t\tsubmitted,\n\t\t\t\t\ttouched,\n\t\t\t\t\thandleBlur\n\t\t\t\t}) => (\n\t\t\t\t\t<Form className=\"event-form-container\">\n\t\t\t\t\t\t<label htmlFor=\"carNumber\" className=\"event-form__label\">\n\t\t\t\t\t\t\t<i className=\"fal fa-question-circle\"></i>\n\t\t\t\t\t\t\t&nbsp; Car Number\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"carNumber\"\n\t\t\t\t\t\t\tname=\"carNumber\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tvalidate={validateCarNumber}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.name will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.carNumber && errors.carNumber && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error_quarter\">\n\t\t\t\t\t\t\t\t{errors.carNumber}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label htmlFor=\"numGroups\" className=\"event-form__label\">\n\t\t\t\t\t\t\t<i className=\"fal fa-users-class\"></i>\n\t\t\t\t\t\t\t{/* <i className=\"fad fa-cars\"></i> */}\n\t\t\t\t\t\t\t&nbsp; Race Class\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"raceClass\"\n\t\t\t\t\t\t\tname=\"raceClass\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tvalidate={validateRaceClass}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}></Field>\n\t\t\t\t\t\t{touched.raceClass && errors.raceClass && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error_quarter\">\n\t\t\t\t\t\t\t\t{errors.raceClass}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tsize=\"small-block\"\n\t\t\t\t\t\t\tmargin-left=\"1.5rem\"\n\t\t\t\t\t\t\tdisabled={isSubmitting || !(isValid && dirty)}>\n\t\t\t\t\t\t\tSubmit Changes\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<NavigationPrompt\n\t\t\t\t\t\t\tafterConfirm={() => {\n\t\t\t\t\t\t\t\tformContext.setIsInsideForm(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t// Confirm navigation if going to a path that does not start with current path.\n\t\t\t\t\t\t\t// We don't want to confirm navigation when OKLeavePage === true and redirect to '/clubs/auth' due to\n\t\t\t\t\t\t\t// authentication issue\n\t\t\t\t\t\t\twhen={(crntLocation, nextLocation) => {\n\t\t\t\t\t\t\t\t// remove UserRedirectURL from memory\n\t\t\t\t\t\t\t\tuserAuthContext.setUserRedirectURL(null);\n\t\t\t\t\t\t\t\t// OKLeavePage meaning form was not touched yet\n\t\t\t\t\t\t\t\tif (OKLeavePage) {\n\t\t\t\t\t\t\t\t\tformContext.setIsInsideForm(false);\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// nextLocation.pathname !== '/clubs/auth' &&  --- adding this line causing state update on an\n\t\t\t\t\t\t\t\t\t// unmounted component issue.  Without it, confirmation modal will pop up\n\t\t\t\t\t\t\t\t\t// always gives the warning, because we want to be able to\n\t\t\t\t\t\t\t\t\t// clear localStorage after confirm\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t!nextLocation ||\n\t\t\t\t\t\t\t\t\t\t!nextLocation.pathname.startsWith(\n\t\t\t\t\t\t\t\t\t\t\tcrntLocation.pathname\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t{({ isActive, onCancel, onConfirm }) => {\n\t\t\t\t\t\t\t\tif (isActive) {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<PromptModal\n\t\t\t\t\t\t\t\t\t\t\tonCancel={onCancel}\n\t\t\t\t\t\t\t\t\t\t\tonConfirm={onConfirm}\n\t\t\t\t\t\t\t\t\t\t\tcontentclassName=\"event-item__modal-content\"\n\t\t\t\t\t\t\t\t\t\t\tfooterclassName=\"event-item__modal-actions\"\n\t\t\t\t\t\t\t\t\t\t\terror=\"You sure want to leave? Unsaved data will be lost.\">\n\t\t\t\t\t\t\t\t\t\t\t{/* render props.children */}\n\t\t\t\t\t\t\t\t\t\t</PromptModal>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\tThis is probably an anti-pattern but ya know...\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t</NavigationPrompt>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t{isLoading && (\n\t\t\t\t<div className=\"center\">\n\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{eventForm()}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default EditClassification;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/events/components/EventsItem.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/EntryReportManager.js",["611"],"import React, { useState } from 'react';\nimport EntryReport from './EntryReport';\nimport './ClubManager.css';\n\nconst EntryReportManager = props => {\n\tlet entryReportData = props.entryReportData;\n\tconst [eventName, setEventName] = useState(\n\t\tprops.entryReportData.eventName !== ''\n\t\t\t? props.entryReportData.eventName\n\t\t\t: ''\n\t);\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div className=\"list-header clearfix\">\n\t\t\t\t<div className=\"eventname\">\n\t\t\t\t\t{eventName} &nbsp;&nbsp;&nbsp;{' '}\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{/* Edit Event Manager Tabs*/}\n\t\t\t<div className=\"eventmanager\">\n\t\t\t\t<div className=\"dashboard-tabs activity-sections\">\n\t\t\t\t\t<div className=\"tab-content\">\n\t\t\t\t\t\t<EntryReport entryReportData={entryReportData} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default EntryReportManager;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/sortable-form-elements.jsx",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/dynamic-option-group.jsx",["612","613","614"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/utils/error.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/hooks/userLoginValidation-hook.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/events/components/EventsList.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/components/EntryFormOptions.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/index.jsx",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/preview.jsx",["615","616"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/form-elements-edit.jsx",["617","618","619","620","621","622"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/dynamic-option-list.jsx",["623","624"],"/**\n * <DynamicOptionList />\n */\n\nimport React from 'react';\nimport ID from './UUID';\n\nexport default class DynamicOptionList extends React.Component {\n\tconstructor(props) {\n\t\tconst DEBUG = process.env.DEBUG_MODE;\n\t\tsuper(props);\n\t\tif (DEBUG) {\n\t\t\tconsole.log('this.props = ', this.props);\n\t\t}\n\t\tthis.state = {\n\t\t\telement: this.props.element,\n\t\t\tdata: this.props.data,\n\t\t\tdirty: false,\n\t\t\tparent: this.props.parent\n\t\t};\n\t}\n\n\t_setValue(text) {\n\t\treturn text.replace(/[^A-Z0-9]+/gi, '_').toLowerCase();\n\t}\n\n\teditOption(option_index, e) {\n\t\tif (this.DEBUG) {\n\t\t\tconsole.log('I am in editOption');\n\t\t}\n\t\tconst this_element = this.state.element;\n\t\tconst val =\n\t\t\tthis_element.options[option_index].value !==\n\t\t\tthis._setValue(this_element.options[option_index].text)\n\t\t\t\t? this_element.options[option_index].value\n\t\t\t\t: this._setValue(e.target.value);\n\n\t\tthis_element.options[option_index].text = e.target.value;\n\t\tthis_element.options[option_index].value = val;\n\t\tthis.setState({\n\t\t\telement: this_element,\n\t\t\tdirty: true\n\t\t});\n\t}\n\n\teditValue(option_index, e) {\n\t\tif (this.DEBUG) {\n\t\t\tconsole.log('I am in editValue');\n\t\t}\n\t\tconst this_element = this.state.element;\n\t\tconst val =\n\t\t\te.target.value === ''\n\t\t\t\t? this._setValue(this_element.options[option_index].text)\n\t\t\t\t: e.target.value;\n\t\tthis_element.options[option_index].value = val;\n\t\tthis.setState({\n\t\t\telement: this_element,\n\t\t\tdirty: true\n\t\t});\n\t}\n\n\t// eslint-disable-next-line no-unused-vars\n\teditOptionCorrect(option_index, e) {\n\t\tif (this.DEBUG) {\n\t\t\tconsole.log('I am in editOptionCorrect');\n\t\t}\n\t\tconst this_element = this.state.element;\n\t\tif (this.DEBUG) {\n\t\t\tconsole.log(\n\t\t\t\t'this_element.options[option_index] = ',\n\t\t\t\tthis_element.options[option_index]\n\t\t\t);\n\t\t}\n\t\tif (\n\t\t\tthis_element.options[option_index].hasOwnProperty('correct')\n\t\t) {\n\t\t\tdelete this_element.options[option_index].correct;\n\t\t} else {\n\t\t\tthis_element.options[option_index].correct = true;\n\t\t}\n\t\tif (this.DEBUG) {\n\t\t\tconsole.log('dynamic-option-list this_elemnt = ', this_element);\n\t\t}\n\t\tthis.setState({ element: this_element });\n\n\t\tthis.props.updateElement.call(this.props.preview, this_element);\n\t}\n\n\tupdateOption() {\n\t\tif (this.DEBUG) {\n\t\t\tconsole.log('I am in updateOption');\n\t\t}\n\t\tconst this_element = this.state.element;\n\t\t// to prevent ajax calls with no change\n\t\tif (this.state.dirty) {\n\t\t\tif (this.DEBUG) {\n\t\t\t\tconsole.log('in dirty');\n\t\t\t\tconsole.log('this.props.preview = ', this.props.preview);\n\t\t\t\tconsole.log('this_element = ', this_element);\n\t\t\t\tconsole.log('this.props.parent = ', this.props.parent);\n\t\t\t}\n\t\t\tthis.props.updateElement.call(this.props.preview, this_element);\n\t\t\t// ! crashes with the following line, need to investigate if there is any issue with the above line\n\t\t\t// this.props.updateElement.call(\n\t\t\t// \tthis.props.preview,\n\t\t\t// \tthis.props.parent\n\t\t\t// );\n\t\t\tthis.setState({ dirty: false });\n\t\t}\n\t}\n\n\taddOption(index) {\n\t\tif (this.DEBUG) {\n\t\t\tconsole.log('I am in addOption');\n\t\t\tconsole.log('index = ', index);\n\t\t\tconsole.log('element = ', this.state.element.options[0].key);\n\t\t\tconsole.log('this.props = ', this.props);\n\t\t}\n\t\tlet optionsLength = this.state.element.options.length;\n\t\tlet key;\n\t\tif (this.state.element.options[0].key.split('_').length > 0) {\n\t\t\tlet optionKey = this.state.element.options[0].key;\n\t\t\tlet optionName = optionKey.split('_')[0];\n\t\t\tkey = optionName + '_' + ID.uuid();\n\t\t\tif (this.DEBUG) {\n\t\t\t\tconsole.log('key = ', key);\n\t\t\t}\n\t\t}\n\n\t\tconst this_element = this.state.element;\n\t\tthis_element.options.splice(index + 1, 0, {\n\t\t\tvalue: '',\n\t\t\ttext: '',\n\t\t\tkey: key ? key : ID.uuid()\n\t\t});\n\t\tthis.props.updateElement.call(this.props.preview, this_element);\n\t}\n\n\tremoveOption(index) {\n\t\tif (this.DEBUG) {\n\t\t\tconsole.log('I am in removeOption');\n\t\t\tconsole.log('remove index = ', index);\n\t\t}\n\t\tconst this_element = this.state.element;\n\t\tthis_element.options.splice(index, 1);\n\t\tthis.props.updateElement.call(this.props.preview, this_element);\n\t}\n\n\trender() {\n\t\tif (this.state.dirty) {\n\t\t\tthis.state.element.dirty = true;\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"dynamic-option-list\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"col-sm-6\">\n\t\t\t\t\t\t\t\t<b>Options</b>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{this.props.canHaveOptionValue && (\n\t\t\t\t\t\t\t\t<div className=\"col-sm-2\">\n\t\t\t\t\t\t\t\t\t<b>Value</b>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{/* {this.props.canHaveOptionValue &&\n\t\t\t\t\t\t\t\tthis.props.canHaveOptionCorrect && (\n\t\t\t\t\t\t\t\t\t<div className=\"col-sm-4\">\n\t\t\t\t\t\t\t\t\t\t<b>Correct</b>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)} */}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</li>\n\t\t\t\t\t{this.props.element.options.map((option, index) => {\n\t\t\t\t\t\t// this is the place that handles adding options: [ ]\n\t\t\t\t\t\tif (this.DEBUG) {\n\t\t\t\t\t\t\tconsole.log('option = ', option);\n\t\t\t\t\t\t\tconsole.log('index = ', index);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst this_key = `edit_${option.key}`;\n\t\t\t\t\t\tconst val =\n\t\t\t\t\t\t\toption.value !== this._setValue(option.text)\n\t\t\t\t\t\t\t\t? option.value\n\t\t\t\t\t\t\t\t: '';\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li className=\"clearfix\" key={this_key}>\n\t\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t\t<div className=\"col-sm-6\">\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttabIndex={index + 1}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tname={`text_${index}`}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Option text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={option.text}\n\t\t\t\t\t\t\t\t\t\t\tonBlur={this.updateOption.bind(this)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.editOption.bind(this, index)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t{this.props.canHaveOptionValue && (\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-sm-2\">\n\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\tname={`value_${index}`}\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={val}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.editValue.bind(this, index)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t{/* {this.props.canHaveOptionValue &&\n\t\t\t\t\t\t\t\t\t\tthis.props.canHaveOptionCorrect && (\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-sm-1\">\n\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"1\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.editOptionCorrect.bind(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={option.hasOwnProperty('correct')}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t)} */}\n\t\t\t\t\t\t\t\t\t<div className=\"col-sm-3\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"dynamic-options-actions-buttons\">\n\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.addOption.bind(this, index)}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-success\">\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t{index > 0 && (\n\t\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.removeOption.bind(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-danger\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-minus-circle\"></i>\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/hooks/userAuth-hook.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/pages/EventPhotos.js",["625","626","627"],"import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Field, Form, Formik } from 'formik';\nimport moment from 'moment';\nimport NavigationPrompt from 'react-router-navigation-prompt';\n\nimport { useClubLoginValidation } from '../../shared/hooks/clubLoginValidation-hook';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport ImageUploader from '../../shared/components/FormElements/ImageUploader';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport PromptModal from '../../shared/components/UIElements/PromptModal';\n\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { ClubAuthContext } from '../../shared/context/auth-context';\nimport { FormContext } from '../../shared/context/form-context';\n\nimport '../../shared/css/EventForm.css';\n\nconst EventPhotos = props => {\n\tlet eId = props.eventId;\n\tconst [initialized, setInitialized] = useState(false);\n\tconst clubAuthContext = useContext(ClubAuthContext);\n\tconst formContext = useContext(FormContext);\n\n\t// contButton controls when to enable CONTINUE button, set to true after submitHandler() succeeds\n\tconst [contButton, setContButton] = useState(false);\n\t// contButtonStatus is the return value back to NewEventManger, set to true @ CONTINUE button onClick()\n\tconst [contStatus, setContinueStatus] = useState(false);\n\t// const continueHandler = () => {\n\t// \tsetContinueStatus(true);\n\t// };\n\n\t// return true back to NewEventManger to move to next stage\n\tuseEffect(() => {\n\t\tif (contStatus) {\n\t\t\tprops.eventPhotosStatus(true);\n\t\t}\n\t}, [contStatus, props]);\n\n\tuseEffect(() => {\n\t\tlet mounted = true;\n\t\tif (mounted) {\n\t\t\tformContext.setIsInsideForm(true);\n\t\t}\n\t\treturn () => {\n\t\t\tmounted = false;\n\t\t};\n\t}, [formContext]);\n\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\n\t// authentication check\n\tuseClubLoginValidation('/clubs/events/photos');\n\n\t// If we are re-directing to this page, we want to clear up clubRedirectURL\n\tlet location = useLocation();\n\tuseEffect(() => {\n\t\tlet path = location.pathname;\n\t\tlet clubRedirectURL = clubAuthContext.clubRedirectURL;\n\t\tif (path === clubRedirectURL) {\n\t\t\t// re-init redirectURL after re-direction route\n\t\t\tclubAuthContext.setClubRedirectURL(null);\n\t\t}\n\t}, [location, clubAuthContext]);\n\n\tlet image = undefined;\n\tlet courseMap = undefined;\n\n\t// initialize local storage\n\t// Get the existing data\n\tvar eventFormData = localStorage.getItem('eventFormData');\n\n\t// If no existing data, create an array; otherwise retrieve it\n\teventFormData = eventFormData ? JSON.parse(eventFormData) : {};\n\n\tconst [OKLeavePage, setOKLeavePage] = useState(true);\n\t// local storage gets the higest priority\n\t// get from localStorage\n\tif (\n\t\t!initialized &&\n\t\teventFormData &&\n\t\tmoment(eventFormData.expirationDate) > moment()\n\t) {\n\t\tsetInitialized(true);\n\t\t// Form data\n\t\tif (eventFormData.image) {\n\t\t\t//setImage(eventFormData.image);\n\t\t\t// setImageOK(false);\n\t\t}\n\t\tif (eventFormData.courseMap) {\n\t\t\t// setCourseMap(eventFormData.courseMap);\n\t\t\t// setCourseMapOK(false);\n\t\t}\n\t} else if (!initialized) {\n\t\tsetInitialized(true);\n\t\t// initialize localStorage\n\t\teventFormData['expirationDate'] = moment(\n\t\t\tmoment().add(1, 'days'),\n\t\t\tmoment.ISO_8601\n\t\t);\n\t\teventFormData['image'] = undefined;\n\t\teventFormData['courseMap'] = undefined;\n\t\tlocalStorage.setItem(\n\t\t\t'eventFormData',\n\t\t\tJSON.stringify(eventFormData)\n\t\t);\n\t}\n\n\tconst removeEventFormData = () => {\n\t\tlocalStorage.removeItem('eventFormData');\n\t\t// history.push(`/events/club/${clubAuthContext.clubId}`);\n\t};\n\n\tconst initialValues = {\n\t\timage: image,\n\t\tcourseMap: courseMap\n\t};\n\n\tconst submitHandler = async (values, actions) => {\n\t\ttry {\n\t\t\tconst formData = new FormData();\n\t\t\tformData.append('eventImage', values.image);\n\t\t\tformData.append('courseMap', values.courseMap);\n\n\t\t\tawait sendRequest(\n\t\t\t\tprocess.env.REACT_APP_BACKEND_URL + '/events/photos/' + eId,\n\t\t\t\t'PATCH',\n\t\t\t\tformData,\n\t\t\t\t{\n\t\t\t\t\t// adding JWT to header for authentication\n\t\t\t\t\tAuthorization: 'Bearer ' + clubAuthContext.clubToken\n\t\t\t\t}\n\t\t\t);\n\t\t\tsetOKLeavePage(true);\n\t\t\t// setContButton(true);\n\t\t\tsetContinueStatus(true);\n\t\t} catch (err) {}\n\t};\n\n\tconst validateImageSize = value => {\n\t\tconsole.log('value = ', value);\n\t\tlet error;\n\t\tif (value && value.size > 1500000) {\n\t\t\terror = 'File size needs to be smaller than 1.5MB';\n\t\t}\n\t\tif (value === undefined || !value) {\n\t\t\terror = 'Please upload an event image.';\n\t\t}\n\t\treturn error;\n\t};\n\n\tconst validateCourseMapSize = value => {\n\t\tlet error;\n\t\tif (value && value.size > 1500000) {\n\t\t\terror = 'File size needs to be smaller than 1.5MB';\n\t\t}\n\t\treturn error;\n\t};\n\t/***** End of Form Validation *****/\n\n\tconst eventForm = values => (\n\t\t<div className=\"event-form\">\n\t\t\t<div className=\"event-form-header\">\n\t\t\t\t<h4>Please upload event image and course map</h4>\n\t\t\t\t<h5>Course map is optional</h5>\n\t\t\t\t<hr className=\"event-form__hr\" />\n\t\t\t</div>\n\t\t\t<Formik\n\t\t\t\tenableReinitialize={true}\n\t\t\t\tinitialValues={initialValues}\n\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\tsubmitHandler(values);\n\t\t\t\t\tif (!actions.isSubmitting) {\n\t\t\t\t\t}\n\t\t\t\t}}>\n\t\t\t\t{({\n\t\t\t\t\tvalues,\n\t\t\t\t\terrors,\n\t\t\t\t\tisSubmitting,\n\t\t\t\t\tisValid,\n\t\t\t\t\tsetFieldValue,\n\t\t\t\t\ttouched,\n\t\t\t\t\thandleBlur\n\t\t\t\t}) => (\n\t\t\t\t\t<Form className=\"event-form-container\">\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"image\"\n\t\t\t\t\t\t\tname=\"image\"\n\t\t\t\t\t\t\ttitle=\"Event Image\"\n\t\t\t\t\t\t\tcomponent={ImageUploader}\n\t\t\t\t\t\t\tvalidate={validateImageSize}\n\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\n\t\t\t\t\t\t\terrorMessage={errors.image ? errors.image : ''}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tlabelStyle=\"event-form__label\"\n\t\t\t\t\t\t\tinputStyle=\"event-form__field-select\"\n\t\t\t\t\t\t\tpreviewStyle=\"image-upload__preview\"\n\t\t\t\t\t\t\terrorStyle=\"event-form__field-error\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"courseMap\"\n\t\t\t\t\t\t\tname=\"courseMap\"\n\t\t\t\t\t\t\ttitle=\"Course Map (Optional)\"\n\t\t\t\t\t\t\tcomponent={ImageUploader}\n\t\t\t\t\t\t\tvalidate={validateCourseMapSize}\n\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\n\t\t\t\t\t\t\terrorMessage={errors.courseMap ? errors.courseMap : ''}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\t// if (event.target.value) {\n\t\t\t\t\t\t\t\t// \tsetCourseMapOK(false);\n\t\t\t\t\t\t\t\t// } else {\n\t\t\t\t\t\t\t\t// \tsetCourseMapOK(true);\n\t\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tlabelStyle=\"event-form__label\"\n\t\t\t\t\t\t\tinputStyle=\"event-form__field-select\"\n\t\t\t\t\t\t\tpreviewStyle=\"image-upload__preview\"\n\t\t\t\t\t\t\terrorStyle=\"event-form__field-error\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tsize=\"medium-block\"\n\t\t\t\t\t\t\tmargin-left=\"1.5rem\"\n\t\t\t\t\t\t\tdisabled={isSubmitting}>\n\t\t\t\t\t\t\tSAVE &amp; CONTINUE\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t{/* <Button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\tmargin-left=\"1.5rem\"\n\t\t\t\t\t\t\tdisabled={!contButton}\n\t\t\t\t\t\t\tonClick={continueHandler}>\n\t\t\t\t\t\t\tContinue\n\t\t\t\t\t\t</Button> */}\n\t\t\t\t\t\t<NavigationPrompt\n\t\t\t\t\t\t\tafterConfirm={() => {\n\t\t\t\t\t\t\t\tformContext.setIsInsideForm(false);\n\t\t\t\t\t\t\t\tremoveEventFormData();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t// Confirm navigation if going to a path that does not start with current path.\n\t\t\t\t\t\t\t// We don't want to confirm navigation when OKLeavePage === true and redirect to '/clubs/auth' due to\n\t\t\t\t\t\t\t// authentication issue\n\t\t\t\t\t\t\twhen={(crntLocation, nextLocation) => {\n\t\t\t\t\t\t\t\t// remove ClubRedirectURL from memory\n\t\t\t\t\t\t\t\tclubAuthContext.setClubRedirectURL(null);\n\t\t\t\t\t\t\t\t// OKLeavePage meaning form was not touched yet\n\t\t\t\t\t\t\t\tif (OKLeavePage) {\n\t\t\t\t\t\t\t\t\tformContext.setIsInsideForm(false);\n\t\t\t\t\t\t\t\t\tremoveEventFormData();\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// nextLocation.pathname !== '/clubs/auth' &&  --- adding this line causing state update on an\n\t\t\t\t\t\t\t\t\t// unmounted component issue.  Without it, confirmation modal will pop up\n\t\t\t\t\t\t\t\t\t// always gives the warning, because we want to be able to\n\t\t\t\t\t\t\t\t\t// clear localStorage after confirm\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t!nextLocation ||\n\t\t\t\t\t\t\t\t\t\t!nextLocation.pathname.startsWith(\n\t\t\t\t\t\t\t\t\t\t\tcrntLocation.pathname\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t{({ isActive, onCancel, onConfirm }) => {\n\t\t\t\t\t\t\t\tif (isActive) {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<PromptModal\n\t\t\t\t\t\t\t\t\t\t\tonCancel={onCancel}\n\t\t\t\t\t\t\t\t\t\t\tonConfirm={onConfirm}\n\t\t\t\t\t\t\t\t\t\t\tcontentclassName=\"event-item__modal-content\"\n\t\t\t\t\t\t\t\t\t\t\tfooterclassName=\"event-item__modal-actions\"\n\t\t\t\t\t\t\t\t\t\t\terror=\"You sure want to leave? Unsaved data will be lost.\">\n\t\t\t\t\t\t\t\t\t\t\t{/* render props.children */}\n\t\t\t\t\t\t\t\t\t\t</PromptModal>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\tThis is probably an anti-pattern but ya know...\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t</NavigationPrompt>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t{isLoading && (\n\t\t\t\t<div className=\"center\">\n\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{eventForm()}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default EventPhotos;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/components/FormBuilder.js",["628","629","630","631"],"import React, { useContext, useState, useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport NavigationPrompt from 'react-router-navigation-prompt';\nimport PromptModal from '../../shared/components/UIElements/PromptModal';\n\nimport { ClubAuthContext } from '../../shared/context/auth-context';\nimport { FormContext } from '../../shared/context/form-context';\nimport { ReactFormBuilder } from '../../formbuilder/src/index';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { useClubLoginValidation } from '../../shared/hooks/clubLoginValidation-hook';\nimport { EntryFormOptions } from './EntryFormOptions';\n\nimport './FormBuilder.css';\nimport '../../formbuilder/scss/application.scss';\n\nconst FormBuilder = props => {\n\tlet eventId = props.eventId;\n\n\tconst [contButton, setContButton] = useState(false);\n\tconst [contStatus, setContStatus] = useState(false);\n\tuseEffect(() => {\n\t\tif (contStatus) {\n\t\t\tprops.formbuilderStatus(true);\n\t\t}\n\t}, [contStatus, props]);\n\n\tif (!eventId || eventId === 'error') {\n\t\t// possibly page refresh, look for localStorage\n\t\tconst storageData = JSON.parse(localStorage.getItem('eventData'));\n\t\tif (storageData && storageData.eventId) {\n\t\t\teventId = storageData.eventId;\n\t\t\t// Correct URL on browser, without it URL is showing '/events/form/error'\n\t\t\t// history.pushState(state object, title, url) 'title' is ignored in most browsers\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/API/History/pushState\n\t\t\twindow.history.pushState(\n\t\t\t\tprops.state,\n\t\t\t\t'',\n\t\t\t\t`/events/form/${eventId}`\n\t\t\t);\n\t\t}\n\t} else {\n\t\t// set eventId to localStorage for potential page refresh\n\t\t// we will remove it when the form gets submitted\n\t\t// @todo remove data when user leaves this page\n\t\tlocalStorage.setItem(\n\t\t\t'eventData',\n\t\t\tJSON.stringify({\n\t\t\t\teventId: eventId\n\t\t\t})\n\t\t);\n\t}\n\n\tconst clubAuthContext = useContext(ClubAuthContext);\n\tconst formContext = useContext(FormContext);\n\tuseEffect(() => {\n\t\tlet mounted = true;\n\t\tif (mounted) {\n\t\t\tformContext.setIsInsideForm(true);\n\t\t}\n\t\treturn () => {\n\t\t\tmounted = false;\n\t\t};\n\t}, [formContext]);\n\n\tuseClubLoginValidation(`/events/formbuilder/${eventId}`);\n\t// If we are re-directing to this page, we want to clear up clubRedirectURL\n\tlet location = useLocation();\n\tReact.useEffect(() => {\n\t\tlet path = location.pathname;\n\t\tlet clubRedirectURL = clubAuthContext.clubRedirectURL;\n\t\tif (path === clubRedirectURL) {\n\t\t\t// re-init redirectURL after re-direction route\n\t\t\tclubAuthContext.setClubRedirectURL(null);\n\t\t}\n\t}, [clubAuthContext, location]);\n\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\tconst history = useHistory();\n\tconst [published, setPublished] = useState(true);\n\tconst [unsavedData, setUnsavedData] = useState();\n\tconst [saveTemplateClicked, setSaveTemplateClicked] = useState(\n\t\tfalse\n\t);\n\n\tconst toggleSaveTemplate = event => {\n\t\tsetSaveTemplateClicked(event.target.checked);\n\t\t// after SAVE to backend, user click checkbox \"Save as entry form template\", enable SAVE button\n\t\t// if checkbox value is true\n\t\tif (event.target.checked && !unsavedData) {\n\t\t\tconst storageData = JSON.parse(\n\t\t\t\tlocalStorage.getItem('eventEntryForm')\n\t\t\t);\n\t\t\t// SAVE button enabled when there is an unsavedData\n\t\t\tif (storageData) {\n\t\t\t\tsetUnsavedData(storageData);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst saveHandler = async () => {\n\t\t// use existing localStorage data instead of querying from backend\n\t\tconst storageData = JSON.parse(\n\t\t\tlocalStorage.getItem('eventEntryForm')\n\t\t);\n\t\tif (storageData) {\n\t\t\tsetUnsavedData(storageData);\n\t\t}\n\n\t\ttry {\n\t\t\tconst [\n\t\t\t\tresponseData,\n\t\t\t\tresponseStatus,\n\t\t\t\tresponseMessage\n\t\t\t] = await sendRequest(\n\t\t\t\tprocess.env.REACT_APP_BACKEND_URL + `/events/form/${eventId}`,\n\t\t\t\t'POST',\n\t\t\t\tJSON.stringify({\n\t\t\t\t\tentryFormData: unsavedData,\n\t\t\t\t\tsaveTemplate: saveTemplateClicked\n\t\t\t\t}),\n\t\t\t\t{\n\t\t\t\t\t'Content-type': 'application/json',\n\t\t\t\t\t// adding JWT to header for authentication, JWT contains clubId\n\t\t\t\t\tAuthorization: 'Bearer ' + clubAuthContext.clubToken\n\t\t\t\t}\n\t\t\t);\n\t\t\tif (responseData) {\n\t\t\t\tsetUnsavedData(undefined);\n\t\t\t\tsetContButton(true);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.log('err = ', err);\n\t\t}\n\t};\n\n\tconst continueHandler = () => {\n\t\tsetContStatus(true);\n\t\t// history.push(`/events/${eventId}`);\n\t};\n\n\t// getResponseData is a callback function that returns responseData to its caller\n\tconst onLoad = getResponseData => {\n\t\t// GET event form from server\n\t\tconst fetchForm = async () => {\n\t\t\ttry {\n\t\t\t\tconst [\n\t\t\t\t\tresponseData,\n\t\t\t\t\tresponseStatus,\n\t\t\t\t\tresponseMessage\n\t\t\t\t] = await sendRequest(\n\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL +\n\t\t\t\t\t\t`/clubs/form/${eventId}`,\n\t\t\t\t\t'GET',\n\t\t\t\t\tnull,\n\t\t\t\t\t{\n\t\t\t\t\t\t// adding JWT to header for authentication, JWT contains clubId\n\t\t\t\t\t\tAuthorization: 'Bearer ' + clubAuthContext.clubToken\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tif (responseData) {\n\t\t\t\t\tgetResponseData(responseData);\n\t\t\t\t\tsetPublished(responseData.published);\n\t\t\t\t\tsetUnsavedData(responseData);\n\t\t\t\t\t// save the from data got from backend to localstorage\n\t\t\t\t\tlocalStorage.setItem(\n\t\t\t\t\t\t'eventEntryForm',\n\t\t\t\t\t\tJSON.stringify(responseData)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log('err = ', err);\n\t\t\t}\n\t\t};\n\t\treturn fetchForm();\n\t};\n\n\tfunction fixFormData(data) {\n\t\treturn !data || data === '[]' || data.length === 0 ? [] : data;\n\t}\n\n\tconst onPost = data => {\n\t\t// we want to save the data to localStorage for the best performance\n\t\tdata = fixFormData(data);\n\n\t\tconst setData = () => {\n\t\t\t// save the array to unsavedData and backend\n\t\t\t// format of data: {task_data: Array(6)}\n\t\t\tsetUnsavedData(data.task_data);\n\t\t\tsetPublished(false);\n\t\t\t// update the new data to localStorage\n\t\t\tlocalStorage.setItem(\n\t\t\t\t'eventEntryForm',\n\t\t\t\tJSON.stringify(data.task_data)\n\t\t\t);\n\t\t};\n\n\t\treturn setData();\n\t};\n\n\tconst cleanUp = () => {\n\t\tclubAuthContext.setClubRedirectURL(null);\n\t\tsetUnsavedData(undefined);\n\t\tlocalStorage.removeItem('eventData');\n\t\tlocalStorage.removeItem('eventEntryForm');\n\t};\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t{isLoading && (\n\t\t\t\t<div className=\"center\">\n\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<div className=\"formbuilder-header\">\n\t\t\t\t<h4>Entry Form Builder</h4>\n\t\t\t\t<Button\n\t\t\t\t\tdisabled={!unsavedData}\n\t\t\t\t\tsize=\"entryform--save\"\n\t\t\t\t\tonClick={saveHandler}>\n\t\t\t\t\tSAVE\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tdisabled={!contButton}\n\t\t\t\t\tsize=\"entryform--back\"\n\t\t\t\t\tonClick={continueHandler}>\n\t\t\t\t\tCONTINUE\n\t\t\t\t</Button>\n\t\t\t\t{/* <Button size=\"entryform--back\" onClick={backHandler}>\n\t\t\t\t\tBACK\n\t\t\t\t</Button> */}\n\t\t\t\t<label className=\"formbuilder-label\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tid=\"saveTemplate\"\n\t\t\t\t\t\tname=\"saveTemplate\"\n\t\t\t\t\t\tonChange={toggleSaveTemplate}\n\t\t\t\t\t/>\n\t\t\t\t\t&nbsp; Save as entry form template\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<div className=\"formbuilder-container\">\n\t\t\t\t<ReactFormBuilder\n\t\t\t\t\tdisabled={published}\n\t\t\t\t\tonLoad={onLoad}\n\t\t\t\t\tonPost={onPost}\n\t\t\t\t\ttoolbarItems={EntryFormOptions()}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<NavigationPrompt\n\t\t\t\tafterConfirm={() => {\n\t\t\t\t\tcleanUp();\n\t\t\t\t\tformContext.setIsInsideForm(false);\n\t\t\t\t}}\n\t\t\t\t// Confirm navigation if going to a path that does not start with current path:\n\t\t\t\t//when={!!unsavedData}\n\t\t\t\twhen={(crntLocation, nextLocation) =>\n\t\t\t\t\t!nextLocation ||\n\t\t\t\t\t!nextLocation.pathname.startsWith(crntLocation.pathname)\n\t\t\t\t}>\n\t\t\t\t{({ isActive, onCancel, onConfirm }) => {\n\t\t\t\t\tif (isActive) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<PromptModal\n\t\t\t\t\t\t\t\tonCancel={onCancel}\n\t\t\t\t\t\t\t\tonConfirm={onConfirm}\n\t\t\t\t\t\t\t\tcontentClass=\"event-item__modal-content\"\n\t\t\t\t\t\t\t\tfooterClass=\"event-item__modal-actions\"\n\t\t\t\t\t\t\t\terror=\"You sure want to leave? Unsaved data will be lost.\">\n\t\t\t\t\t\t\t\t{/* render props.children */}\n\t\t\t\t\t\t\t</PromptModal>\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn history.push('/error');\n\t\t\t\t}}\n\t\t\t</NavigationPrompt>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default FormBuilder;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/pages/ClubDashboardToolbar.js",["632","633","634","635"],"import React, { useContext } from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport { ClubAuthContext } from '../../shared/context/auth-context';\nimport './ClubDashboardToolbar.css';\n\nconst ClubDashboardToolbar = () => {\n\tconst clubAuthContext = useContext(ClubAuthContext);\n\tlet cid = clubAuthContext.clubId;\n\tlet clubName = clubAuthContext.clubName;\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div className=\"dashboard-tabs-header clearfix\">\n\t\t\t\t<div className=\"clubname-title\">\n\t\t\t\t\t<h1 className=\"\">{clubName}</h1>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className=\"dashboard-nav\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li className=\"dashboard-nav-menu dropdown\">\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tto=\"/clubs/clubManager\"\n\t\t\t\t\t\t\texact=\"exact\"\n\t\t\t\t\t\t\tclassName=\"dropdown-blackbutton\">\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"fa fa-sort-desc pull-right\"\n\t\t\t\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\tClub Manager\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<div className=\"dropdown-content\">\n\t\t\t\t\t\t\t<NavLink to={`/clubs/profileManager/${cid}`}>\n\t\t\t\t\t\t\t\tProfile Manager\n\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t<NavLink to={`/clubs/accountManager/${cid}`} exact>\n\t\t\t\t\t\t\t\tAccount Manager\n\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t{/* <NavLink to={`/clubs/teamManager/${cid}`} exact>\n\t\t\t\t\t\t\t\tTeam Manager\n\t\t\t\t\t\t\t</NavLink> */}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</li>\n\n\t\t\t\t\t<li className=\"dashboard-nav-menu dropdown\">\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tto=\"/clubs/eventManager/\"\n\t\t\t\t\t\t\texact=\"exact\"\n\t\t\t\t\t\t\tclassName=\"dropdown-greybutton\">\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"fa fa-sort-desc pull-right\"\n\t\t\t\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\tEvent Manager\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<div className=\"dropdown-content\">\n\t\t\t\t\t\t\t<NavLink to={'/clubs/newEventManager'} exact>\n\t\t\t\t\t\t\t\tAdd New Event\n\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t<NavLink to={`/clubs/editEventSelector/${cid}`} exact>\n\t\t\t\t\t\t\t\tEdit Events\n\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t<NavLink to={`/clubs/viewEventSelector/${cid}`} exact>\n\t\t\t\t\t\t\t\tView Events\n\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</li>\n\n\t\t\t\t\t<li className=\"dashboard-nav-menu dropdown\">\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tto=\"/clubs/RegistrationManager\"\n\t\t\t\t\t\t\texact=\"exact\"\n\t\t\t\t\t\t\tclassName=\"dropdown-blackbutton\">\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"fa fa-sort-desc pull-right\"\n\t\t\t\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\tRegistration Manager\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<div className=\"dropdown-content\">\n\t\t\t\t\t\t\t<NavLink to={`/clubs/eventReportSelector/${cid}`} exact>\n\t\t\t\t\t\t\t\tEntry Report Manager\n\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t<a href=\"#\">Waitlist</a>\n\t\t\t\t\t\t\t<a href=\"#\">Pending Waitlist Invitations</a>\n\t\t\t\t\t\t\t<a href=\"#\">Detailed Analytics</a>\n\t\t\t\t\t\t\t<a href=\"#\">User Credits</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</li>\n\n\t\t\t\t\t<li className=\"dashboard-nav-menu dropdown\">\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tto=\"/clubs/manageClub/list\"\n\t\t\t\t\t\t\texact=\"exact\"\n\t\t\t\t\t\t\tclassName=\"dropdown-greybutton\">\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"fa fa-sort-desc pull-right\"\n\t\t\t\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\tCommunication Center (In development)\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t{/* <div className=\"dropdown-content\">\n\t\t\t\t\t\t\t<NavLink to={'/clubs/events/new'} exact>\n\t\t\t\t\t\t\t\tAdd New Event\n\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t<NavLink to={`/events/club/${cid}/`} exact>\n\t\t\t\t\t\t\t\tCLUB EVENTS\n\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t</div> */}\n\t\t\t\t\t</li>\n\n\t\t\t\t\t<li className=\"dashboard-nav-menu dropdown\">\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tto=\"/clubs/manageClub/list\"\n\t\t\t\t\t\t\texact=\"exact\"\n\t\t\t\t\t\t\tclassName=\"dropdown-blackbutton\">\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"fa fa-sort-desc pull-right\"\n\t\t\t\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{' Coming Soon '}\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t{/* <div className=\"dropdown-content\">\n\t\t\t\t\t\t\t<a href=\"#\">Test</a>\n\t\t\t\t\t\t</div> */}\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default ClubDashboardToolbar;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/EventManager.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/ViewEventSelector.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/MaterialTable.js",["636"],"import React from 'react';\nimport MaterialTable from 'material-table';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\n\nimport './ClubManager.css';\nimport { TramOutlined } from '@material-ui/icons';\n\nconst MyMaterialTable = props => {\n\tlet entryList = props.entryList;\n\tlet waitlist = props.waitlist;\n\tlet displayName = props.displayName;\n\tlet eventName = props.eventName;\n\tlet showLoading = props.showLoading;\n\tlet raceClassLookup = props.raceClassLookup;\n\tlet runGroupLookup = props.runGroupLookup;\n\tlet workerAssignmentLookup = props.workerAssignmentLookup;\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div className=\"entrylist-table\">\n\t\t\t\t{displayName && (\n\t\t\t\t\t<MaterialTable\n\t\t\t\t\t\ttitle={`${eventName} Entry List`}\n\t\t\t\t\t\tisLoading={showLoading}\n\t\t\t\t\t\tcomponents={{\n\t\t\t\t\t\t\tOverlayLoading: props => (\n\t\t\t\t\t\t\t\t<div className=\"center\">\n\t\t\t\t\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tborder: '2px solid gray',\n\t\t\t\t\t\t\tmaxWidth: '1450px',\n\t\t\t\t\t\t\tmarginTop: '10px',\n\t\t\t\t\t\t\tmarginLeft: '20px'\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tcolumns={[\n\t\t\t\t\t\t\t{ title: 'Last Name', field: 'lastName' },\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: 'First Name',\n\t\t\t\t\t\t\t\tfield: 'firstName',\n\t\t\t\t\t\t\t\tfiltering: false\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: 'Car Number',\n\t\t\t\t\t\t\t\tfield: 'carNumber',\n\t\t\t\t\t\t\t\tfiltering: false\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{ title: 'Car', field: 'car', filtering: false },\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: 'Race Class',\n\t\t\t\t\t\t\t\tfield: 'raceClass',\n\t\t\t\t\t\t\t\tlookup: raceClassLookup\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: 'Run Group',\n\t\t\t\t\t\t\t\tfield: 'runGroup',\n\t\t\t\t\t\t\t\tlookup: runGroupLookup\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: 'Worker Group',\n\t\t\t\t\t\t\t\tfield: 'workerAssignment',\n\t\t\t\t\t\t\t\tlookup: workerAssignmentLookup\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]}\n\t\t\t\t\t\tdata={entryList}\n\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\tfiltering: true,\n\t\t\t\t\t\t\texportButton: true\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{displayName && waitlist !== [] && (\n\t\t\t\t\t<MaterialTable\n\t\t\t\t\t\ttitle={`${eventName} Waitlist`}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tborder: '2px solid gray',\n\t\t\t\t\t\t\tmaxWidth: '1450px',\n\t\t\t\t\t\t\toverflow: 'scroll',\n\t\t\t\t\t\t\tmarginTop: '10px',\n\t\t\t\t\t\t\tmarginLeft: '20px'\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tcolumns={[\n\t\t\t\t\t\t\t{ title: 'Last Name', field: 'lastName' },\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: 'First Name',\n\t\t\t\t\t\t\t\tfield: 'firstName',\n\t\t\t\t\t\t\t\tfiltering: false\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: 'Car Number',\n\t\t\t\t\t\t\t\tfield: 'carNumber',\n\t\t\t\t\t\t\t\tfiltering: false\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{ title: 'Car', field: 'car', filtering: false },\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: 'Race Class',\n\t\t\t\t\t\t\t\tfield: 'raceClass',\n\t\t\t\t\t\t\t\tlookup: raceClassLookup,\n\t\t\t\t\t\t\t\tfiltering: false\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: 'Run Group',\n\t\t\t\t\t\t\t\tfield: 'runGroup',\n\t\t\t\t\t\t\t\tlookup: runGroupLookup,\n\t\t\t\t\t\t\t\tfiltering: false\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: 'Worker Group',\n\t\t\t\t\t\t\t\tfield: 'workerAssignment',\n\t\t\t\t\t\t\t\tlookup: workerAssignmentLookup,\n\t\t\t\t\t\t\t\tfiltering: false\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]}\n\t\t\t\t\t\tdata={waitlist}\n\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\tfiltering: false,\n\t\t\t\t\t\t\tsorting: false,\n\t\t\t\t\t\t\texportButton: true\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{!displayName && (\n\t\t\t\t\t<MaterialTable\n\t\t\t\t\t\ttitle={`${eventName} Entry List`}\n\t\t\t\t\t\tcolumns={[\n\t\t\t\t\t\t\t{ title: 'User Name', field: 'userName' },\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: 'Car Number',\n\t\t\t\t\t\t\t\tfield: 'carNumber',\n\t\t\t\t\t\t\t\tfiltering: false\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{ title: 'Car', field: 'car', filtering: false },\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: 'Race Class',\n\t\t\t\t\t\t\t\tfield: 'raceClass',\n\t\t\t\t\t\t\t\tlookup: raceClassLookup\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: 'Run Group',\n\t\t\t\t\t\t\t\tfield: 'runGroup',\n\t\t\t\t\t\t\t\tlookup: runGroupLookup\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: 'Worker Group',\n\t\t\t\t\t\t\t\tfield: 'workerAssignment',\n\t\t\t\t\t\t\t\tlookup: workerAssignmentLookup\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]}\n\t\t\t\t\t\tdata={entryList}\n\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\tfiltering: true,\n\t\t\t\t\t\t\texportButton: true\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{!displayName && waitlist !== [] && (\n\t\t\t\t\t<MaterialTable\n\t\t\t\t\t\ttitle={`${eventName} Waitlist`}\n\t\t\t\t\t\tcolumns={[\n\t\t\t\t\t\t\t{ title: 'User Name', field: 'userName' },\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: 'Car Number',\n\t\t\t\t\t\t\t\tfield: 'carNumber'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{ title: 'Car', field: 'car' },\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: 'Race Class',\n\t\t\t\t\t\t\t\tfield: 'raceClass',\n\t\t\t\t\t\t\t\tlookup: raceClassLookup\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: 'Run Group',\n\t\t\t\t\t\t\t\tfield: 'runGroup',\n\t\t\t\t\t\t\t\tlookup: runGroupLookup\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: 'Worker Group',\n\t\t\t\t\t\t\t\tfield: 'workerAssignment',\n\t\t\t\t\t\t\t\tlookup: workerAssignmentLookup\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]}\n\t\t\t\t\t\tdata={waitlist}\n\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\tsorting: false,\n\t\t\t\t\t\t\texportButton: true\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default MyMaterialTable;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/EditEventSelector.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/users/pages/UserAuth.js",["637","638"],"import React, { useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport { Field, Form, Formik } from 'formik';\nimport ImageUploader from '../../shared/components/FormElements/ImageUploader';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\n\nimport { UserAuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst UserAuth = () => {\n\tconst userAuthContext = useContext(UserAuthContext);\n\tconst [isLoginMode, setIsLoginMode] = useState(true);\n\tconst [passwordError, setPasswordError] = useState();\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\n\tconst switchModeHandler = () => {\n\t\tsetIsLoginMode(prevMode => !prevMode);\n\t};\n\n\tconst history = useHistory();\n\tconst userSubmitHandler = async values => {\n\t\t// meaning we don't want to reload the page after form submission\n\t\t// all the input values stay intact on the form\n\t\t// event.preventDefault();\n\n\t\tif (isLoginMode) {\n\t\t\ttry {\n\t\t\t\t// use custom hook. send login request to Backend\n\t\t\t\tconst [\n\t\t\t\t\tresponseData,\n\t\t\t\t\tresponseStatus,\n\t\t\t\t\tresponseMessage\n\t\t\t\t] = await sendRequest(\n\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL + '/users/login',\n\t\t\t\t\t'POST',\n\t\t\t\t\tJSON.stringify({\n\t\t\t\t\t\temail: values.email,\n\t\t\t\t\t\tpassword: values.password\n\t\t\t\t\t}),\n\t\t\t\t\t{\n\t\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tif (userAuthContext.userRedirectURL) {\n\t\t\t\t\t// for re-direction, we need to set login information to be able to send request to backend\n\t\t\t\t\tuserAuthContext.userLogin(\n\t\t\t\t\t\tresponseData.userId,\n\t\t\t\t\t\tresponseData.userName,\n\t\t\t\t\t\tresponseData.token,\n\t\t\t\t\t\t'',\n\t\t\t\t\t\tresponseData.entries,\n\t\t\t\t\t\tresponseData.image\n\t\t\t\t\t);\n\t\t\t\t\thistory.push(userAuthContext.userRedirectURL);\n\t\t\t\t} else {\n\t\t\t\t\t/**\n\t\t\t\t\t * Need to put redirect before calling userAuthContext.userLogin(responseData.user.id).\n\t\t\t\t\t * Otherwise App.js has UserAuthContext.provider will re-render App and go to\n\t\t\t\t\t * <Redirect to=\"/\"> If we have components that send http request in that Route\n\t\t\t\t\t * the http request will be aborted and got a warning:\n\t\t\t\t\t * Warning: Can't perform a React state update on an unmounted component. when\n\t\t\t\t\t * trying to redirect page after logging\n\t\t\t\t\t */\n\t\t\t\t\t// user.id is coming from usersController loginUser\n\t\t\t\t\t// id is from {getters: true}\n\t\t\t\t\tuserAuthContext.userLogin(\n\t\t\t\t\t\tresponseData.userId,\n\t\t\t\t\t\tresponseData.userName,\n\t\t\t\t\t\tresponseData.token,\n\t\t\t\t\t\t'', //expirationDate will be defined in userAuth-hook\n\t\t\t\t\t\tresponseData.entries,\n\t\t\t\t\t\tresponseData.image\n\t\t\t\t\t);\n\t\t\t\t\t// forward page needs to be after userAuthContext.userLoging() because <Route> is designed\n\t\t\t\t\t// only if (userToken), we are able to access the route\n\t\t\t\t\thistory.push(`/users/events/${responseData.userId}`);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t// empty. Custom hook takes care of it already\n\t\t\t\tconsole.log('UserAuth err= ', err);\n\t\t\t}\n\t\t} else {\n\t\t\t//user signup\n\t\t\ttry {\n\t\t\t\t// matching passwords\n\t\t\t\tif (values.password !== values.passwordValidation) {\n\t\t\t\t\tsetPasswordError('Passwords do not match!');\n\t\t\t\t\tthrow new Error('password no match');\n\t\t\t\t}\n\n\t\t\t\t// FormData() is a browser API. We can append text or binary data to FormData\n\t\t\t\tconst formData = new FormData();\n\t\t\t\tformData.append('userName', values.userName);\n\t\t\t\tformData.append('lastName', values.lastName);\n\t\t\t\tformData.append('firstName', values.firstName);\n\t\t\t\tformData.append('email', values.email);\n\t\t\t\tformData.append('password', values.password);\n\t\t\t\tformData.append(\n\t\t\t\t\t'passwordValidation',\n\t\t\t\t\tvalues.passwordValidation\n\t\t\t\t);\n\t\t\t\tformData.append('userImage', values.image);\n\n\t\t\t\t// the request needs to match backend usersRoutes /signup route\n\t\t\t\t// With fromData, headers cannot be {Content-Type: application/json}\n\t\t\t\tawait sendRequest(\n\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL + '/users/signup',\n\t\t\t\t\t'POST',\n\t\t\t\t\tformData\n\t\t\t\t);\n\t\t\t\t// set isLoginMode to true to render login page\n\t\t\t\tsetIsLoginMode(true);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log('UserAuth error = ', err);\n\t\t\t}\n\t\t}\n\t};\n\tconst clearErr = () => {\n\t\tclearError();\n\t\tsetPasswordError(null);\n\t};\n\n\t// Formik section\n\tconst initialValues = {\n\t\tuserName: '',\n\t\tlastName: '',\n\t\tfirstName: '',\n\t\temail: '',\n\t\timage: undefined,\n\t\tpassword: '',\n\t\tpasswordValidation: ''\n\t};\n\tconst validateUserName = value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'User Name is required.';\n\t\t}\n\t\treturn error;\n\t};\n\tconst validateLastName = value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Last Name is required.';\n\t\t}\n\t\treturn error;\n\t};\n\tconst validateFirstName = value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'First Name is required.';\n\t\t}\n\t\treturn error;\n\t};\n\tconst validateEmail = value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Email is required.';\n\t\t} else {\n\t\t\tconst pattern = /[a-z0-9A-Z!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9A-Z!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n\t\t\tif (!pattern.test(value)) {\n\t\t\t\terror = 'Please enter a valid email';\n\t\t\t}\n\t\t}\n\t\treturn error;\n\t};\n\tconst validatePassword = value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Password is required.';\n\t\t} else if (value.length < 6) {\n\t\t\terror = 'Minimum password length is 6 characters.';\n\t\t}\n\t\treturn error;\n\t};\n\tconst validateImage = value => {\n\t\tlet error;\n\t\tif (value && value.size > 1500000) {\n\t\t\terror = 'File size needs to be smaller than 1.5MB';\n\t\t} else {\n\t\t}\n\t\treturn error;\n\t};\n\n\tconst userAuthForm = values => (\n\t\t<div className=\"auth-div\">\n\t\t\t<h4 className=\"auth-form-header\">\n\t\t\t\t<i className=\"far fa-user\" />\n\t\t\t\t&nbsp;Driver Login\n\t\t\t</h4>\n\t\t\t<hr className=\"auth-form--hr\" />\n\n\t\t\t<Formik\n\t\t\t\tinitialValues={initialValues}\n\t\t\t\tonSubmit={userSubmitHandler}>\n\t\t\t\t{({ errors, isValid, touched }) => (\n\t\t\t\t\t<Form className=\"auth-from-container\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label htmlFor=\"email\" className=\"auth-form-label\">\n\t\t\t\t\t\t\t\tEmail\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tvalidate={validateEmail}\n\t\t\t\t\t\t\t\tclassName=\"auth-form-input\"\n\t\t\t\t\t\t\t\tautoComplete=\"username\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{touched.email && errors.email && (\n\t\t\t\t\t\t\t\t<div className=\"auth-form-error\">{errors.email}</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label htmlFor=\"password\" className=\"auth-form-label\">\n\t\t\t\t\t\t\t\tPassword\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tvalidate={validatePassword}\n\t\t\t\t\t\t\t\tclassName=\"auth-form-input\"\n\t\t\t\t\t\t\t\tautoComplete=\"new-password\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{touched.password && errors.password && (\n\t\t\t\t\t\t\t\t<div className=\"auth-form-error\">\n\t\t\t\t\t\t\t\t\t{errors.password}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Button disabled={!isValid} type=\"submit\" size=\"small\">\n\t\t\t\t\t\t\tLOGIN\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button size=\"small\" to=\"/\">\n\t\t\t\t\t\t\tCANCEL\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t</div>\n\t);\n\n\tconst userSignupForm = values => (\n\t\t<div className=\"auth-div\">\n\t\t\t<h4 className=\"auth-form-header\">\n\t\t\t\t<i className=\"fas fa-user-plus\" />\n\t\t\t\t&nbsp;Sign up a new account\n\t\t\t</h4>\n\t\t\t<hr className=\"auth-form--hr\" />\n\n\t\t\t<Formik\n\t\t\t\tinitialValues={initialValues}\n\t\t\t\tonSubmit={userSubmitHandler}>\n\t\t\t\t{({\n\t\t\t\t\terrors,\n\t\t\t\t\tisValid,\n\t\t\t\t\ttouched,\n\t\t\t\t\tsetFieldValue,\n\t\t\t\t\thandleBlur\n\t\t\t\t}) => (\n\t\t\t\t\t<Form className=\"auth-from-container\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label htmlFor=\"userName\" className=\"auth-form-label\">\n\t\t\t\t\t\t\t\tUser Name\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tid=\"userName\"\n\t\t\t\t\t\t\t\tname=\"userName\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tvalidate={validateUserName}\n\t\t\t\t\t\t\t\tclassName=\"auth-form-input\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{touched.userName && errors.userName && (\n\t\t\t\t\t\t\t\t<div className=\"auth-form-error\">\n\t\t\t\t\t\t\t\t\t{errors.userName}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label htmlFor=\"lastName\" className=\"auth-form-label\">\n\t\t\t\t\t\t\t\tLast Name\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tid=\"lastName\"\n\t\t\t\t\t\t\t\tname=\"lastName\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tvalidate={validateLastName}\n\t\t\t\t\t\t\t\tclassName=\"auth-form-input\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{touched.lastName && errors.lastName && (\n\t\t\t\t\t\t\t\t<div className=\"auth-form-error\">\n\t\t\t\t\t\t\t\t\t{errors.lastName}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label htmlFor=\"firstName\" className=\"auth-form-label\">\n\t\t\t\t\t\t\t\tFirst Name\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tid=\"firstName\"\n\t\t\t\t\t\t\t\tname=\"firstName\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tvalidate={validateFirstName}\n\t\t\t\t\t\t\t\tclassName=\"auth-form-input\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{touched.firstName && errors.firstName && (\n\t\t\t\t\t\t\t\t<div className=\"auth-form-error\">\n\t\t\t\t\t\t\t\t\t{errors.firstName}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label htmlFor=\"email\" className=\"auth-form-label\">\n\t\t\t\t\t\t\t\tEmail\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tvalidate={validateEmail}\n\t\t\t\t\t\t\t\tclassName=\"auth-form-input\"\n\t\t\t\t\t\t\t\tautoComplete=\"username\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{touched.email && errors.email && (\n\t\t\t\t\t\t\t\t<div className=\"auth-form-error\">{errors.email}</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"image\"\n\t\t\t\t\t\t\tname=\"image\"\n\t\t\t\t\t\t\ttitle=\"User Image\"\n\t\t\t\t\t\t\tcomponent={ImageUploader}\n\t\t\t\t\t\t\tvalidate={validateImage}\n\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\n\t\t\t\t\t\t\terrorMessage={errors.image ? errors.image : ''}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tlabelStyle=\"auth-form-label\"\n\t\t\t\t\t\t\tinputStyle=\"auth-form-input\"\n\t\t\t\t\t\t\tpreviewStyle=\"auth-form-image-upload__preview\"\n\t\t\t\t\t\t\terrorStyle=\"auth-form-error\"\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label htmlFor=\"password\" className=\"auth-form-label\">\n\t\t\t\t\t\t\t\tPassword (minimum 6 characters)\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tvalidate={validatePassword}\n\t\t\t\t\t\t\t\tclassName=\"auth-form-input\"\n\t\t\t\t\t\t\t\tautoComplete=\"new-password\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{touched.password && errors.password && (\n\t\t\t\t\t\t\t\t<div className=\"auth-form-error\">\n\t\t\t\t\t\t\t\t\t{errors.password}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\thtmlFor=\"passwordValidation\"\n\t\t\t\t\t\t\t\tclassName=\"auth-form-label\">\n\t\t\t\t\t\t\t\tPlease re-enter password\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tid=\"passwordValidation\"\n\t\t\t\t\t\t\t\tname=\"passwordValidation\"\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tvalidate={validatePassword}\n\t\t\t\t\t\t\t\tclassName=\"auth-form-input\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{touched.passwordValidation &&\n\t\t\t\t\t\t\t\terrors.passwordValidation && (\n\t\t\t\t\t\t\t\t\t<div className=\"auth-form-error\">\n\t\t\t\t\t\t\t\t\t\t{errors.passwordValidation}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Button size=\"small\" disabled={!isValid} type=\"submit\">\n\t\t\t\t\t\t\tSignup\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button to=\"/\" size=\"small\">\n\t\t\t\t\t\t\tCANCEL\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t</div>\n\t);\n\treturn (\n\t\t<React.Fragment>\n\t\t\t{/* error coming from const [error, setError] = useState(); */}\n\t\t\t<ErrorModal error={error || passwordError} onClear={clearErr} />\n\t\t\t{isLoading && <LoadingSpinner asOverlay />}\n\t\t\t{isLoginMode && userAuthForm()}\n\t\t\t{!isLoginMode && userSignupForm()}\n\t\t\t<div className=\"auth-footer-div\">\n\t\t\t\t<p>No Account? Please sign up a new account.</p>\n\t\t\t\t<Button size=\"small\" inverse onClick={switchModeHandler}>\n\t\t\t\t\tSWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default UserAuth;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/cars/pages/UpdateCar.js",["639","640","641"],"import React, { useContext, useEffect, useState } from 'react';\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\nimport { Field, Form, Formik } from 'formik';\nimport moment from 'moment';\nimport NavigationPrompt from 'react-router-navigation-prompt';\n\n// import { EditorState } from 'draft-js';\n// import { RichEditorExample } from '../components/RichEditor';\n// import 'draft-js/dist/Draft.css';\n\nimport { useUserLoginValidation } from '../../shared/hooks/userLoginValidation-hook';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport ImageUploader from '../../shared/components/FormElements/ImageUploader';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport PromptModal from '../../shared/components/UIElements/PromptModal';\n\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { UserAuthContext } from '../../shared/context/auth-context';\nimport { FormContext } from '../../shared/context/form-context';\n\nimport '../../shared/css/EventForm.css';\n\nconst UpdateCar = setFieldValue => {\n\tconst [initialized, setInitialized] = useState(false);\n\tconst userAuthContext = useContext(UserAuthContext);\n\tconst formContext = useContext(FormContext);\n\tlet userName = userAuthContext.userName;\n\tuseEffect(() => {\n\t\tlet mounted = true;\n\t\tif (mounted) {\n\t\t\tformContext.setIsInsideForm(true);\n\t\t}\n\t\treturn () => {\n\t\t\tmounted = false;\n\t\t};\n\t}, [formContext]);\n\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\n\tlet carId = useParams().carId;\n\t// authentication check\n\tuseUserLoginValidation(`/users/cars/update/:${carId}`);\n\n\t// If we are re-directing to this page, we want to clear up userRedirectURL\n\tlet location = useLocation();\n\tuseEffect(() => {\n\t\tlet path = location.pathname;\n\t\tlet userRedirectURL = userAuthContext.userRedirectURL;\n\t\tif (path === userRedirectURL) {\n\t\t\t// re-init redirectURL after re-direction route\n\t\t\tuserAuthContext.setUserRedirectURL(null);\n\t\t}\n\t}, [location, userAuthContext]);\n\n\tconst [year, setYear] = useState('');\n\tconst [make, setMake] = useState('');\n\tconst [model, setModel] = useState('');\n\tconst [trimLevel, setTrimLevel] = useState('');\n\tconst [share, setShare] = useState(false);\n\tconst [tireBrand, setTireBrand] = useState('');\n\tconst [tireName, setTireName] = useState('');\n\tconst [tireFrontWidth, setTireFrontWidth] = useState('');\n\tconst [tireFrontDiameter, setTireFrontDiameter] = useState('');\n\tconst [tireFrontRatio, setTireFrontRatio] = useState('');\n\tconst [tireRearWidth, setTireRearWidth] = useState('');\n\tconst [tireRearDiameter, setTireRearDiameter] = useState('');\n\tconst [tireRearRatio, setTireRearRatio] = useState('');\n\tconst [frontPressure, setFrontPressure] = useState('');\n\tconst [rearPressure, setRearPressure] = useState('');\n\tconst [LFCamber, setLFCamber] = useState('');\n\tconst [RFCamber, setRFCamber] = useState('');\n\tconst [LRCamber, setLRCamber] = useState('');\n\tconst [RRCamber, setRRCamber] = useState('');\n\tconst [LFCaster, setLFCaster] = useState('');\n\tconst [RFCaster, setRFCaster] = useState('');\n\tconst [LFToe, setLFToe] = useState('');\n\tconst [RFToe, setRFToe] = useState('');\n\tconst [frontToe, setFrontToe] = useState('');\n\tconst [LRToe, setLRToe] = useState('');\n\tconst [RRToe, setRRToe] = useState('');\n\tconst [rearToe, setRearToe] = useState('');\n\tconst [FBar, setFBar] = useState('');\n\tconst [RBar, setRBar] = useState('');\n\tconst [FRebound, setFRebound] = useState('');\n\tconst [RRebound, setRRebound] = useState('');\n\tconst [FCompression, setFCompression] = useState('');\n\tconst [RCompression, setRCompression] = useState('');\n\tconst [note, setNote] = useState('');\n\n\t// todo: retrieve file from Reader: const [image, setImage] = useState();\n\t// todo: const [courseMap, setCourseMap] = useState('');\n\tlet image = undefined;\n\n\tconst [OKLeavePage, setOKLeavePage] = useState(true);\n\tconst [loadedCar, setLoadedCar] = useState();\n\n\tlet initialValues = {};\n\n\tuseEffect(() => {\n\t\tconst queryCar = async () => {\n\t\t\ttry {\n\t\t\t\tconst [\n\t\t\t\t\tresponseData,\n\t\t\t\t\tresponseStatus,\n\t\t\t\t\tresponseMessage\n\t\t\t\t] = await sendRequest(\n\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL + `/cars/${carId}`,\n\t\t\t\t\t'GET',\n\t\t\t\t\tnull,\n\t\t\t\t\t{\n\t\t\t\t\t\t// adding JWT to header for authentication, JWT contains clubId\n\t\t\t\t\t\tAuthorization: 'Bearer ' + userAuthContext.userToken\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tif (!responseData.car) {\n\t\t\t\t\tthrow new Error('Request error, car data was not found');\n\t\t\t\t}\n\t\t\t\tsetLoadedCar(responseData.car);\n\t\t\t\tlet car = responseData.car;\n\t\t\t\tsetYear(car.year);\n\t\t\t\tsetMake(car.make);\n\t\t\t\tsetModel(car.model);\n\t\t\t\tsetTrimLevel(car.trimLevel);\n\t\t\t\tsetShare(car.share);\n\t\t\t\tsetTireBrand(car.tireBrand);\n\t\t\t\tsetTireName(car.tireName);\n\t\t\t\tsetTireFrontWidth(car.tireFrontWidth);\n\t\t\t\tsetTireFrontDiameter(car.tireFrontDiameter);\n\t\t\t\tsetTireFrontRatio(car.tireFrontRatio);\n\t\t\t\tsetTireRearWidth(car.tireRearWidth);\n\t\t\t\tsetTireRearDiameter(car.tireRearDiameter);\n\t\t\t\tsetTireRearRatio(car.tireRearRatio);\n\t\t\t\tsetFrontPressure(car.frontPressure);\n\t\t\t\tsetRearPressure(car.rearPressure);\n\t\t\t\tsetLFCamber(car.LFCamber);\n\t\t\t\tsetRFCamber(car.RFCamber);\n\t\t\t\tsetLRCamber(car.LRCamber);\n\t\t\t\tsetRRCamber(car.RRCamber);\n\t\t\t\tsetLFCaster(car.LFCaster);\n\t\t\t\tsetRFCaster(car.RFCaster);\n\t\t\t\tsetLFToe(car.LFToe);\n\t\t\t\tsetRFToe(car.RFToe);\n\t\t\t\tsetFrontToe(car.frontToe);\n\t\t\t\tsetLRToe(car.LRToe);\n\t\t\t\tsetRRToe(car.RRToe);\n\t\t\t\tsetRearToe(car.rearToe);\n\t\t\t\tsetFBar(car.FBar);\n\t\t\t\tsetRBar(car.RBar);\n\t\t\t\tsetFRebound(car.FRebound);\n\t\t\t\tsetRRebound(car.RRebound);\n\t\t\t\tsetFCompression(car.FCompression);\n\t\t\t\tsetRCompression(car.RCompression);\n\t\t\t\tsetNote(car.note);\n\t\t\t} catch (err) {}\n\t\t};\n\t\tqueryCar();\n\t}, [sendRequest, carId, initialized]);\n\n\t// initialize local storage\n\t// Get the existing data\n\tvar carFormData = localStorage.getItem('carFormData');\n\n\t// If no existing data, create an array; otherwise retrieve it\n\tcarFormData = carFormData ? JSON.parse(carFormData) : {};\n\n\t// local storage gets the higest priority\n\t// get from localStorage\n\tif (\n\t\t!initialized &&\n\t\tcarFormData &&\n\t\tmoment(carFormData.expirationDate) > moment()\n\t) {\n\t\tsetInitialized(true);\n\t\t// Form data\n\t\tif (carFormData.year) {\n\t\t\tsetYear(carFormData.year);\n\t\t}\n\t\tif (carFormData.make) {\n\t\t\tsetMake(carFormData.make);\n\t\t}\n\t\tif (carFormData.model) {\n\t\t\tsetModel(carFormData.model);\n\t\t}\n\t\tif (carFormData.trimLevel) {\n\t\t\tsetTrimLevel(carFormData.trimLevel);\n\t\t}\n\t\tif (carFormData.share) {\n\t\t\tsetShare(carFormData.share);\n\t\t}\n\t\tif (carFormData.tireBrand) {\n\t\t\tsetTireBrand(carFormData.tireBrand);\n\t\t}\n\t\tif (carFormData.tireName) {\n\t\t\tsetTireName(carFormData.tireName);\n\t\t}\n\t\tif (carFormData.tireFrontWidth) {\n\t\t\tsetTireFrontWidth(carFormData.tireFrontWidth);\n\t\t}\n\t\tif (carFormData.tireFrontDiameter) {\n\t\t\tsetTireFrontDiameter(carFormData.tireFrontDiameter);\n\t\t}\n\t\tif (carFormData.tireFrontRatio) {\n\t\t\tsetTireFrontRatio(carFormData.tireFrontRatio);\n\t\t}\n\t\tif (carFormData.tireRearWidth) {\n\t\t\tsetTireRearWidth(carFormData.tireRearWidth);\n\t\t}\n\t\tif (carFormData.tireRearDiameter) {\n\t\t\tsetTireRearDiameter(carFormData.tireRearDiameter);\n\t\t}\n\t\tif (carFormData.tireRearRatio) {\n\t\t\tsetTireRearRatio(carFormData.tireRearRatio);\n\t\t}\n\t\tif (carFormData.frontPressure) {\n\t\t\tsetFrontPressure(carFormData.frontPressure);\n\t\t}\n\t\tif (carFormData.rearPressure) {\n\t\t\tsetRearPressure(carFormData.rearPressure);\n\t\t}\n\t\tif (carFormData.LFCamber) {\n\t\t\tsetLFCamber(carFormData.LFCamber);\n\t\t}\n\t\tif (carFormData.RFCamber) {\n\t\t\tsetRFCamber(carFormData.RFCamber);\n\t\t}\n\t\tif (carFormData.LRCamber) {\n\t\t\tsetLRCamber(carFormData.LRCamber);\n\t\t}\n\t\tif (carFormData.RRCamber) {\n\t\t\tsetRRCamber(carFormData.RRCamber);\n\t\t}\n\t\tif (carFormData.LFCaster) {\n\t\t\tsetLFCaster(carFormData.LFCaster);\n\t\t}\n\t\tif (carFormData.RFCaster) {\n\t\t\tsetRFCaster(carFormData.RFCaster);\n\t\t}\n\t\tif (carFormData.LFToe) {\n\t\t\tsetLFToe(carFormData.LFToe);\n\t\t}\n\t\tif (carFormData.RFToe) {\n\t\t\tsetRFToe(carFormData.RFToe);\n\t\t}\n\t\tif (carFormData.frontToe) {\n\t\t\tsetLRToe(carFormData.frontToe);\n\t\t}\n\t\tif (carFormData.LRToe) {\n\t\t\tsetLRToe(carFormData.LRToe);\n\t\t}\n\t\tif (carFormData.RRToe) {\n\t\t\tsetRRToe(carFormData.RRToe);\n\t\t}\n\t\tif (carFormData.rearToe) {\n\t\t\tsetLRToe(carFormData.rearToe);\n\t\t}\n\t\tif (carFormData.FBar) {\n\t\t\tsetFBar(carFormData.FBar);\n\t\t}\n\t\tif (carFormData.RBar) {\n\t\t\tsetRBar(carFormData.RBar);\n\t\t}\n\t\tif (carFormData.FRebound) {\n\t\t\tsetFRebound(carFormData.FRebound);\n\t\t}\n\t\tif (carFormData.RRebound) {\n\t\t\tsetRRebound(carFormData.RRebound);\n\t\t}\n\t\tif (carFormData.FCompression) {\n\t\t\tsetFCompression(carFormData.FCompression);\n\t\t}\n\t\tif (carFormData.RCompression) {\n\t\t\tsetRCompression(carFormData.RCompression);\n\t\t}\n\t\tif (carFormData.note) {\n\t\t\tsetNote(carFormData.note);\n\t\t}\n\t\tif (carFormData.image) {\n\t\t\t//setImage(carFormData.image);\n\t\t\t// setImageOK(false);\n\t\t}\n\t} else if (!initialized && loadedCar) {\n\t\tsetInitialized(true);\n\t\t// initialize localStorage\n\t\tcarFormData['expirationDate'] = moment(\n\t\t\tmoment().add(1, 'days'),\n\t\t\tmoment.ISO_8601\n\t\t);\n\t\tcarFormData['year'] = loadedCar.year;\n\t\tcarFormData['make'] = loadedCar.make;\n\t\tcarFormData['model'] = loadedCar.model;\n\t\tcarFormData['trimLevel'] = loadedCar.trimLevel;\n\t\tcarFormData['share'] = loadedCar.share;\n\t\tcarFormData['tireBrand'] = loadedCar.tireBrand;\n\t\tcarFormData['tireName'] = loadedCar.tireName;\n\t\tcarFormData['tireFrontWidth'] = loadedCar.tireFrontWidth;\n\t\tcarFormData['tireFrontDiameter'] = loadedCar.tireFrontDiameter;\n\t\tcarFormData['tireFrontRatio'] = loadedCar.tireFrontRatio;\n\t\tcarFormData['tireRearWidth'] = loadedCar.tireRearWidth;\n\t\tcarFormData['tireRearDiameter'] = loadedCar.tireRearDiameter;\n\t\tcarFormData['tireRearRatio'] = loadedCar.tireRearRatio;\n\t\tcarFormData['frontPressure'] = loadedCar.frontPressure;\n\t\tcarFormData['rearPressure'] = loadedCar.rearPressure;\n\t\tcarFormData['LFCamber'] = loadedCar.LFCamber;\n\t\tcarFormData['RFCamber'] = loadedCar.RFCamber;\n\t\tcarFormData['LRCamber'] = loadedCar.LRCamber;\n\t\tcarFormData['RRCamber'] = loadedCar.RRCamber;\n\t\tcarFormData['LFCaster'] = loadedCar.LFCaster;\n\t\tcarFormData['RFCaster'] = loadedCar.RFCaster;\n\t\tcarFormData['LFToe'] = loadedCar.LFToe;\n\t\tcarFormData['RFToe'] = loadedCar.RFToe;\n\t\tcarFormData['frontToe'] = loadedCar.frontToe;\n\t\tcarFormData['LRToe'] = loadedCar.LRToe;\n\t\tcarFormData['RRToe'] = loadedCar.RRToe;\n\t\tcarFormData['rearToe'] = loadedCar.rearToe;\n\t\tcarFormData['FBar'] = loadedCar.FBar;\n\t\tcarFormData['RBar'] = loadedCar.RBar;\n\t\tcarFormData['FRebound'] = loadedCar.FRebound;\n\t\tcarFormData['RRebound'] = loadedCar.RRebound;\n\t\tcarFormData['FCompression'] = loadedCar.FCompression;\n\t\tcarFormData['RCompression'] = loadedCar.RCompression;\n\t\tcarFormData['note'] = loadedCar.note;\n\t\tcarFormData['image'] = undefined;\n\t\tlocalStorage.setItem('carFormData', JSON.stringify(carFormData));\n\t}\n\n\tconst removeCarFormData = () => {\n\t\tlocalStorage.removeItem('carFormData');\n\t};\n\n\tinitialValues = {\n\t\t// editorState: new EditorState.createEmpty(),\n\t\tyear: year,\n\t\tmake: make,\n\t\tmodel: model,\n\t\ttrimLevel: trimLevel,\n\t\tshare: share,\n\t\ttireBrand: tireBrand,\n\t\ttireName: tireName,\n\t\ttireFrontWidth: tireFrontWidth,\n\t\ttireFrontRatio: tireFrontRatio,\n\t\ttireFrontDiameter: tireFrontDiameter,\n\t\ttireRearWidth: tireRearWidth,\n\t\ttireRearRatio: tireRearRatio,\n\t\ttireRearDiameter: tireRearDiameter,\n\t\tfrontPressure: frontPressure,\n\t\trearPressure: rearPressure,\n\t\tLFCamber: LFCamber,\n\t\tRFCamber: RFCamber,\n\t\tLRCamber: LRCamber,\n\t\tRRCamber: RRCamber,\n\t\tLFCaster: LFCaster,\n\t\tRFCaster: RFCaster,\n\t\tLFToe: LFToe,\n\t\tRFToe: RFToe,\n\t\tfrontToe: frontToe,\n\t\tLRToe: LRToe,\n\t\tRRToe: RRToe,\n\t\trearToe: rearToe,\n\t\tFBar: FBar,\n\t\tRBar: RBar,\n\t\tFRebound: FRebound,\n\t\tRRebound: RRebound,\n\t\tFCompression: FCompression,\n\t\tRCompression: RCompression,\n\t\tnote: note,\n\t\timage: image\n\t};\n\n\tconst updateCarFormData = (key, value) => {\n\t\tconst storageData = JSON.parse(\n\t\t\tlocalStorage.getItem('carFormData')\n\t\t);\n\t\tstorageData[key] = value;\n\t\tlocalStorage.setItem('carFormData', JSON.stringify(storageData));\n\t};\n\n\tconst history = useHistory();\n\tconst submitHandler = async (values, actions) => {\n\t\ttry {\n\t\t\tconst formData = new FormData();\n\t\t\tformData.append('year', values.year);\n\t\t\tformData.append('make', values.make);\n\t\t\tformData.append('model', values.model);\n\t\t\tformData.append('trimLevel', values.trimLevel);\n\n\t\t\tformData.append('share', values.share);\n\n\t\t\tformData.append('tireBrand', values.tireBrand);\n\t\t\tformData.append('tireName', values.tireName);\n\t\t\tformData.append('tireFrontWidth', values.tireFrontWidth);\n\t\t\tformData.append('tireFrontRatio', values.tireFrontRatio);\n\t\t\tformData.append('tireFrontDiameter', values.tireFrontDiameter);\n\t\t\tformData.append('tireRearWidth', values.tireRearWidth);\n\t\t\tformData.append('tireRearRatio', values.tireRearRatio);\n\t\t\tformData.append('tireRearDiameter', values.tireRearDiameter);\n\t\t\tformData.append('frontPressure', values.frontPressure);\n\t\t\tformData.append('rearPressure', values.rearPressure);\n\n\t\t\tformData.append('LFCamber', values.LFCamber);\n\t\t\tformData.append('RFCamber', values.RFCamber);\n\t\t\tformData.append('LRCamber', values.LRCamber);\n\t\t\tformData.append('RRCamber', values.RRCamber);\n\t\t\tformData.append('LFCaster', values.LFCaster);\n\t\t\tformData.append('RFCaster', values.RFCaster);\n\t\t\tformData.append('LFToe', values.LFToe);\n\t\t\tformData.append('RFToe', values.RFToe);\n\t\t\tformData.append('frontToe', values.frontToe);\n\t\t\tformData.append('LRToe', values.LRToe);\n\t\t\tformData.append('RRToe', values.RRToe);\n\t\t\tformData.append('rearToe', values.rearToe);\n\t\t\tformData.append('FBar', values.FBar);\n\t\t\tformData.append('RBar', values.RBar);\n\n\t\t\tformData.append('FRebound', values.FRebound);\n\t\t\tformData.append('RRebound', values.RRebound);\n\t\t\tformData.append('FCompression', values.FCompression);\n\t\t\tformData.append('RCompression', values.RCompression);\n\t\t\tformData.append('note', values.note);\n\t\t\tformData.append('carImage', values.image);\n\n\t\t\tawait sendRequest(\n\t\t\t\tprocess.env.REACT_APP_BACKEND_URL + `/cars/${carId}`,\n\t\t\t\t'PATCH',\n\t\t\t\tformData,\n\t\t\t\t{\n\t\t\t\t\t// adding JWT to header for authentication\n\t\t\t\t\tAuthorization: 'Bearer ' + userAuthContext.userToken\n\t\t\t\t}\n\t\t\t);\n\t\t\tsetOKLeavePage(true);\n\t\t\t// Redirect to user garage page\n\t\t\thistory.push(`/users/garagewrapper/${userAuthContext.userId}`);\n\t\t} catch (err) {}\n\t};\n\n\t/***** Form Validation Section  *****/\n\t// 1. Field level: Field validate={validateName}. This validates when Field is onBlur\n\t// 3. Submit: use Formik isValid to enable the button.  Formik submission will validate everything.\n\tconst [validateYear, setValidateYear] = useState(() => value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Year is required.';\n\t\t}\n\t\treturn error;\n\t});\n\n\tconst [validateMake, setValidateMake] = useState(() => value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Make is required.';\n\t\t}\n\t\treturn error;\n\t});\n\n\tconst [validateModel, setValidateModel] = useState(() => value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Model is required.';\n\t\t}\n\t\treturn error;\n\t});\n\n\tconst [validateTireBrand, setValidateTireBrand] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Tire Brand is required.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\n\tconst [validateTireName, setValidateTireName] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Tire Name is required.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\n\tconst [\n\t\tvalidateTireFrontWidth,\n\t\tsetValidateTireFrontWidth\n\t] = useState(() => value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Front Tire Width is required.';\n\t\t}\n\t\treturn error;\n\t});\n\tconst [\n\t\tvalidateTireFrontRatio,\n\t\tsetValidateTireFrontRatio\n\t] = useState(() => value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Front Tire Ratio is required.';\n\t\t}\n\t\treturn error;\n\t});\n\tconst [\n\t\tvalidateTireFrontDiameter,\n\t\tsetValidateTireFrontDiameter\n\t] = useState(() => value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Front Tire Diameter is required.';\n\t\t}\n\t\treturn error;\n\t});\n\tconst [validateTireRearWidth, setValidateTireRearWidth] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Rear Tire Width is required.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\tconst [validateTireRearRatio, setValidateTireRearRatio] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Rear Tire Ratio is required.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\tconst [\n\t\tvalidateTireRearDiameter,\n\t\tsetValidateTireRearDiameter\n\t] = useState(() => value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Rear Tire Diameter is required.';\n\t\t}\n\t\treturn error;\n\t});\n\n\tconst validateImageSize = value => {\n\t\tlet error;\n\t\tif (value && value.size > 1500000) {\n\t\t\terror = 'File size needs to be smaller than 1.5MB';\n\t\t}\n\t\treturn error;\n\t};\n\t/***** End of Form Validation *****/\n\n\tconst carForm = values => (\n\t\t<div className=\"event-form\">\n\t\t\t<div className=\"event-form-header\">\n\t\t\t\t<h4>{userName}'s car</h4>\n\t\t\t\t<hr className=\"event-form__hr\" />\n\t\t\t</div>\n\t\t\t<Formik\n\t\t\t\tenableReinitialize={true}\n\t\t\t\tinitialValues={initialValues}\n\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\tsubmitHandler(values);\n\t\t\t\t\tif (!actions.isSubmitting) {\n\t\t\t\t\t\tsetValidateYear(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Year is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateMake(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Make is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateModel(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Model is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateTireBrand(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Tire Brand is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateTireName(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Tire Name is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateTireFrontWidth(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Front Tire Width is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateTireFrontRatio(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Front Tire Ratio is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateTireFrontDiameter(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Front Tire Diameter is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateTireRearWidth(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Rear Tire Width is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateTireRearRatio(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Rear Tire Ratio is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateTireRearDiameter(() => value => {\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Rear Tire Diameter is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}}>\n\t\t\t\t{({\n\t\t\t\t\tvalues,\n\t\t\t\t\terrors,\n\t\t\t\t\tisSubmitting,\n\t\t\t\t\tisValid,\n\t\t\t\t\tsetFieldValue,\n\t\t\t\t\ttouched,\n\t\t\t\t\thandleBlur\n\t\t\t\t}) => (\n\t\t\t\t\t<Form className=\"event-form-container\">\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"year\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\t<i className=\"far fa-car-side\" />\n\t\t\t\t\t\t\t&nbsp; Year &nbsp;\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"far fa-gas-pump\"\n\t\t\t\t\t\t\t\tstyle={{ color: 'Tomato' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"make\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\tMake &nbsp;\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"far fa-gas-pump\"\n\t\t\t\t\t\t\t\tstyle={{ color: 'Tomato' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"model\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\tModel &nbsp;\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"far fa-gas-pump\"\n\t\t\t\t\t\t\t\tstyle={{ color: 'Tomato' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"trimLevel\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\tTrim\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"year\"\n\t\t\t\t\t\t\tname=\"year\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tvalidate={validateYear}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.year will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('year', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.year && errors.year && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.year}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"make\"\n\t\t\t\t\t\t\tname=\"make\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tvalidate={validateMake}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.make will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('make', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.make && errors.make && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.make}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"model\"\n\t\t\t\t\t\t\tname=\"model\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tvalidate={validateModel}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.model will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('model', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.model && errors.model && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.model}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"trimLevel\"\n\t\t\t\t\t\t\tname=\"trimLevel\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.trimLevel will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('trimLevel', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.trimLevel && errors.trimLevel && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.trimLevel}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"tireBrand\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_half\">\n\t\t\t\t\t\t\t<i className=\"fad fa-tire\" />\n\t\t\t\t\t\t\t&nbsp; Tire Brand &nbsp;\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"far fa-gas-pump\"\n\t\t\t\t\t\t\t\tstyle={{ color: 'Tomato' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"tireName\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_half\">\n\t\t\t\t\t\t\tTire Name &nbsp;\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"far fa-gas-pump\"\n\t\t\t\t\t\t\t\tstyle={{ color: 'Tomato' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"tireBrand\"\n\t\t\t\t\t\t\tname=\"tireBrand\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_half\"\n\t\t\t\t\t\t\tvalidate={validateTireBrand}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.tireBrand will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('tireBrand', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.tireBrand && errors.tireBrand && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.tireBrand}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"tireName\"\n\t\t\t\t\t\t\tname=\"tireName\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_half\"\n\t\t\t\t\t\t\tvalidate={validateTireName}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.name will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('tireName', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.tireName && errors.tireName && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.tireName}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"tireFrontWidth\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\t<i className=\"far fa-ruler-horizontal\" />\n\t\t\t\t\t\t\t&nbsp; Front Tire Width &nbsp;\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"far fa-gas-pump\"\n\t\t\t\t\t\t\t\tstyle={{ color: 'Tomato' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"tireFrontRatio\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\tFront Tire Ratio &nbsp;\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"far fa-gas-pump\"\n\t\t\t\t\t\t\t\tstyle={{ color: 'Tomato' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"tireFrontDiameter\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\tFront Tire Diameter &nbsp;\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"far fa-gas-pump\"\n\t\t\t\t\t\t\t\tstyle={{ color: 'Tomato' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"tireFrontWidth\"\n\t\t\t\t\t\t\tname=\"tireFrontWidth\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tvalidate={validateTireFrontWidth}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.tireFrontWidth will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData(\n\t\t\t\t\t\t\t\t\t'tireFrontWidth',\n\t\t\t\t\t\t\t\t\tevent.target.value\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.tireFrontWidth && errors.tireFrontWidth && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.tireFrontWidth}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"tireFrontRatio\"\n\t\t\t\t\t\t\tname=\"tireFrontRatio\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tvalidate={validateTireFrontRatio}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.tireFrontRatio will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData(\n\t\t\t\t\t\t\t\t\t'tireFrontRatio',\n\t\t\t\t\t\t\t\t\tevent.target.value\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.tireFrontRatio && errors.tireFrontRatio && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.tireFrontRatio}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"tireFrontDiameter\"\n\t\t\t\t\t\t\tname=\"tireFrontDiameter\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tvalidate={validateTireFrontDiameter}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.tireFrontDiameter will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData(\n\t\t\t\t\t\t\t\t\t'tireFrontDiameter',\n\t\t\t\t\t\t\t\t\tevent.target.value\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.tireFrontDiameter &&\n\t\t\t\t\t\t\terrors.tireFrontDiameter && (\n\t\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t\t{errors.tireFrontDiameter}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"tireRearWidth\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\t<i className=\"far fa-ruler-horizontal\" />\n\t\t\t\t\t\t\t&nbsp; Rear Tire Width &nbsp;\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"far fa-gas-pump\"\n\t\t\t\t\t\t\t\tstyle={{ color: 'Tomato' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"tireRearRatio\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\tRear Tire Ratio &nbsp;\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"far fa-gas-pump\"\n\t\t\t\t\t\t\t\tstyle={{ color: 'Tomato' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"tireRearDiameter\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\tRear Tire Diameter &nbsp;\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName=\"far fa-gas-pump\"\n\t\t\t\t\t\t\t\tstyle={{ color: 'Tomato' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"tireRearWidth\"\n\t\t\t\t\t\t\tname=\"tireRearWidth\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tvalidate={validateTireRearWidth}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.tireRearWidth will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData(\n\t\t\t\t\t\t\t\t\t'tireRearWidth',\n\t\t\t\t\t\t\t\t\tevent.target.value\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.tireRearWidth && errors.tireRearWidth && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.tireRearWidth}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"tireRearRatio\"\n\t\t\t\t\t\t\tname=\"tireRearRatio\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tvalidate={validateTireRearRatio}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.tireRearRatio will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData(\n\t\t\t\t\t\t\t\t\t'tireRearRatio',\n\t\t\t\t\t\t\t\t\tevent.target.value\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.tireRearRatio && errors.tireRearRatio && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.tireRearRatio}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"tireRearDiameter\"\n\t\t\t\t\t\t\tname=\"tireRearDiameter\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tvalidate={validateTireRearDiameter}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.tireRearDiameter will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData(\n\t\t\t\t\t\t\t\t\t'tireRearDiameter',\n\t\t\t\t\t\t\t\t\tevent.target.value\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.tireRearDiameter && errors.tireRearDiameter && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.tireRearDiameter}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t{/* This first checkbox will result in a boolean value being stored. Note that the `value` prop\n            \t\t\t\ton the <Field/> is omitted */}\n\t\t\t\t\t\t<label className=\"event-form__checkbox\">\n\t\t\t\t\t\t\t<Field type=\"checkbox\" name=\"share\" />\n\t\t\t\t\t\t\t{/* {`${values.toggle}`} */}\n\t\t\t\t\t\t\t&nbsp;Check if you agree to share the following\n\t\t\t\t\t\t\tsections.\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"frontPressure\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_half\">\n\t\t\t\t\t\t\t<i className=\"fal fa-tire-pressure-warning\" />\n\t\t\t\t\t\t\t&nbsp; Front Tire Pressure psi\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"rearPressure\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_half\">\n\t\t\t\t\t\t\tRear Tire Pressure psi\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"frontPressure\"\n\t\t\t\t\t\t\tname=\"frontPressure\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_half\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.frontPressure will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData(\n\t\t\t\t\t\t\t\t\t'frontPressure',\n\t\t\t\t\t\t\t\t\tevent.target.value\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.frontPressure && errors.frontPressure && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.frontPressure}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"rearPressure\"\n\t\t\t\t\t\t\tname=\"rearPressure\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_half\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.rearPressure will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('rearPressure', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.rearPressure && errors.rearPressure && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.rearPressure}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"LFCamber\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\t<i className=\"fal fa-ruler-triangle fa-rotate-90\" />\n\t\t\t\t\t\t\t&nbsp; Left Front Camber &#x00B0;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"RFCamber\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\tRight Front Camber &#x00B0;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"LRCamber\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\tLeft Rear Camber &#x00B0;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"RRCamber\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\tRight Rear Camber &#x00B0;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"LFCamber\"\n\t\t\t\t\t\t\tname=\"LFCamber\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.LFCamber will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('LFCamber', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.LFCamber && errors.LFCamber && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.LFCamber}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"RFCamber\"\n\t\t\t\t\t\t\tname=\"RFCamber\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.RFCamber will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('RFCamber', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.RFCamber && errors.RFCamber && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.RFCamber}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"LRCamber\"\n\t\t\t\t\t\t\tname=\"LRCamber\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.LRCamber will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('LRCamber', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.LRCamber && errors.LRCamber && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.LRCamber}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"RRCamber\"\n\t\t\t\t\t\t\tname=\"RRCamber\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.RRCamber will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('RRCamber', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.RRCamber && errors.RRCamber && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.RRCamber}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"LFCaster\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_half\">\n\t\t\t\t\t\t\t<i className=\"fal fa-starfighter-alt\" />\n\t\t\t\t\t\t\t&nbsp; Left Front Caster &#x00B0;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"RFCaster\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_half\">\n\t\t\t\t\t\t\tRight Front Caster &#x00B0;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"LFCaster\"\n\t\t\t\t\t\t\tname=\"LFCaster\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_half\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.LFCaster will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('LFCaster', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.LFCaster && errors.LFCaster && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.LFCaster}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"RFCaster\"\n\t\t\t\t\t\t\tname=\"RFCaster\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_half\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.RFCaster will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('RFCaster', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.RFCaster && errors.RFCaster && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.RFCaster}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"LFToe\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\t<i className=\"far fa-steering-wheel \" />\n\t\t\t\t\t\t\t&nbsp; Left Front Toe &#x2033;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"RFToe\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\tRight Front Toe &#x2033;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"frontToe\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\tFront Toe &#x2033;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"LFToe\"\n\t\t\t\t\t\t\tname=\"LFToe\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.LFToe will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('LFToe', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"RFToe\"\n\t\t\t\t\t\t\tname=\"RFToe\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.RFToe will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('RFToe', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"frontToe\"\n\t\t\t\t\t\t\tname=\"frontToe\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.RFToe will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('Front', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.LFToe && errors.LFToe && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.LFToe}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{touched.RFToe && errors.RFToe && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.RFToe}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{touched.frontToe && errors.frontToe && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.frontToe}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"LRToe\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\t<i className=\"far fa-steering-wheel \" />\n\t\t\t\t\t\t\t&nbsp; Left Rear Toe &#x2033;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"RRToe\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\tRight Rear Toe &#x2033;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"rearToe\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_third\">\n\t\t\t\t\t\t\tRear Toe &#x2033;\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"LRToe\"\n\t\t\t\t\t\t\tname=\"LRToe\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.LRToe will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('LRToe', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"RRToe\"\n\t\t\t\t\t\t\tname=\"RRToe\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.RRToe will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('RRToe', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"rearToe\"\n\t\t\t\t\t\t\tname=\"rearToe\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_third\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.rearToe will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('rearToe', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.LRToe && errors.LRToe && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.LRToe}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{touched.RRToe && errors.RRToe && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.RRToe}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{touched.rearToe && errors.rearToe && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.rearToe}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"FBar\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_half\">\n\t\t\t\t\t\t\t<i className=\"fas fa-line-height fa-rotate-270\" />\n\t\t\t\t\t\t\t&nbsp; Front Sway Bar\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"RBar\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_half\">\n\t\t\t\t\t\t\tRear Sway Bar\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"FBar\"\n\t\t\t\t\t\t\tname=\"FBar\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_half\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.FBar will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('FBar', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.FBar && errors.FBar && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.FBar}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"RBar\"\n\t\t\t\t\t\t\tname=\"RBar\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_half\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.RBar will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('RBar', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.RBar && errors.RBar && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.RBar}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"FRebound\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\t<i className=\"far fa-sort-numeric-up-alt\" />\n\t\t\t\t\t\t\t&nbsp; Front Rebound\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"RRebound\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\tRear Rebound\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"FCompression\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\tFront Compression\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"RCompression\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_inline_quarter\">\n\t\t\t\t\t\t\tRear Compression\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"FRebound\"\n\t\t\t\t\t\t\tname=\"FRebound\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.FRebound will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('FRebound', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.FRebound && errors.FRebound && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.FRebound}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"RRebound\"\n\t\t\t\t\t\t\tname=\"RRebound\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.RRebound will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('RRebound', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.RRebound && errors.RRebound && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.RRebound}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"FCompression\"\n\t\t\t\t\t\t\tname=\"FCompression\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.FCompression will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('FCompression', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.FCompression && errors.FCompression && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.FCompression}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"RCompression\"\n\t\t\t\t\t\t\tname=\"RCompression\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_quarter\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.RCompression will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('RCompression', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.RCompression && errors.RCompression && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.RCompression}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label htmlFor=\"note\" className=\"event-form__label\">\n\t\t\t\t\t\t\t<i className=\"far fa-sticky-note\"></i>\n\t\t\t\t\t\t\t&nbsp; Note (max: 350 characters)\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"note\"\n\t\t\t\t\t\t\tname=\"note\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tcomponent=\"textarea\"\n\t\t\t\t\t\t\trows=\"5\"\n\t\t\t\t\t\t\tcols=\"70\"\n\t\t\t\t\t\t\tmaxLength=\"350\"\n\t\t\t\t\t\t\tclassName=\"event-form__field_textarea\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.note will not work\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tupdateCarFormData('note', event.target.value);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.note && errors.note && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.note}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"image\"\n\t\t\t\t\t\t\tname=\"image\"\n\t\t\t\t\t\t\ttitle=\"image\"\n\t\t\t\t\t\t\tcomponent={ImageUploader}\n\t\t\t\t\t\t\tvalidate={validateImageSize}\n\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\n\t\t\t\t\t\t\terrorMessage={errors.image ? errors.image : ''}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\t// if (event.target.value) {\n\t\t\t\t\t\t\t\t// \tsetImageOK(false);\n\t\t\t\t\t\t\t\t// } else {\n\t\t\t\t\t\t\t\t// \tsetImageOK(true);\n\t\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tlabelStyle=\"event-form__label\"\n\t\t\t\t\t\t\tinputStyle=\"event-form__field-select\"\n\t\t\t\t\t\t\tpreviewStyle=\"image-upload__preview\"\n\t\t\t\t\t\t\terrorStyle=\"event-form__field-error\"\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\tmargin-left=\"1.5rem\"\n\t\t\t\t\t\t\tdisabled={isSubmitting || !isValid}>\n\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<NavigationPrompt\n\t\t\t\t\t\t\tafterConfirm={() => {\n\t\t\t\t\t\t\t\tformContext.setIsInsideForm(false);\n\t\t\t\t\t\t\t\tremoveCarFormData();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t// Confirm navigation if going to a path that does not start with current path.\n\t\t\t\t\t\t\t// We don't want to confirm navigation when OKLeavePage === true and redirect to '/users/auth' due to\n\t\t\t\t\t\t\t// authentication issue\n\t\t\t\t\t\t\twhen={(crntLocation, nextLocation) => {\n\t\t\t\t\t\t\t\t// remove UserRedirectURL from memory\n\t\t\t\t\t\t\t\tuserAuthContext.setUserRedirectURL(null);\n\t\t\t\t\t\t\t\t// OKLeavePage meaning form was not touched yet\n\t\t\t\t\t\t\t\tif (OKLeavePage) {\n\t\t\t\t\t\t\t\t\tformContext.setIsInsideForm(false);\n\t\t\t\t\t\t\t\t\tremoveCarFormData();\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// nextLocation.pathname !== '/users/auth' &&  --- adding this line causing state update on an\n\t\t\t\t\t\t\t\t\t// unmounted component issue.  Without it, confirmation modal will pop up\n\t\t\t\t\t\t\t\t\t// always gives the warning, because we want to be able to\n\t\t\t\t\t\t\t\t\t// clear localStorage after confirm\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t!nextLocation ||\n\t\t\t\t\t\t\t\t\t\t!nextLocation.pathname.startsWith(\n\t\t\t\t\t\t\t\t\t\t\tcrntLocation.pathname\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t{({ isActive, onCancel, onConfirm }) => {\n\t\t\t\t\t\t\t\tif (isActive) {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<PromptModal\n\t\t\t\t\t\t\t\t\t\t\tonCancel={onCancel}\n\t\t\t\t\t\t\t\t\t\t\tonConfirm={onConfirm}\n\t\t\t\t\t\t\t\t\t\t\tcontentClass=\"event-item__modal-content\"\n\t\t\t\t\t\t\t\t\t\t\tfooterClass=\"event-item__modal-actions\"\n\t\t\t\t\t\t\t\t\t\t\terror=\"You sure want to leave? Unsaved data will be lost.\">\n\t\t\t\t\t\t\t\t\t\t\t{/* render props.children */}\n\t\t\t\t\t\t\t\t\t\t</PromptModal>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\tThis is probably an anti-pattern but ya know...\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t</NavigationPrompt>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t{isLoading && (\n\t\t\t\t<div className=\"center\">\n\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{carForm()}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default UpdateCar;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/pages/UpdateEventPhotos.js",["642","643","644","645","646","647","648"],"import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Field, Form, Formik } from 'formik';\nimport moment from 'moment';\nimport NavigationPrompt from 'react-router-navigation-prompt';\n\nimport { useClubLoginValidation } from '../../shared/hooks/clubLoginValidation-hook';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport ImageUploader from '../../shared/components/FormElements/ImageUploader';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport PromptModal from '../../shared/components/UIElements/PromptModal';\n\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { ClubAuthContext } from '../../shared/context/auth-context';\nimport { FormContext } from '../../shared/context/form-context';\n\nimport '../../shared/css/EventForm.css';\n\nconst UpdateEventPhotos = props => {\n\tlet eId = props.event.id;\n\tconst [initialized, setInitialized] = useState(false);\n\tconst clubAuthContext = useContext(ClubAuthContext);\n\tconst formContext = useContext(FormContext);\n\n\tuseEffect(() => {\n\t\tlet mounted = true;\n\t\tif (mounted) {\n\t\t\tformContext.setIsInsideForm(true);\n\t\t}\n\t\treturn () => {\n\t\t\tmounted = false;\n\t\t};\n\t}, [formContext]);\n\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\n\t// authentication check\n\tuseClubLoginValidation('/clubs/events/photos');\n\n\t// If we are re-directing to this page, we want to clear up clubRedirectURL\n\tlet location = useLocation();\n\tuseEffect(() => {\n\t\tlet path = location.pathname;\n\t\tlet clubRedirectURL = clubAuthContext.clubRedirectURL;\n\t\tif (path === clubRedirectURL) {\n\t\t\t// re-init redirectURL after re-direction route\n\t\t\tclubAuthContext.setClubRedirectURL(null);\n\t\t}\n\t}, [location, clubAuthContext]);\n\n\t// initialize local storage\n\t// Get the existing data\n\t// var eventFormData = localStorage.getItem('eventFormData');\n\n\t// If no existing data, create an array; otherwise retrieve it\n\t// eventFormData = eventFormData ? JSON.parse(eventFormData) : {};\n\n\tconst [OKLeavePage, setOKLeavePage] = useState(true);\n\n\tconst initialValues = {\n\t\timage: props.event.image,\n\t\tcourseMap: props.event.courseMap\n\t};\n\n\tconst updateEventFormData = (key, value) => {\n\t\tconst storageData = JSON.parse(\n\t\t\tlocalStorage.getItem('eventFormData')\n\t\t);\n\t\tstorageData[key] = value;\n\t\tlocalStorage.setItem(\n\t\t\t'eventFormData',\n\t\t\tJSON.stringify(storageData)\n\t\t);\n\t};\n\n\tconst history = useHistory();\n\tconst submitHandler = async (values, actions) => {\n\t\ttry {\n\t\t\tconst formData = new FormData();\n\t\t\tformData.append('eventImage', values.image);\n\t\t\tformData.append('courseMap', values.courseMap);\n\n\t\t\tconst [\n\t\t\t\tresponseData,\n\t\t\t\tresponseStatus,\n\t\t\t\tresponseMessage\n\t\t\t] = await sendRequest(\n\t\t\t\tprocess.env.REACT_APP_BACKEND_URL + '/events/photos/' + eId,\n\t\t\t\t'PATCH',\n\t\t\t\tformData,\n\t\t\t\t{\n\t\t\t\t\t// adding JWT to header for authentication\n\t\t\t\t\tAuthorization: 'Bearer ' + clubAuthContext.clubToken\n\t\t\t\t}\n\t\t\t);\n\t\t\tsetOKLeavePage(true);\n\t\t\tconsole.log('return new event');\n\t\t\tprops.returnNewEvent(responseData.event);\n\t\t} catch (err) {}\n\t};\n\n\tconst validateImageSize = value => {\n\t\tlet error;\n\t\tif (value && value.size > 1500000) {\n\t\t\terror = 'File size needs to be smaller than 1.5MB';\n\t\t}\n\t\treturn error;\n\t};\n\n\tconst validateCourseMapSize = value => {\n\t\tlet error;\n\t\tif (value && value.size > 1500000) {\n\t\t\terror = 'File size needs to be smaller than 1.5MB';\n\t\t}\n\t\treturn error;\n\t};\n\t/***** End of Form Validation *****/\n\n\tconst eventForm = values => (\n\t\t<div className=\"event-form\">\n\t\t\t<div className=\"event-form-header\">\n\t\t\t\t<h4>Please upload event image and course map</h4>\n\t\t\t\t<h5>Course map is optional</h5>\n\t\t\t\t<hr className=\"event-form__hr\" />\n\t\t\t</div>\n\t\t\t<Formik\n\t\t\t\tenableReinitialize={true}\n\t\t\t\tinitialValues={initialValues}\n\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\tsubmitHandler(values);\n\t\t\t\t\tif (!actions.isSubmitting) {\n\t\t\t\t\t}\n\t\t\t\t}}>\n\t\t\t\t{({\n\t\t\t\t\tdirty,\n\t\t\t\t\tvalues,\n\t\t\t\t\terrors,\n\t\t\t\t\tisSubmitting,\n\t\t\t\t\tisValid,\n\t\t\t\t\tsetFieldValue,\n\t\t\t\t\ttouched,\n\t\t\t\t\thandleBlur\n\t\t\t\t}) => (\n\t\t\t\t\t<Form className=\"event-form-container\">\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"image\"\n\t\t\t\t\t\t\tname=\"image\"\n\t\t\t\t\t\t\ttitle=\"Event Image\"\n\t\t\t\t\t\t\tcomponent={ImageUploader}\n\t\t\t\t\t\t\tvalidate={validateImageSize}\n\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\n\t\t\t\t\t\t\terrorMessage={errors.image ? errors.image : ''}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tlabelStyle=\"event-form__label\"\n\t\t\t\t\t\t\tinputStyle=\"event-form__field-select\"\n\t\t\t\t\t\t\tpreviewStyle=\"image-upload__preview\"\n\t\t\t\t\t\t\terrorStyle=\"event-form__field-error\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"courseMap\"\n\t\t\t\t\t\t\tname=\"courseMap\"\n\t\t\t\t\t\t\ttitle=\"Course Map (Optional)\"\n\t\t\t\t\t\t\tcomponent={ImageUploader}\n\t\t\t\t\t\t\tvalidate={validateCourseMapSize}\n\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\n\t\t\t\t\t\t\terrorMessage={errors.courseMap ? errors.courseMap : ''}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tlabelStyle=\"event-form__label\"\n\t\t\t\t\t\t\tinputStyle=\"event-form__field-select\"\n\t\t\t\t\t\t\tpreviewStyle=\"image-upload__preview\"\n\t\t\t\t\t\t\terrorStyle=\"event-form__field-error\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tsize=\"medium-block\"\n\t\t\t\t\t\t\tmargin-left=\"1.5rem\"\n\t\t\t\t\t\t\tdisabled={isSubmitting || (!isValid && dirty)}>\n\t\t\t\t\t\t\tSAVE\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<NavigationPrompt\n\t\t\t\t\t\t\tafterConfirm={() => {\n\t\t\t\t\t\t\t\tformContext.setIsInsideForm(false);\n\t\t\t\t\t\t\t\t// removeEventFormData();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t// Confirm navigation if going to a path that does not start with current path.\n\t\t\t\t\t\t\t// We don't want to confirm navigation when OKLeavePage === true and redirect to '/clubs/auth' due to\n\t\t\t\t\t\t\t// authentication issue\n\t\t\t\t\t\t\twhen={(crntLocation, nextLocation) => {\n\t\t\t\t\t\t\t\t// remove ClubRedirectURL from memory\n\t\t\t\t\t\t\t\tclubAuthContext.setClubRedirectURL(null);\n\t\t\t\t\t\t\t\t// OKLeavePage meaning form was not touched yet\n\t\t\t\t\t\t\t\tif (OKLeavePage) {\n\t\t\t\t\t\t\t\t\tformContext.setIsInsideForm(false);\n\t\t\t\t\t\t\t\t\t// removeEventFormData();\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// nextLocation.pathname !== '/clubs/auth' &&  --- adding this line causing state update on an\n\t\t\t\t\t\t\t\t\t// unmounted component issue.  Without it, confirmation modal will pop up\n\t\t\t\t\t\t\t\t\t// always gives the warning, because we want to be able to\n\t\t\t\t\t\t\t\t\t// clear localStorage after confirm\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t!nextLocation ||\n\t\t\t\t\t\t\t\t\t\t!nextLocation.pathname.startsWith(\n\t\t\t\t\t\t\t\t\t\t\tcrntLocation.pathname\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t{({ isActive, onCancel, onConfirm }) => {\n\t\t\t\t\t\t\t\tif (isActive) {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<PromptModal\n\t\t\t\t\t\t\t\t\t\t\tonCancel={onCancel}\n\t\t\t\t\t\t\t\t\t\t\tonConfirm={onConfirm}\n\t\t\t\t\t\t\t\t\t\t\tcontentclassName=\"event-item__modal-content\"\n\t\t\t\t\t\t\t\t\t\t\tfooterclassName=\"event-item__modal-actions\"\n\t\t\t\t\t\t\t\t\t\t\terror=\"You sure want to leave? Unsaved data will be lost.\">\n\t\t\t\t\t\t\t\t\t\t\t{/* render props.children */}\n\t\t\t\t\t\t\t\t\t\t</PromptModal>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\tThis is probably an anti-pattern but ya know...\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t</NavigationPrompt>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t{isLoading && (\n\t\t\t\t<div className=\"center\">\n\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{eventForm()}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default UpdateEventPhotos;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/hooks/logout-hook.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/toolbar.jsx",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/star-rating.jsx",["649","650","651","652"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport cx from 'classnames';\n\n/**\n * @fileoverview react-star-rating\n * @author @cameronjroe\n * <StarRating\n *   name={string} - name for form input (required)\n *   caption={string} - caption for rating (optional)\n *   ratingAmount={number} - the rating amount (required, default: 5)\n *   rating={number} - a set rating between the rating amount (optional)\n *   disabled={boolean} - whether to disable the rating from being selected (optional)\n *   editing={boolean} - whether the rating is explicitly in editing mode (optional)\n *   size={string} - size of stars (optional)\n *   onRatingClick={function} - a handler function that gets called onClick of the rating (optional)\n *   />\n */\n\nexport default class StarRating extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ratingCache: {\n        pos: 0,\n        rating: 0,\n      },\n      editing: props.editing || true,\n      stars: 5,\n      rating: 0,\n      pos: 0,\n      glyph: this.getStars(),\n    };\n  }\n\n  /**\n   * Gets the stars based on ratingAmount\n   * @return {string} stars\n   */\n  getStars() {\n    let stars = '';\n    const numRating = this.props.ratingAmount;\n    for (let i = 0; i < numRating; i++) {\n      stars += '\\u2605';\n    }\n    return stars;\n  }\n\n  componentWillMount() {\n    this.min = 0;\n    this.max = this.props.ratingAmount || 5;\n    if (this.props.rating) {\n      this.state.editing = this.props.editing || false;\n      const ratingVal = this.props.rating;\n      this.state.ratingCache.pos = this.getStarRatingPosition(ratingVal);\n      this.state.ratingCache.rating = ratingVal;\n\n      this.setState({\n        ratingCache: this.state.ratingCache,\n        rating: ratingVal,\n        pos: this.getStarRatingPosition(ratingVal),\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.root = ReactDOM.findDOMNode(this.rootNode);\n    this.ratingContainer = ReactDOM.findDOMNode(this.node);\n  }\n\n  componentWillUnmount() {\n    delete this.root;\n    delete this.ratingContainer;\n  }\n\n  getPosition(e) {\n    return e.pageX - this.root.getBoundingClientRect().left;\n  }\n\n  applyPrecision(val, precision) {\n    return parseFloat(val.toFixed(precision));\n  }\n\n  getDecimalPlaces(num) {\n    const match = (`${num}`).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\n    return !match ? 0 : Math.max(0, (match[1] ? match[1].length : 0) - (match[2] ? +match[2] : 0));\n  }\n\n  getWidthFromValue(val) {\n    const min = this.min;\n    const max = this.max;\n\n    if (val <= min || min === max) {\n      return 0;\n    }\n    if (val >= max) {\n      return 100;\n    }\n    return (val / (max - min)) * 100;\n  }\n\n  getValueFromPosition(pos) {\n    const precision = this.getDecimalPlaces(this.props.step);\n    const maxWidth = this.ratingContainer.offsetWidth;\n    const diff = this.max - this.min;\n    let factor = (diff * pos) / (maxWidth * this.props.step);\n    factor = Math.ceil(factor);\n    let val = this.applyPrecision(parseFloat(this.min + factor * this.props.step), precision);\n    val = Math.max(Math.min(val, this.max), this.min);\n    return val;\n  }\n\n  calculate(pos) {\n    const val = this.getValueFromPosition(pos);\n    let width = this.getWidthFromValue(val);\n\n    width += '%';\n    return { width, val };\n  }\n\n  getStarRatingPosition(val) {\n    const width = `${this.getWidthFromValue(val)}%`;\n    return width;\n  }\n\n  getRatingEvent(e) {\n    const pos = this.getPosition(e);\n    return this.calculate(pos);\n  }\n\n  getSvg() {\n    return (\n      <svg className=\"react-star-rating__star\" viewBox=\"0 0 286 272\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n          <polygon id=\"star-flat\" points=\"143 225 54.8322122 271.352549 71.6707613 173.176275 0.341522556 103.647451 98.9161061 89.3237254 143 0 187.083894 89.3237254 285.658477 103.647451 214.329239 173.176275 231.167788 271.352549 \"></polygon>\n        </g>\n      </svg>\n    );\n  }\n\n  handleMouseLeave() {\n    this.setState({\n      pos: this.state.ratingCache.pos,\n      rating: this.state.ratingCache.rating,\n    });\n  }\n\n  handleMouseMove(e) {\n    // get hover position\n    const ratingEvent = this.getRatingEvent(e);\n    this.updateRating(\n      ratingEvent.width,\n      ratingEvent.val,\n    );\n  }\n\n  updateRating(width, val) {\n    this.setState({\n      pos: width,\n      rating: val,\n    });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextProps !== this.props) {\n      this.updateRating(\n        this.getStarRatingPosition(nextProps.rating),\n        nextProps.rating,\n      );\n      return true;\n    }\n    return nextState.ratingCache.rating !== this.state.ratingCache.rating || nextState.rating !== this.state.rating;\n  }\n\n  handleClick(e) {\n    // is it disabled?\n    if (this.props.disabled) {\n      e.stopPropagation();\n      e.preventDefault();\n      return false;\n    }\n\n    const ratingCache = {\n      pos: this.state.pos,\n      rating: this.state.rating,\n      caption: this.props.caption,\n      name: this.props.name,\n    };\n\n    this.setState({\n      ratingCache,\n    });\n\n    this.props.onRatingClick(e, ratingCache);\n    return true;\n  }\n\n  treatName(title) {\n    if (typeof title === 'string') {\n      return title.toLowerCase().split(' ').join('_');\n    }\n    return null;\n  }\n\n  render() {\n    // let caption = null;\n    const classes = cx({\n      'react-star-rating__root': true,\n      'rating-disabled': this.props.disabled,\n      [`react-star-rating__size--${this.props.size}`]: this.props.size,\n      'rating-editing': this.state.editing,\n    });\n\n    // is there a caption?\n    // if (this.props.caption) {\n    //   caption = (<span className=\"react-rating-caption\">{this.props.caption}</span>);\n    // }\n\n    // are we editing this rating?\n    let starRating;\n    if (this.state.editing) {\n      starRating = (\n        <div ref={c => this.node = c}\n          className=\"rating-container rating-gly-star\"\n          data-content={this.state.glyph}\n          onMouseMove={this.handleMouseMove.bind(this)}\n          onMouseLeave={this.handleMouseLeave.bind(this)}\n          onClick={this.handleClick.bind(this)}>\n          <div className=\"rating-stars\" data-content={this.state.glyph} style={{ width: this.state.pos }}></div>\n        </div>\n      );\n    } else {\n      starRating = (\n        <div ref={c => this.node = c} className=\"rating-container rating-gly-star\" data-content={this.state.glyph}>\n          <div className=\"rating-stars\" data-content={this.state.glyph} style={{ width: this.state.pos }}></div>\n        </div>\n      );\n    }\n\n    return (\n      <span className=\"react-star-rating\">\n        <span ref={c => this.rootNode = c} style={{ cursor: 'pointer' }} className={classes}>\n          {starRating}\n          <input type=\"number\" name={this.props.name} value={this.state.ratingCache.rating} style={{ display: 'none !important' }} min={this.min} max={this.max} readOnly style={{\n            width: 65,\n          }}/>\n        </span>\n      </span>\n    );\n  }\n}\n\nStarRating.propTypes = {\n  name: PropTypes.string.isRequired,\n  caption: PropTypes.string,\n  ratingAmount: PropTypes.number.isRequired,\n  rating: PropTypes.number,\n  onRatingClick: PropTypes.func,\n  disabled: PropTypes.bool,\n  editing: PropTypes.bool,\n  size: PropTypes.string,\n};\n\nStarRating.defaultProps = {\n  step: 0.5,\n  ratingAmount: 5,\n  onRatingClick() {},\n  disabled: false,\n};\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/Navigation/MainNavigation.js",["653"],"import React, { useContext, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport Backdrop from '../UIElements/Backdrop';\nimport './MainNavigation.css';\nimport { ClubAuthContext } from '../../context/auth-context';\n\nconst MainNavigation = props => {\n\tconst clubAuthContext = useContext(ClubAuthContext);\n\tconst [isClubLoggedIn, setIsClubLoggedIn] = useState(false);\n\tconst [clubName, setClubName] = useState('');\n\t/* \n        create drawerIsOpen state drawerIsOpen is a var, setDrawIsOpen is the function that updates drawIsOpen when user hits 'main-navigation__menu-btn' call openDrawerHandler, once drawerIsOpen Backdrop and SideDrawer will be kicied in. In SideDrawer, it calls CSSTransition to mount/unmount \"side-drawer\" \n     */\n\tconst [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n\tconst openDrawerHandler = () => {\n\t\tsetDrawerIsOpen(true);\n\t};\n\n\tconst closeDrawerHandler = () => {\n\t\tsetDrawerIsOpen(false);\n\t};\n\n\tuseEffect(() => {\n\t\tif (clubAuthContext.isClubLoggedIn) {\n\t\t\tsetIsClubLoggedIn(true);\n\t\t\tsetClubName(clubAuthContext.clubName);\n\t\t} else {\n\t\t\tsetIsClubLoggedIn(false);\n\t\t\tsetClubName('');\n\t\t}\n\t}, [clubAuthContext]);\n\n\treturn (\n\t\t// <React.Fragment> is a wrapper helps solve multiple return issues.\n\t\t// Because we have 2 return values <SideDrawer> and <MainHeader>\n\t\t<React.Fragment>\n\t\t\t{/* only render SideDrawer when drawerIsOpen */}\n\t\t\t{drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n\t\t\t<SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n\t\t\t\t{/* main-navigation__drawer-nav is for mobile screen */}\n\t\t\t\t<nav className=\"main-navigation__drawer-nav\">\n\t\t\t\t\t<NavLinks />\n\t\t\t\t</nav>\n\t\t\t</SideDrawer>\n\n\t\t\t<MainHeader>\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"main-navigation__menu-btn\"\n\t\t\t\t\tonClick={openDrawerHandler}>\n\t\t\t\t\t<span />\n\t\t\t\t\t<span />\n\t\t\t\t\t<span />\n\t\t\t\t</button>\n\t\t\t\t<h1 className=\"main-navigation__menu_title\">\n\t\t\t\t\t{!isClubLoggedIn && (\n\t\t\t\t\t\t<Link to=\"/\" style={{ textDecoration: 'none' }}>\n\t\t\t\t\t\t\tMYSeatTime\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t)}\n\t\t\t\t\t{isClubLoggedIn && 'MySeatTime'}\n\t\t\t\t</h1>\n\t\t\t\t{/* main-navigation__head is for desktop screen that only shows >= 768px */}\n\t\t\t\t<nav className=\"main-navigation__header-nav\">\n\t\t\t\t\t<NavLinks />\n\t\t\t\t</nav>\n\t\t\t</MainHeader>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default MainNavigation;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubs/pages/ClubAuth.js",["654","655","656"],"import React, { useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport { Field, Form, Formik } from 'formik';\nimport ImageUploader from '../../shared/components/FormElements/ImageUploader';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\n\nimport { ClubAuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst ClubAuth = () => {\n\tconst clubAuthContext = useContext(ClubAuthContext);\n\tconst [isLoginMode, setIsLoginMode] = useState(true);\n\tconst [passwordError, setPasswordError] = useState();\n\tconst [imageValid, setImageValid] = useState();\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\n\tconst switchModeHandler = () => {\n\t\tsetIsLoginMode(prevMode => !prevMode);\n\t};\n\n\tconst history = useHistory();\n\tconst clubSubmitHandler = async values => {\n\t\t// meaning we don't want to reload the page after form submission\n\t\t// all the input values stay intact on the form\n\t\t// event.preventDefault();\n\n\t\tif (isLoginMode) {\n\t\t\ttry {\n\t\t\t\t// use custom hook. send login request to Backend\n\t\t\t\tconst [\n\t\t\t\t\tresponseData,\n\t\t\t\t\tresponseStatus,\n\t\t\t\t\tresponseMessage\n\t\t\t\t] = await sendRequest(\n\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL + '/clubs/login',\n\t\t\t\t\t'POST',\n\t\t\t\t\tJSON.stringify({\n\t\t\t\t\t\temail: values.email,\n\t\t\t\t\t\tpassword: values.password\n\t\t\t\t\t}),\n\t\t\t\t\t{\n\t\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tconsole.log(\n\t\t\t\t\t'clubRedirect = ',\n\t\t\t\t\tclubAuthContext.clubRedirectURL\n\t\t\t\t);\n\t\t\t\tif (clubAuthContext.clubRedirectURL) {\n\t\t\t\t\tconsole.log('inside clubRedirect');\n\t\t\t\t\tclubAuthContext.clubLogin(\n\t\t\t\t\t\tresponseData.token,\n\t\t\t\t\t\tresponseData.clubId,\n\t\t\t\t\t\tresponseData.name,\n\t\t\t\t\t\tresponseData.image\n\t\t\t\t\t);\n\t\t\t\t\thistory.push(clubAuthContext.clubRedirectURL);\n\t\t\t\t} else {\n\t\t\t\t\t/**\n\t\t\t\t\t * Need to put redirect before calling clubAuthContext.clubLogin(responseData.club.id).\n\t\t\t\t\t * Otherwise App.js has ClubAuthContext.provider will re-render App and go to\n\t\t\t\t\t * <Redirect to=\"/\"> If we have components that send http request in that Route\n\t\t\t\t\t * the http request will be aborted and got a warning:\n\t\t\t\t\t * Warning: Can't perform a React state update on an unmounted component. when\n\t\t\t\t\t * trying to redirect page after logging\n\t\t\t\t\t */\n\n\t\t\t\t\thistory.push(`/clubs/clubManager/`);\n\t\t\t\t\t// club.id is coming from clubsController loginClub\n\t\t\t\t\t// id is from {getters: true}\n\t\t\t\t\tclubAuthContext.clubLogin(\n\t\t\t\t\t\tresponseData.clubId,\n\t\t\t\t\t\tresponseData.name,\n\t\t\t\t\t\tresponseData.token\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t// empty. Custom hook takes care of it already\n\t\t\t\tconsole.log('ClubAuth err= ', err);\n\t\t\t}\n\t\t} else {\n\t\t\t//club signup\n\t\t\ttry {\n\t\t\t\t// matching passwords\n\t\t\t\tif (values.password !== values.passwordValidation) {\n\t\t\t\t\tsetPasswordError('Passwords do not match!');\n\t\t\t\t\tthrow new Error('password no match');\n\t\t\t\t}\n\n\t\t\t\t// FormData() is a browser API. We can append text or binary data to FormData\n\t\t\t\tconst formData = new FormData();\n\t\t\t\tformData.append('email', values.email);\n\t\t\t\tformData.append('name', values.name);\n\t\t\t\tformData.append('password', values.password);\n\t\t\t\tformData.append(\n\t\t\t\t\t'passwordValidation',\n\t\t\t\t\tvalues.passwordValidation\n\t\t\t\t);\n\t\t\t\tformData.append('clubImage', values.image);\n\n\t\t\t\t// the request needs to match backend clubsRoutes /signup route\n\t\t\t\t// With fromData, headers cannot be {Content-Type: application/json}\n\t\t\t\tawait sendRequest(\n\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL + '/clubs/signup',\n\t\t\t\t\t'POST',\n\t\t\t\t\tformData\n\t\t\t\t);\n\t\t\t\t// set isLoginMode  to true to render login page\n\t\t\t\tsetIsLoginMode(true);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log('ClubAuth error = ', err);\n\t\t\t}\n\t\t}\n\t};\n\tconst clearErr = () => {\n\t\tclearError();\n\t\tsetPasswordError(null);\n\t};\n\n\t// Formik section\n\tconst initialValues = {\n\t\tname: '',\n\t\temail: '',\n\t\timage: undefined,\n\t\tpassword: '',\n\t\tpasswordValidation: ''\n\t};\n\tconst validateClubName = value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Club Name is required.';\n\t\t}\n\t\treturn error;\n\t};\n\tconst validateEmail = value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Email is required.';\n\t\t} else {\n\t\t\tconst pattern = /[a-z0-9A-Z!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9A-Z!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n\t\t\tif (!pattern.test(value)) {\n\t\t\t\terror = 'Please enter a valid email';\n\t\t\t}\n\t\t}\n\t\treturn error;\n\t};\n\tconst validatePassword = value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Password is required.';\n\t\t} else if (value.length < 6) {\n\t\t\terror = 'Minimum password length is 6 characters.';\n\t\t}\n\t\treturn error;\n\t};\n\tconst validateImage = value => {\n\t\tlet error;\n\t\tif (value && value.size > 1500000) {\n\t\t\terror = 'File size needs to be smaller than 1.5MB';\n\t\t\tsetImageValid(false);\n\t\t} else {\n\t\t\tsetImageValid(true);\n\t\t}\n\t\treturn error;\n\t};\n\n\tconst clubAuthForm = values => (\n\t\t<div className=\"auth-div\">\n\t\t\t<h4 className=\"auth-form-header\">\n\t\t\t\t<i className=\"fas fa-car\"></i>&nbsp;Club Login\n\t\t\t</h4>\n\t\t\t<hr className=\"auth-form--hr\" />\n\n\t\t\t<Formik\n\t\t\t\tinitialValues={initialValues}\n\t\t\t\tonSubmit={clubSubmitHandler}>\n\t\t\t\t{({ errors, isValid, touched }) => (\n\t\t\t\t\t<Form className=\"auth-from-container\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label htmlFor=\"email\" className=\"auth-form-label\">\n\t\t\t\t\t\t\t\tEmail\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tvalidate={validateEmail}\n\t\t\t\t\t\t\t\tclassName=\"auth-form-input\"\n\t\t\t\t\t\t\t\tautoComplete=\"username\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{touched.email && errors.email && (\n\t\t\t\t\t\t\t\t<div className=\"auth-form-error\">{errors.email}</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label htmlFor=\"password\" className=\"auth-form-label\">\n\t\t\t\t\t\t\t\tPassword\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tvalidate={validatePassword}\n\t\t\t\t\t\t\t\tclassName=\"auth-form-input\"\n\t\t\t\t\t\t\t\tautoComplete=\"new-password\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{touched.password && errors.password && (\n\t\t\t\t\t\t\t\t<div className=\"auth-form-error\">\n\t\t\t\t\t\t\t\t\t{errors.password}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Button disabled={!isValid} type=\"submit\" size=\"small\">\n\t\t\t\t\t\t\tLOGIN\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button size=\"small\" to=\"/\">\n\t\t\t\t\t\t\tCANCEL\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t</div>\n\t);\n\n\tconst clubSignupForm = values => (\n\t\t<div className=\"auth-div\">\n\t\t\t<h4 className=\"auth-form-header\">\n\t\t\t\t<i className=\"fas fa-flag-checkered\" />\n\t\t\t\t&nbsp;Sign up a new account\n\t\t\t</h4>\n\t\t\t<hr className=\"auth-form--hr\" />\n\n\t\t\t<Formik\n\t\t\t\tinitialValues={initialValues}\n\t\t\t\tonSubmit={clubSubmitHandler}>\n\t\t\t\t{({\n\t\t\t\t\terrors,\n\t\t\t\t\tisValid,\n\t\t\t\t\ttouched,\n\t\t\t\t\tsetFieldValue,\n\t\t\t\t\thandleBlur\n\t\t\t\t}) => (\n\t\t\t\t\t<Form className=\"auth-from-container\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label htmlFor=\"name\" className=\"auth-form-label\">\n\t\t\t\t\t\t\t\tClub Name (Name cannot be modified once the account\n\t\t\t\t\t\t\t\tbeing created)\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tvalidate={validateClubName}\n\t\t\t\t\t\t\t\tclassName=\"auth-form-input\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{touched.name && errors.name && (\n\t\t\t\t\t\t\t\t<div className=\"auth-form-error\">{errors.name}</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label htmlFor=\"email\" className=\"auth-form-label\">\n\t\t\t\t\t\t\t\tEmail (Please use a private email address that is\n\t\t\t\t\t\t\t\tdifferent from your club public email)\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tvalidate={validateEmail}\n\t\t\t\t\t\t\t\tclassName=\"auth-form-input\"\n\t\t\t\t\t\t\t\tautoComplete=\"username\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{touched.email && errors.email && (\n\t\t\t\t\t\t\t\t<div className=\"auth-form-error\">{errors.email}</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"image\"\n\t\t\t\t\t\t\tname=\"image\"\n\t\t\t\t\t\t\ttitle=\"Club Logo\"\n\t\t\t\t\t\t\tcomponent={ImageUploader}\n\t\t\t\t\t\t\tvalidate={validateImage}\n\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\n\t\t\t\t\t\t\terrorMessage={errors.image ? errors.image : ''}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tlabelStyle=\"auth-form-label\"\n\t\t\t\t\t\t\tinputStyle=\"auth-form-input\"\n\t\t\t\t\t\t\tpreviewStyle=\"auth-form-image-upload__preview\"\n\t\t\t\t\t\t\terrorStyle=\"auth-form-error\"\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label htmlFor=\"password\" className=\"auth-form-label\">\n\t\t\t\t\t\t\t\tPassword (minimum 6 characters)\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tvalidate={validatePassword}\n\t\t\t\t\t\t\t\tclassName=\"auth-form-input\"\n\t\t\t\t\t\t\t\tautoComplete=\"new-password\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{touched.password && errors.password && (\n\t\t\t\t\t\t\t\t<div className=\"auth-form-error\">\n\t\t\t\t\t\t\t\t\t{errors.password}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\thtmlFor=\"passwordValidation\"\n\t\t\t\t\t\t\t\tclassName=\"auth-form-label\">\n\t\t\t\t\t\t\t\tPlease re-enter password\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tid=\"passwordValidation\"\n\t\t\t\t\t\t\t\tname=\"passwordValidation\"\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tvalidate={validatePassword}\n\t\t\t\t\t\t\t\tclassName=\"auth-form-input\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{touched.passwordValidation &&\n\t\t\t\t\t\t\t\terrors.passwordValidation && (\n\t\t\t\t\t\t\t\t\t<div className=\"auth-form-error\">\n\t\t\t\t\t\t\t\t\t\t{errors.passwordValidation}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Button size=\"small\" disabled={!isValid} type=\"submit\">\n\t\t\t\t\t\t\tSignup\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button to=\"/\" size=\"small\">\n\t\t\t\t\t\t\tCANCEL\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t</div>\n\t);\n\treturn (\n\t\t<React.Fragment>\n\t\t\t{/* error coming from const [error, setError] = useState(); */}\n\t\t\t<ErrorModal error={error || passwordError} onClear={clearErr} />\n\t\t\t{isLoading && <LoadingSpinner asOverlay />}\n\t\t\t{isLoginMode && clubAuthForm()}\n\t\t\t{!isLoginMode && clubSignupForm()}\n\t\t\t<div className=\"auth-footer-div\">\n\t\t\t\t<p>No Account? Please sign up a new account.</p>\n\t\t\t\t{/* <Button inverse to=\"/clubs/signup\">\n\t\t\t\t\tSIGNUP\n\t\t\t\t</Button> */}\n\t\t\t\t<Button size=\"small\" inverse onClick={switchModeHandler}>\n\t\t\t\t\tSWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default ClubAuth;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/NewEventManager.js",["657","658","659","660"],"import React, { useState, useEffect } from 'react';\nimport NewEvent from '../../event/pages/NewEvent';\nimport FormBuilder from '../../event/components/FormBuilder';\nimport EventPhotos from '../../event/pages/EventPhotos';\nimport EventRegistration from '../../event/pages/EventRegistration';\nimport './ClubManager.css';\n\nconst NewEventManager = () => {\n\tconst [eventId, setEventId] = useState();\n\tconst [eventInfo, setEventInfo] = useState(false);\n\tconst [eventInfoClass, setEventInfoClass] = useState('li-tab');\n\tconst [photo, setPhoto] = useState(false);\n\tconst [photoClass, setPhotoClass] = useState('li-tab');\n\tconst [formBuilder, setFormBuilder] = useState(false);\n\tconst [formBuilderClass, setFormBuilderClass] = useState('li-tab');\n\tconst [registration, setRegistration] = useState(false);\n\tconst [registrationClass, setRegistrationClass] = useState(\n\t\t'li-tab'\n\t);\n\tconst [percentage, setPercentage] = useState('0');\n\n\tconst eventInfoClickHandler = () => {\n\t\tsetEventInfo(true);\n\t\tsetEventInfoClass('li-tab_orange');\n\t\tsetPhoto(false);\n\t\tsetPhotoClass('li-tab');\n\t\tsetFormBuilder(false);\n\t\tsetFormBuilderClass('li-tab');\n\t\tsetRegistration(false);\n\t\tsetRegistrationClass('li-tab');\n\t\tsetPercentage('25');\n\t};\n\tconst photoClickHandler = () => {\n\t\tsetEventInfo(false);\n\t\tsetEventInfoClass('li-tab');\n\t\tsetPhoto(true);\n\t\tsetPhotoClass('li-tab_orange');\n\t\tsetFormBuilder(false);\n\t\tsetFormBuilderClass('li-tab');\n\t\tsetRegistration(false);\n\t\tsetRegistrationClass('li-tab');\n\t\tsetPercentage('50');\n\t};\n\tconst formBuilderClickHandler = () => {\n\t\tsetEventInfo(false);\n\t\tsetEventInfoClass('li-tab');\n\t\tsetPhoto(false);\n\t\tsetPhotoClass('li-tab');\n\t\tsetFormBuilder(true);\n\t\tsetFormBuilderClass('li-tab_orange');\n\t\tsetRegistration(false);\n\t\tsetRegistrationClass('li-tab');\n\t\tsetPercentage('75');\n\t};\n\tconst registrationClickHandler = () => {\n\t\tsetEventInfo(false);\n\t\tsetEventInfoClass('li-tab');\n\t\tsetPhoto(false);\n\t\tsetPhotoClass('li-tab');\n\t\tsetFormBuilder(false);\n\t\tsetFormBuilderClass('li-tab');\n\t\tsetRegistration(true);\n\t\tsetRegistrationClass('li-tab_orange');\n\t\tsetPercentage('100');\n\t};\n\tconst saveClickHandler = () => {\n\t\t// setPercentage('100');\n\t};\n\n\t// set defualt page, if none is false, we will use eventInfo as default\n\tif (!eventInfo && !photo && !formBuilder && !registration) {\n\t\teventInfoClickHandler();\n\t}\n\n\t// getting continue status back from <NewEvent />\n\tconst [newEventStatus, setNewEventStatus] = useState(false);\n\tconst NewEventHandler = status => {\n\t\tif (status) {\n\t\t\t// set newEventStatus to true\n\t\t\tsetNewEventStatus(true);\n\t\t}\n\t};\n\tconst EventIDHandler = eId => {\n\t\tsetEventId(eId);\n\t};\n\tuseEffect(() => {\n\t\t// if newEventStatus is true, move to the next stage => Photo.\n\t\tif (newEventStatus) {\n\t\t\tphotoClickHandler();\n\t\t}\n\t}, [newEventStatus, eventInfo]);\n\n\t// getting continue status back from <EventPhoto />\n\tconst [photoStatus, setPhotoStatus] = useState(false);\n\tconst PhotoHandler = status => {\n\t\tif (status) {\n\t\t\tsetPhotoStatus(true);\n\t\t}\n\t};\n\tuseEffect(() => {\n\t\tif (photoStatus) {\n\t\t\tformBuilderClickHandler();\n\t\t}\n\t}, [photoStatus, formBuilderClickHandler]);\n\n\t// getting continue status back from <FormBuilder />\n\tconst [formBuilderStatus, setFormBuilderStatus] = useState(false);\n\tconst FormBuilderHandler = status => {\n\t\tif (status) {\n\t\t\tsetFormBuilderStatus(status);\n\t\t}\n\t};\n\tuseEffect(() => {\n\t\tif (formBuilderStatus) {\n\t\t\tregistrationClickHandler();\n\t\t}\n\t}, [formBuilderStatus, registrationClickHandler]);\n\n\t// getting continue status back from <EventRegistration />\n\tconst [registrationStatus, setRegistrationStatus] = useState(false);\n\tconst RegistrationHandler = status => {\n\t\tif (status) {\n\t\t\tsetRegistrationStatus(status);\n\t\t}\n\t};\n\tuseEffect(() => {\n\t\tif (registrationStatus) {\n\t\t\tregistrationClickHandler();\n\t\t}\n\t}, [registrationStatus, registrationClickHandler]);\n\n\tconst [saveStatus, setSaveStatus] = useState(false);\n\tconst saveHandler = status => {\n\t\tif (status) {\n\t\t\tsetSaveStatus(status);\n\t\t}\n\t};\n\tuseEffect(() => {\n\t\tif (saveStatus) {\n\t\t\tsaveClickHandler();\n\t\t}\n\t}, [saveStatus, saveClickHandler]);\n\n\tconst [multiDayEvent, setMultiDayEvent] = useState(false);\n\tconst isMultiDayEvent = multi => {\n\t\tsetMultiDayEvent(multi);\n\t};\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div className=\"list-header clearfix\">\n\t\t\t\t<div className=\"h3\">New Event Manager</div>\n\t\t\t</div>\n\n\t\t\t{/* New Event Manager Tabs*/}\n\t\t\t<div className=\"eventmanager\">\n\t\t\t\t<div className=\"dashboard-tabs activity-sections\">\n\t\t\t\t\t<div className=\"progress\">\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"progress-bar progress-bar-striped progress-bar-animated\"\n\t\t\t\t\t\t\trole=\"progressbar\"\n\t\t\t\t\t\t\tstyle={{ width: `${percentage}%` }}\n\t\t\t\t\t\t\taria-valuenow={percentage}\n\t\t\t\t\t\t\taria-valuemin=\"0\"\n\t\t\t\t\t\t\taria-valuemax=\"100\">\n\t\t\t\t\t\t\t{`${percentage}%`}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<br />\n\t\t\t\t\t<ul className=\"nav nav-tabs\">\n\t\t\t\t\t\t<li className={eventInfoClass}>Event Information</li>\n\t\t\t\t\t\t<li className={photoClass}>Photos</li>\n\t\t\t\t\t\t<li className={formBuilderClass}>FormBuilder</li>\n\t\t\t\t\t\t<li className={registrationClass}>Registration</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<div className=\"tab-content\">\n\t\t\t\t\t\t{eventInfo && (\n\t\t\t\t\t\t\t<NewEvent\n\t\t\t\t\t\t\t\tnewEventStatus={NewEventHandler}\n\t\t\t\t\t\t\t\teventIdHandler={EventIDHandler}\n\t\t\t\t\t\t\t\tisMultiDayEvent={isMultiDayEvent}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{photo && (\n\t\t\t\t\t\t\t<EventPhotos\n\t\t\t\t\t\t\t\teventPhotosStatus={PhotoHandler}\n\t\t\t\t\t\t\t\teventId={eventId}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{formBuilder && (\n\t\t\t\t\t\t\t<FormBuilder\n\t\t\t\t\t\t\t\tformbuilderStatus={FormBuilderHandler}\n\t\t\t\t\t\t\t\teventId={eventId}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{registration && (\n\t\t\t\t\t\t\t<EventRegistration\n\t\t\t\t\t\t\t\tregistrationStatus={RegistrationHandler}\n\t\t\t\t\t\t\t\tsaveStatus={saveHandler}\n\t\t\t\t\t\t\t\teventId={eventId}\n\t\t\t\t\t\t\t\tmultiDayEvent={multiDayEvent}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default NewEventManager;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/ClubAccountManager.js",["661","662","663","664"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/ClubCredential.js",["665","666","667","668","669","670","671","672","673","674"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/entryDashboard/pages/NewEntryManager.js",["675","676","677","678"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/users/pages/UserGarageWrapper.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/hooks/http-hook.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/UIElements/Backdrop.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/users/pages/UserGarage.js",["679","680","681","682"],"import React, { useEffect, useState, useContext } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport UserCarsList from '../components/UserCarsList';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { UserAuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { useParams } from 'react-router-dom';\nimport { useUserLoginValidation } from '../../shared/hooks/userLoginValidation-hook';\n\nimport '../../shared/css/Events.css';\n\n// Events is called in App.js where the route been defined\nconst UserGarage = props => {\n\t// check if the caller is CarSelector\n\tconst carSelector = props.carSelector;\n\tconst userId = props.userId;\n\tconst entryCarId = props.entryCarId;\n\tconst isNewEntry = props.isNewEntry;\n\n\tconst [loadedCars, setLoadedCars] = useState();\n\tconst userAuthContext = useContext(UserAuthContext);\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\n\tconst getNewEntry = entry => {\n\t\tprops.getNewEntry(entry);\n\t};\n\n\t// useParams().{Id} Id need to match what defines in <Route path=\"/cars/users/:userId\" exact>\n\n\t// We don't need to take care of page refreshing here because <Route path=\"/cars/users/:userId\" exact>\n\t// is added even if user is not logged in\n\t// If User is not logged in, we will re-direct to user login page.\n\t// authentication check. remember current path. We will use it to check if we are in the re-direct loop to\n\t// avoid validation loop\n\tuseUserLoginValidation(`/users/garagewrapper/${userId}`);\n\tlet location = useLocation();\n\tuseEffect(() => {\n\t\t// get current URL path\n\t\tlet path = location.pathname;\n\t\tlet userRedirectURL = userAuthContext.userRedirectURL;\n\t\tif (path === userRedirectURL) {\n\t\t\t// If we are re-directing to this page, we want to clear up userRedirectURL\n\t\t\t// re-init redirectURL after re-direction route\n\t\t\tuserAuthContext.setUserRedirectURL(null);\n\t\t}\n\t}, [userAuthContext, location]);\n\n\tuseEffect(() => {\n\t\tconst fetechEvents = async () => {\n\t\t\ttry {\n\t\t\t\tlet responseData, responseStatus, responseMessage;\n\n\t\t\t\tif (carSelector) {\n\t\t\t\t\t[\n\t\t\t\t\t\tresponseData,\n\t\t\t\t\t\tresponseStatus,\n\t\t\t\t\t\tresponseMessage\n\t\t\t\t\t] = await sendRequest(\n\t\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL +\n\t\t\t\t\t\t\t`/cars/users/${userId}`,\n\t\t\t\t\t\t'POST',\n\t\t\t\t\t\tJSON.stringify({ active: true }),\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'Content-type': 'application/json',\n\t\t\t\t\t\t\tAuthorization: 'Bearer ' + userAuthContext.userToken\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\t[\n\t\t\t\t\t\tresponseData,\n\t\t\t\t\t\tresponseStatus,\n\t\t\t\t\t\tresponseMessage\n\t\t\t\t\t] = await sendRequest(\n\t\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL +\n\t\t\t\t\t\t\t`/cars/users/${userId}`,\n\t\t\t\t\t\t'POST',\n\t\t\t\t\t\tJSON.stringify({ active: false }),\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'Content-type': 'application/json',\n\t\t\t\t\t\t\tAuthorization: 'Bearer ' + userAuthContext.userToken\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tsetLoadedCars(responseData.cars);\n\t\t\t\t// Check who's viewing the garage. If it's from owner, store data under localStorage 'userData'\n\t\t\t\t// otherwise store in 'garages' with different userId\n\t\t\t\tif (userId === userAuthContext.userId) {\n\t\t\t\t\tlet userData = JSON.parse(localStorage.getItem('userData'));\n\t\t\t\t\tuserData.garage = responseData.cars;\n\t\t\t\t\tlocalStorage.setItem('userData', JSON.stringify(userData));\n\t\t\t\t} else {\n\t\t\t\t\tlet garages = JSON.parse(localStorage.getItem('garages'))\n\t\t\t\t\t\t? JSON.parse(localStorage.getItem('garages'))\n\t\t\t\t\t\t: [];\n\t\t\t\t\tgarages.push({ userId: responseData.cars });\n\t\t\t\t\tlocalStorage.setItem('garages', JSON.stringify(garages));\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log('err = ', err);\n\t\t\t}\n\t\t};\n\t\tfetechEvents();\n\t}, [sendRequest, userId, userAuthContext, setLoadedCars]);\n\n\tconst carSelectorStatus = status => {\n\t\tprops.carSelectorStatus(status);\n\t};\n\n\tconst carIdHandler = carId => {\n\t\tprops.carIdHandler(carId);\n\t};\n\n\t// calling EventsList from EventsList.js where it passes EVENTS to child EventsList\n\t// just treat the following call as EventsList(items = EVENTS); items is the props\n\t// name defined in EventsList\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t{isLoading && (\n\t\t\t\t<div className=\"center\">\n\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{!isLoading && loadedCars && !carSelector && (\n\t\t\t\t<UserCarsList items={loadedCars} carSelector={false} />\n\t\t\t)}\n\t\t\t{!isLoading && loadedCars && carSelector && (\n\t\t\t\t<UserCarsList\n\t\t\t\t\titems={loadedCars}\n\t\t\t\t\tcarSelector={true}\n\t\t\t\t\tcarSelectorStatus={carSelectorStatus}\n\t\t\t\t\tcarIdHandler={carIdHandler}\n\t\t\t\t\tisNewEntry={isNewEntry}\n\t\t\t\t\tentryCarId={entryCarId}\n\t\t\t\t\tentryId={props.entryId}\n\t\t\t\t\tgetNewEntry={getNewEntry}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t{!isLoading && !loadedCars && !carSelector && (\n\t\t\t\t<div>\n\t\t\t\t\t<p> &nbsp; &nbsp; &nbsp;No car in the garage. </p>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{!isLoading && !loadedCars && carSelector && (\n\t\t\t\t<div>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t&nbsp; &nbsp; &nbsp;No car in the garage. You must add a\n\t\t\t\t\t\tcar to enter the event.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default UserGarage;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/ClubProfile.js",["683","684","685","686","687","688","689","690","691"],"import React, { useContext, useEffect, useState } from 'react';\nimport { Field, Form, Formik } from 'formik';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport NavigationPrompt from 'react-router-navigation-prompt';\nimport { useClubLoginValidation } from '../../shared/hooks/clubLoginValidation-hook';\nimport Button from '../../shared/components/FormElements/Button';\nimport { ClubAuthContext } from '../../shared/context/auth-context';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport PromptModal from '../../shared/components/UIElements/PromptModal';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport '../../shared/css/EventForm.css';\nimport '../../event/components/EventItem.css';\n\nconst ClubProfile = () => {\n\tconst [loadedClubProfile, setLoadedClubProfile] = useState();\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\n\tconst clubAuthContext = useContext(ClubAuthContext);\n\tconst clubId = clubAuthContext.clubId;\n\n\t// authentication check check whether club has logged in\n\tuseClubLoginValidation(`/clubs/profileManager/${clubId}`);\n\n\t// If we are re-directing to this page, we want to clear up clubRedirectURL\n\tlet location = useLocation();\n\tlet path;\n\tuseEffect(() => {\n\t\tpath = location.pathname;\n\t\tlet clubRedirectURL = clubAuthContext.clubRedirectURL;\n\t\tif (path === clubRedirectURL) {\n\t\t\t// re-init redirectURL after re-direction route\n\t\t\tclubAuthContext.setClubRedirectURL(null);\n\t\t}\n\t}, [location]);\n\n\tconst [OKLeavePage, setOKLeavePage] = useState(true);\n\tlet initialValues = {\n\t\twebPage: '',\n\t\tfaceBook: '',\n\t\tyouTube: '',\n\t\tcontactEmail: '',\n\t\tdescription: '',\n\t\tschedule: ''\n\t};\n\n\tconst [validateWebPage, setValidateWebPage] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Web page url is required.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\n\tconst [validateFaceBook, setValidateFaceBook] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Facebook link is required.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\n\tconst [validateContactEmail, setValidateContactEmail] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Contact email is required.';\n\t\t\t} else {\n\t\t\t\tconst pattern = /[a-z0-9A-Z!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9A-Z!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n\t\t\t\tif (!pattern.test(value)) {\n\t\t\t\t\terror = 'Please enter a valid email';\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\n\tconst [validateDescription, setValidateDescription] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Club Description is required.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\n\tconst [validateSchedule, setValidateSchedule] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Club event schedule is required.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\n\tuseEffect(() => {\n\t\tconst fetchClubProfile = async () => {\n\t\t\ttry {\n\t\t\t\tconst [\n\t\t\t\t\tresponseData,\n\t\t\t\t\tresponseStatus,\n\t\t\t\t\tresponseMessage\n\t\t\t\t] = await sendRequest(\n\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL +\n\t\t\t\t\t\t`/clubs/profile/${clubId}`,\n\t\t\t\t\t'GET',\n\t\t\t\t\tnull,\n\t\t\t\t\t{\n\t\t\t\t\t\t// adding JWT to header for authentication, JWT contains clubId\n\t\t\t\t\t\tAuthorization: 'Bearer ' + clubAuthContext.clubToken\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\t// Need to set the loadedClubProfile so we will set initialValues again.\n\t\t\t\t// Without it, form will keep the old initial values.\n\t\t\t\tsetLoadedClubProfile(responseData.clubProfile);\n\t\t\t} catch (err) {}\n\t\t};\n\t\tfetchClubProfile();\n\t}, [clubId, setLoadedClubProfile]);\n\n\tconst [saveButtonEnabled, setSaveButtonEnabled] = useState(false);\n\tconst submitHandler = async values => {\n\t\ttry {\n\t\t\tconst formData = new FormData();\n\t\t\tformData.append('webPage', values.webPage);\n\t\t\tformData.append('faceBook', values.faceBook);\n\t\t\tformData.append('youTube', values.youTube);\n\t\t\tformData.append('contactEmail', values.contactEmail);\n\t\t\tformData.append('description', values.description);\n\t\t\tformData.append('schedule', values.schedule);\n\t\t\tconst [\n\t\t\t\tresponseData,\n\t\t\t\tresponseStatus,\n\t\t\t\tresponseMessage\n\t\t\t] = await sendRequest(\n\t\t\t\tprocess.env.REACT_APP_BACKEND_URL + `/clubs/profile`,\n\t\t\t\t'PATCH',\n\t\t\t\tformData,\n\t\t\t\t{\n\t\t\t\t\t// adding JWT to header for authentication, JWT contains clubId\n\t\t\t\t\tAuthorization: 'Bearer ' + clubAuthContext.clubToken\n\t\t\t\t}\n\t\t\t);\n\t\t\t// Need to set the loadedClubProfile so we will set initialValues again.\n\t\t\t// Without it, form will keep the old initial values.\n\t\t\tsetLoadedClubProfile(responseData.clubProfile);\n\t\t\tsetOKLeavePage(true);\n\t\t\tsetSaveButtonEnabled(false);\n\t\t} catch (err) {}\n\t};\n\n\tif (isLoading) {\n\t\treturn (\n\t\t\t<div className=\"center\">\n\t\t\t\t<LoadingSpinner />\n\t\t\t</div>\n\t\t);\n\t}\n\tif (loadedClubProfile) {\n\t\tinitialValues = {\n\t\t\twebPage: loadedClubProfile.webPage,\n\t\t\tfaceBook: loadedClubProfile.faceBook,\n\t\t\tyouTube: loadedClubProfile.youTube,\n\t\t\tcontactEmail: loadedClubProfile.contactEmail,\n\t\t\tdescription: loadedClubProfile.description,\n\t\t\tschedule: loadedClubProfile.schedule\n\t\t};\n\t}\n\n\tconst clubForm = () => (\n\t\t<div className=\"event-form\">\n\t\t\t<div className=\"event-form-header\">\n\t\t\t\t<h4>Please enter club information</h4>\n\t\t\t\t<hr className=\"event-form__hr\" />\n\t\t\t</div>\n\t\t\t<Formik\n\t\t\t\tenableReinitialize={true}\n\t\t\t\tinitialValues={initialValues}\n\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\tsubmitHandler(values);\n\t\t\t\t\tif (actions.isSubmitting) {\n\t\t\t\t\t\tactions.setSubmitting(false);\n\t\t\t\t\t}\n\t\t\t\t\tif (!actions.isSubmitting) {\n\t\t\t\t\t\tsetValidateWebPage(() => value => {\n\t\t\t\t\t\t\tconsole.log('ValidateWebPage');\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Web page url is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateFaceBook(() => value => {\n\t\t\t\t\t\t\tconsole.log('ValidateFaceBook');\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Facebook link is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateContactEmail(() => value => {\n\t\t\t\t\t\t\tconsole.log('ValidateContactEmail');\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Email is required.';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconst pattern = /[a-z0-9A-Z!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9A-Z!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n\t\t\t\t\t\t\t\tif (!pattern.test(value)) {\n\t\t\t\t\t\t\t\t\terror = 'Please enter a valid email';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateDescription(() => value => {\n\t\t\t\t\t\t\tconsole.log('ValidateDescription');\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Club description is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateSchedule(() => value => {\n\t\t\t\t\t\t\tconsole.log('ValidateSchedule');\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Club event schedule is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}}>\n\t\t\t\t{({\n\t\t\t\t\terrors,\n\t\t\t\t\thandleBlur,\n\t\t\t\t\thandleChange,\n\t\t\t\t\thandleSubmit,\n\t\t\t\t\tisSubmitting,\n\t\t\t\t\tisValid,\n\t\t\t\t\tsetFieldValue,\n\t\t\t\t\ttouched,\n\t\t\t\t\tvalues\n\t\t\t\t}) => (\n\t\t\t\t\t<Form className=\"event-form-container\">\n\t\t\t\t\t\t<label htmlFor=\"webPage\" className=\"event-form__label\">\n\t\t\t\t\t\t\tWeb Page\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"webPage\"\n\t\t\t\t\t\t\tname=\"webPage\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field\"\n\t\t\t\t\t\t\tvalidate={validateWebPage}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\tsetSaveButtonEnabled(true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.webPage && errors.webPage && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.webPage}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label htmlFor=\"faceBook\" className=\"event-form__label\">\n\t\t\t\t\t\t\tFacebook Page\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"faceBook\"\n\t\t\t\t\t\t\tname=\"faceBook\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field\"\n\t\t\t\t\t\t\tvalidate={validateFaceBook}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\tsetSaveButtonEnabled(true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.faceBook && errors.faceBook && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.faceBook}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label htmlFor=\"youTube\" className=\"event-form__label\">\n\t\t\t\t\t\t\tYouTube Channel (Optional)\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"youTube\"\n\t\t\t\t\t\t\tname=\"youTube\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\tsetSaveButtonEnabled(true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<label htmlFor=\"faceBook\" className=\"event-form__label\">\n\t\t\t\t\t\t\tContact Email Address (Please do not use login email\n\t\t\t\t\t\t\taddress)\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"contactEmail\"\n\t\t\t\t\t\t\tname=\"contactEmail\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field\"\n\t\t\t\t\t\t\tvalidate={validateContactEmail}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\tsetSaveButtonEnabled(true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.contactEmail && errors.contactEmail && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.contactEmail}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"description\"\n\t\t\t\t\t\t\tclassName=\"event-form__label\">\n\t\t\t\t\t\t\tClub Description\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"decription\"\n\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\tas=\"textarea\"\n\t\t\t\t\t\t\trows=\"15\"\n\t\t\t\t\t\t\tcols=\"50\"\n\t\t\t\t\t\t\tplaceholder=\"Please enter club description\"\n\t\t\t\t\t\t\tclassName=\"event-form__field-textarea\"\n\t\t\t\t\t\t\tvalidate={validateDescription}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\tsetSaveButtonEnabled(true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tplaceholder=\"About the club\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.description && errors.description && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.description}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label htmlFor=\"schedule\" className=\"event-form__label\">\n\t\t\t\t\t\t\tEvent Schedule\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"schedule\"\n\t\t\t\t\t\t\tname=\"schedule\"\n\t\t\t\t\t\t\tas=\"textarea\"\n\t\t\t\t\t\t\trows=\"15\"\n\t\t\t\t\t\t\tcols=\"50\"\n\t\t\t\t\t\t\tplaceholder=\"Please enter event schedule\"\n\t\t\t\t\t\t\tclassName=\"event-form__field-textarea\"\n\t\t\t\t\t\t\tvalidate={validateSchedule}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\tsetSaveButtonEnabled(true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tplaceholder=\"TBD\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.schedule && errors.schedule && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.schedule}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\tmargin-left=\"1.5rem\"\n\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\tisSubmitting || !isValid || !saveButtonEnabled\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonClick={e => {\n\t\t\t\t\t\t\t\tsetFieldValue('isSaveButton', false, false);\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\tSAVE\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<NavigationPrompt\n\t\t\t\t\t\t\tafterConfirm={() => {\n\t\t\t\t\t\t\t\t// localStorage.removeItem('eventID');\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t// Confirm navigation if going to a path that does not start with current path:\n\t\t\t\t\t\t\twhen={(crntLocation, nextLocation) => {\n\t\t\t\t\t\t\t\t// remove ClubRedirectURL from memory\n\t\t\t\t\t\t\t\tclubAuthContext.setClubRedirectURL(null);\n\t\t\t\t\t\t\t\t// OKLeavePage meaning form was not touched yet\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tOKLeavePage ||\n\t\t\t\t\t\t\t\t\tnextLocation.pathname === '/clubs/auth'\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t!nextLocation ||\n\t\t\t\t\t\t\t\t\t\t!nextLocation.pathname.startsWith(\n\t\t\t\t\t\t\t\t\t\t\tcrntLocation.pathname\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t{({ isActive, onCancel, onConfirm }) => {\n\t\t\t\t\t\t\t\tif (isActive) {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<PromptModal\n\t\t\t\t\t\t\t\t\t\t\tonCancel={onCancel}\n\t\t\t\t\t\t\t\t\t\t\tonConfirm={onConfirm}\n\t\t\t\t\t\t\t\t\t\t\tcontentClass=\"event-item__modal-content\"\n\t\t\t\t\t\t\t\t\t\t\tfooterClass=\"event-item__modal-actions\"\n\t\t\t\t\t\t\t\t\t\t\terror=\"You sure want to leave? Unsaved data will be lost.\"></PromptModal>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\tThis is probably an anti-pattern but ya know...\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t</NavigationPrompt>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t{!isLoading && clubForm()}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default ClubProfile;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubs/pages/ClubEvents.js",["692","693","694","695"],"import React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport EventsList from '../../events/components/EventsList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { ClubAuthContext } from '../../shared/context/auth-context';\n\n// Events is called in App.js where the route been defined\nconst ClubEvents = props => {\n\t// readoOnly false is for Club EditEvents; true is for Club EventManager View Events and users and non-owner club\n\tlet readOnly = props.readOnly ? props.readOnly : false;\n\t// registration is true is for Registration Manager\n\tlet entryReportManager = props.entryReportManager\n\t\t? props.entryReportManager\n\t\t: false;\n\n\tconst [loadedEvents, setLoadedEvents] = useState();\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\n\t// let cid = useParams().clubId;\n\t// let clubId = props.clubId ? props.clubId : cid;\n\tlet clubId = props.clubId;\n\n\tconst clubAuthContext = useContext(ClubAuthContext);\n\tlet ownerClubEvent = false;\n\tif (clubAuthContext && clubAuthContext.clubId === clubId) {\n\t\townerClubEvent = true;\n\t}\n\n\tuseEffect(() => {\n\t\tconst fetechEvents = async () => {\n\t\t\ttry {\n\t\t\t\tlet responseData;\n\t\t\t\tlet responseStatus;\n\t\t\t\tlet responseMessage;\n\n\t\t\t\t// For ownerClubEvent, use different route that will get all events owned by the club\n\t\t\t\t// ownerClubEvent gets all events, published/unpublished\n\t\t\t\t// non-owner gets only published events\n\t\t\t\tif (ownerClubEvent) {\n\t\t\t\t\t// for registration reports, we will only query published events\n\t\t\t\t\tif (entryReportManager) {\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tresponseData,\n\t\t\t\t\t\t\tresponseStatus,\n\t\t\t\t\t\t\tresponseMessage\n\t\t\t\t\t\t] = await sendRequest(\n\t\t\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL +\n\t\t\t\t\t\t\t\t`/events/ownerClubPublished/${clubId}`,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tAuthorization: 'Bearer ' + clubAuthContext.clubToken\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tresponseData,\n\t\t\t\t\t\t\tresponseStatus,\n\t\t\t\t\t\t\tresponseMessage\n\t\t\t\t\t\t] = await sendRequest(\n\t\t\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL +\n\t\t\t\t\t\t\t\t`/events/ownerClub/${clubId}`,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tAuthorization: 'Bearer ' + clubAuthContext.clubToken\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// This route only gets published events\n\t\t\t\t\t[\n\t\t\t\t\t\tresponseData,\n\t\t\t\t\t\tresponseStatus,\n\t\t\t\t\t\tresponseMessage\n\t\t\t\t\t] = await sendRequest(\n\t\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL +\n\t\t\t\t\t\t\t`/events/club/${clubId}`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tsetLoadedEvents(responseData.events);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log('err = ', err);\n\t\t\t}\n\t\t};\n\t\tfetechEvents();\n\t}, [sendRequest, clubId, entryReportManager]);\n\n\t// calling EventsList from EventsList.js where it passes EVENTS to child EventsList\n\t// just treat the following call as EventsList(items = EVENTS); items is the props\n\t// name defined in EventsList\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t{isLoading && (\n\t\t\t\t<div className=\"center\">\n\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{!isLoading && loadedEvents && (\n\t\t\t\t// displayPublished: print PUBLISHED on images\n\t\t\t\t// readOnly true- for Club ViewEvent; false- for all others\n\t\t\t\t// registration: true- Club Registration Manager\n\t\t\t\t<EventsList\n\t\t\t\t\titems={loadedEvents}\n\t\t\t\t\tdisplayPublished={true}\n\t\t\t\t\treadOnly={readOnly}\n\t\t\t\t\tentryReportManager={entryReportManager}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default ClubEvents;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/pages/UpdateEvent.js",["696","697","698","699","700","701","702"],"import React, { useContext, useEffect, useState } from 'react';\nimport { Field, Form, Formik } from 'formik';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport moment from 'moment';\nimport NavigationPrompt from 'react-router-navigation-prompt';\nimport * as Yup from 'yup';\n\nimport { useClubLoginValidation } from '../../shared/hooks/clubLoginValidation-hook';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport { ClubAuthContext } from '../../shared/context/auth-context';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport Modal from '../../shared/components/UIElements/Modal';\nimport PromptModal from '../../shared/components/UIElements/PromptModal';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport '../../shared/css/EventForm.css';\nimport '../../event/components/EventItem.css';\nimport { eventTypes } from '../../event/components/EventTypes';\n\nconst UpdateEvent = props => {\n\tconst [loadedEvent, setLoadedEvent] = useState(props.event);\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\n\tconst clubAuthContext = useContext(ClubAuthContext);\n\n\tlet eventId = props.event.id;\n\t// authentication check\n\tuseClubLoginValidation(`/events/form/${eventId}`);\n\n\t// If we are re-directing to this page, we want to clear up clubRedirectURL\n\tlet location = useLocation();\n\tlet path;\n\tReact.useEffect(() => {\n\t\tpath = location.pathname;\n\t\tlet clubRedirectURL = clubAuthContext.clubRedirectURL;\n\t\tif (path === clubRedirectURL) {\n\t\t\t// re-init redirectURL after re-direction route\n\t\t\tclubAuthContext.setClubRedirectURL(null);\n\t\t}\n\t}, [location]);\n\n\tlet tomorrow = moment().add(1, 'days').format('YYYY-MM-DD');\n\tconst history = useHistory();\n\n\t// Modal section\n\tconst [showModal, setShowModal] = useState(false);\n\tconst openModalHandler = () => setShowModal(true);\n\tconst closeModalHandler = () => {\n\t\tcloseMapContainer();\n\t\tsetShowModal(false);\n\t};\n\n\tconst [showCourse, setShowCourse] = useState(false);\n\tconst openCourseHandler = () => {\n\t\topenModalHandler();\n\t\tsetShowCourse(true);\n\t};\n\tconst closeCourseHandler = () => setShowCourse(false);\n\n\tconst [showImage, setShowImage] = useState(false);\n\tconst openImageHandler = () => {\n\t\topenModalHandler();\n\t\tsetShowImage(true);\n\t};\n\tconst closeImageHandler = () => setShowImage(false);\n\n\tconst closeMapContainer = () => {\n\t\tshowCourse && closeCourseHandler();\n\t\tshowImage && closeImageHandler();\n\t};\n\n\tif (!eventId || eventId === 'error') {\n\t\t// possibly page refresh, look for localStorage\n\t\tconst storageData = JSON.parse(localStorage.getItem('eventID'));\n\t\tif (storageData && storageData.eventId) {\n\t\t\teventId = storageData.eventId;\n\t\t}\n\t} else {\n\t\t// set eventId to localStorage for potential page refresh\n\t\t// we will remove it when the form gets submitted\n\t\t// @todo remove data when user leaves this page\n\t\tlocalStorage.setItem(\n\t\t\t'eventID',\n\t\t\tJSON.stringify({\n\t\t\t\teventId: eventId\n\t\t\t})\n\t\t);\n\t}\n\n\tconst [OKLeavePage, setOKLeavePage] = useState(true);\n\tlet initialValues = {\n\t\tname: '',\n\t\ttype: 'Autocross',\n\t\timage: '',\n\t\tstartDate: { tomorrow },\n\t\tendDate: { tomorrow },\n\t\tregStartDate: { tomorrow },\n\t\tregEndDate: { tomorrow },\n\t\tvenue: '',\n\t\taddress: '',\n\t\tdescription: '',\n\t\tinstruction: '',\n\t\tcourseMap: ''\n\t\t// isSaveButton: false\n\t};\n\n\tconst dateValidationSchema = Yup.object().shape({\n\t\tstartDate: Yup.date()\n\t\t\t.min(tomorrow, 'Start date must be no later than end date')\n\t\t\t.max(\n\t\t\t\tYup.ref('endDate'),\n\t\t\t\t'Start date must be no later than end date'\n\t\t\t)\n\t\t\t.required(),\n\t\tendDate: Yup.date()\n\t\t\t.min(\n\t\t\t\tYup.ref('startDate'),\n\t\t\t\t'End date cannot be earlier than start date'\n\t\t\t)\n\t\t\t.max('2021-12-31')\n\t\t\t.required(),\n\t\tregStartDate: Yup.date()\n\t\t\t// .min(\n\t\t\t// \ttomorrow,\n\t\t\t// \t'Registration start date cannot be earlier than tomorrow'\n\t\t\t// )\n\t\t\t.max(\n\t\t\t\tYup.ref('startDate'),\n\t\t\t\t'Registration start date must be earlier than event start date'\n\t\t\t)\n\t\t\t.required(),\n\t\tregEndDate: Yup.date()\n\t\t\t.min(\n\t\t\t\tYup.ref('regStartDate'),\n\t\t\t\t'Registration end date cannot be earlier than registration start date'\n\t\t\t)\n\t\t\t.max(\n\t\t\t\tYup.ref('startDate'),\n\t\t\t\t'Registration end date cannot be later than event start date'\n\t\t\t)\n\t\t\t.required()\n\t});\n\n\tconst [validateName, setValidateName] = useState(() => value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Event Name is required.';\n\t\t}\n\t\treturn error;\n\t});\n\n\tconst [validateVenue, setValidateVenue] = useState(() => value => {\n\t\tlet error;\n\t\tif (!value) {\n\t\t\terror = 'Event Venue is required.';\n\t\t}\n\t\treturn error;\n\t});\n\n\tconst [validateAddress, setValidateAddress] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Event Address is required.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\n\tconst [validateDescription, setValidateDescription] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Event Description is required.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\n\tconst [validateInstruction, setValidateInstruction] = useState(\n\t\t() => value => {\n\t\t\tlet error;\n\t\t\tif (!value) {\n\t\t\t\terror = 'Event Instruction is required.';\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\t);\n\n\tconst [saveButtonEnabled, setSaveButtonEnabled] = useState(false);\n\tconst submitHandler = async values => {\n\t\ttry {\n\t\t\tconst formData = new FormData();\n\t\t\tformData.append('name', values.name);\n\t\t\tformData.append('type', values.type);\n\t\t\tformData.append('startDate', values.startDate); //format 2020-08-01\n\t\t\tformData.append('endDate', values.endDate);\n\t\t\tformData.append('regStartDate', values.regStartDate);\n\t\t\tformData.append('regEndDate', values.regEndDate);\n\t\t\tformData.append('venue', values.venue);\n\t\t\tformData.append('address', values.address);\n\t\t\tformData.append('description', values.description);\n\t\t\tformData.append('instruction', values.instruction);\n\t\t\t// formData.append('image', values.image);\n\t\t\t// formData.append('courseMap', values.courseMap);\n\n\t\t\tconst [\n\t\t\t\tresponseData,\n\t\t\t\tresponseStatus,\n\t\t\t\tresponseMessage\n\t\t\t] = await sendRequest(\n\t\t\t\tprocess.env.REACT_APP_BACKEND_URL + `/events/${eventId}`,\n\t\t\t\t'PATCH',\n\t\t\t\tformData,\n\t\t\t\t{\n\t\t\t\t\t// adding JWT to header for authentication, JWT contains clubId\n\t\t\t\t\tAuthorization: 'Bearer ' + clubAuthContext.clubToken\n\t\t\t\t}\n\t\t\t);\n\t\t\t// Need to set the loadedEvent so we will set initialValues again.\n\t\t\t// Without it, form will keep the old initial values.\n\t\t\tsetLoadedEvent(responseData.event);\n\t\t\tsetOKLeavePage(true);\n\t\t\tsetSaveButtonEnabled(false);\n\t\t\tconsole.log('return new event');\n\t\t\tprops.returnNewEvent(responseData.event);\n\t\t} catch (err) {}\n\t};\n\n\tif (isLoading) {\n\t\treturn (\n\t\t\t<div className=\"center\">\n\t\t\t\t<LoadingSpinner />\n\t\t\t</div>\n\t\t);\n\t}\n\tif (!loadedEvent && !error) {\n\t\treturn (\n\t\t\t<div className=\"center\">\n\t\t\t\t<Card>\n\t\t\t\t\t<h2>Event not found!</h2>\n\t\t\t\t</Card>\n\t\t\t</div>\n\t\t);\n\t} else if (loadedEvent) {\n\t\tinitialValues = {\n\t\t\tname: loadedEvent.name,\n\t\t\ttype: loadedEvent.type,\n\t\t\tstartDate: moment(loadedEvent.startDate).format('YYYY-MM-DD'),\n\t\t\tendDate: moment(loadedEvent.endDate).format('YYYY-MM-DD'),\n\t\t\tregStartDate: moment(loadedEvent.regStartDate).format(\n\t\t\t\t'YYYY-MM-DD'\n\t\t\t),\n\t\t\tregEndDate: moment(loadedEvent.regEndDate).format('YYYY-MM-DD'),\n\t\t\tvenue: loadedEvent.venue,\n\t\t\taddress: loadedEvent.address,\n\t\t\tdescription: loadedEvent.description,\n\t\t\tinstruction: loadedEvent.instruction\n\t\t};\n\t}\n\n\tconst backHandler = () => {\n\t\thistory.push(`/events/${eventId}`);\n\t};\n\n\tconst eventForm = () => (\n\t\t<div className=\"event-form\">\n\t\t\t<div className=\"event-form-header\">\n\t\t\t\t<h4>Please enter event information</h4>\n\t\t\t\t<hr className=\"event-form__hr\" />\n\t\t\t</div>\n\t\t\t<Formik\n\t\t\t\tenableReinitialize={true}\n\t\t\t\tinitialValues={initialValues}\n\t\t\t\tvalidationSchema={dateValidationSchema}\n\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\tsubmitHandler(values);\n\t\t\t\t\tif (actions.isSubmitting) {\n\t\t\t\t\t\tactions.setSubmitting(false);\n\t\t\t\t\t}\n\t\t\t\t\tif (!actions.isSubmitting) {\n\t\t\t\t\t\tsetValidateName(() => value => {\n\t\t\t\t\t\t\tconsole.log('ValidateName');\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Event Name is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateVenue(() => value => {\n\t\t\t\t\t\t\tconsole.log('ValidateVenue');\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Event Venue is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateAddress(() => value => {\n\t\t\t\t\t\t\tconsole.log('ValidateAddress');\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Event Address is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateDescription(() => value => {\n\t\t\t\t\t\t\tconsole.log('ValidateDescription');\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Event description is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetValidateInstruction(() => value => {\n\t\t\t\t\t\t\tconsole.log('ValidateInstruction');\n\t\t\t\t\t\t\tlet error;\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\terror = 'Event instruction is required.';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn error;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}}>\n\t\t\t\t{({\n\t\t\t\t\terrors,\n\t\t\t\t\thandleBlur,\n\t\t\t\t\thandleChange,\n\t\t\t\t\thandleSubmit,\n\t\t\t\t\tisSubmitting,\n\t\t\t\t\tisValid,\n\t\t\t\t\tsetFieldValue,\n\t\t\t\t\ttouched,\n\t\t\t\t\tvalues\n\t\t\t\t}) => (\n\t\t\t\t\t<Form className=\"event-form-container\">\n\t\t\t\t\t\t<label htmlFor=\"name\" className=\"event-form__label\">\n\t\t\t\t\t\t\tEvent Name\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field\"\n\t\t\t\t\t\t\tvalidate={validateName}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tvalue={values.name}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\t// without handBlure(event) touched.name will not work\n\t\t\t\t\t\t\t\t// To take advantage of touched, we can pass formik.handleBlur to each input's onBlur prop.\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\tsetSaveButtonEnabled(true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.name && errors.name && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.name}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label htmlFor=\"eventType\" className=\"event-form__label\">\n\t\t\t\t\t\t\tEvent Type\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"type\"\n\t\t\t\t\t\t\tname=\"type\"\n\t\t\t\t\t\t\tas=\"select\"\n\t\t\t\t\t\t\tclassName=\"event-form__eventtype\"\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tvalue={values.type}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\tsetSaveButtonEnabled(true);\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<option value=\"Event Type\" disabled>\n\t\t\t\t\t\t\t\tEvent Type\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t{eventTypes.map(option => {\n\t\t\t\t\t\t\t\tlet res = option.split(':');\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<option name={res[0]} key={res[0]}>\n\t\t\t\t\t\t\t\t\t\t{res[1]}\n\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"startDate\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_startdate\">\n\t\t\t\t\t\t\tStart Date\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"endDate\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_enddate\">\n\t\t\t\t\t\t\tEnd Date\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"startDate\"\n\t\t\t\t\t\t\tname=\"startDate\"\n\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\tmin={tomorrow}\n\t\t\t\t\t\t\tmax=\"2030-12-31\"\n\t\t\t\t\t\t\tclassName=\"event-form__startdate\"\n\t\t\t\t\t\t\tvalue={values.startDate}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\tsetSaveButtonEnabled(true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"endDate\"\n\t\t\t\t\t\t\tname=\"endDate\"\n\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\tmin={tomorrow}\n\t\t\t\t\t\t\tmax=\"2030-12-31\"\n\t\t\t\t\t\t\tclassName=\"event-form__enddate\"\n\t\t\t\t\t\t\tvalue={values.endDate}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\tsetSaveButtonEnabled(true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{(touched.startDate || touched.endDate) &&\n\t\t\t\t\t\t\t(errors.sartDate || errors.endDate) && (\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<div className=\"event-form__field-error-startDate\">\n\t\t\t\t\t\t\t\t\t\t{errors.startDate}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"event-form__field-error-endDate\">\n\t\t\t\t\t\t\t\t\t\t{errors.endDate}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"regStartDate\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_startdate\">\n\t\t\t\t\t\t\tRegistration Start Date\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"regEndDate\"\n\t\t\t\t\t\t\tclassName=\"event-form__label_enddate\">\n\t\t\t\t\t\t\tRegistration End Date\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"regStartDate\"\n\t\t\t\t\t\t\tname=\"regStartDate\"\n\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\t// min={tomorrow}\n\t\t\t\t\t\t\tmax=\"2030-12-31\"\n\t\t\t\t\t\t\tclassName=\"event-form__startdate\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\tsetSaveButtonEnabled(true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"regEndDate\"\n\t\t\t\t\t\t\tname=\"regEndDate\"\n\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\tmin={tomorrow}\n\t\t\t\t\t\t\tmax=\"2030-12-31\"\n\t\t\t\t\t\t\tclassName=\"event-form__enddate\"\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\tsetSaveButtonEnabled(true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{(touched.regStartDate || touched.regEndDate) &&\n\t\t\t\t\t\t\t(errors.regStartDate || errors.regEndDate) && (\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<div className=\"event-form__field-error-startDate\">\n\t\t\t\t\t\t\t\t\t\t{errors.regStartDate}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"event-form__field-error-endDate\">\n\t\t\t\t\t\t\t\t\t\t{errors.regEndDate}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label htmlFor=\"venue\" className=\"event-form__label\">\n\t\t\t\t\t\t\tVenue\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"venue\"\n\t\t\t\t\t\t\tname=\"venue\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"event-form__field\"\n\t\t\t\t\t\t\tvalidate={validateVenue}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\tsetSaveButtonEnabled(true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.venue && errors.venue && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.venue}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label htmlFor=\"address\" className=\"event-form__label\">\n\t\t\t\t\t\t\tVenue Address\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"address\"\n\t\t\t\t\t\t\tname=\"address\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tplaceholder=\"Crows Landing, CA\"\n\t\t\t\t\t\t\tclassName=\"event-form__field\"\n\t\t\t\t\t\t\tvalidate={validateAddress}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\tsetSaveButtonEnabled(true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.address && errors.address && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.address}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"description\"\n\t\t\t\t\t\t\tclassName=\"event-form__label\">\n\t\t\t\t\t\t\tEvent Description\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"decription\"\n\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\tas=\"textarea\"\n\t\t\t\t\t\t\trows=\"15\"\n\t\t\t\t\t\t\tcols=\"50\"\n\t\t\t\t\t\t\tplaceholder=\"Please enter event description\"\n\t\t\t\t\t\t\tclassName=\"event-form__field-textarea\"\n\t\t\t\t\t\t\tvalidate={validateDescription}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\tsetSaveButtonEnabled(true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.description && errors.description && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.description}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor=\"instruction\"\n\t\t\t\t\t\t\tclassName=\"event-form__label\">\n\t\t\t\t\t\t\tEvent Instruction\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tid=\"instruction\"\n\t\t\t\t\t\t\tname=\"instruction\"\n\t\t\t\t\t\t\tas=\"textarea\"\n\t\t\t\t\t\t\trows=\"15\"\n\t\t\t\t\t\t\tcols=\"50\"\n\t\t\t\t\t\t\tplaceholder=\"Please enter event instruction\"\n\t\t\t\t\t\t\tclassName=\"event-form__field-textarea\"\n\t\t\t\t\t\t\tvalidate={validateInstruction}\n\t\t\t\t\t\t\tonBlur={event => {\n\t\t\t\t\t\t\t\thandleBlur(event);\n\t\t\t\t\t\t\t\tsetOKLeavePage(false);\n\t\t\t\t\t\t\t\tsetSaveButtonEnabled(true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{touched.instruction && errors.instruction && (\n\t\t\t\t\t\t\t<div className=\"event-form__field-error\">\n\t\t\t\t\t\t\t\t{errors.instruction}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\tmargin-left=\"1.5rem\"\n\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\tisSubmitting || !isValid || !saveButtonEnabled\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonClick={e => {\n\t\t\t\t\t\t\t\tsetFieldValue('isSaveButton', false, false);\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\tSAVE\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<NavigationPrompt\n\t\t\t\t\t\t\tafterConfirm={() => {\n\t\t\t\t\t\t\t\tlocalStorage.removeItem('eventID');\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t// Confirm navigation if going to a path that does not start with current path:\n\t\t\t\t\t\t\twhen={(crntLocation, nextLocation) => {\n\t\t\t\t\t\t\t\t// remove ClubRedirectURL from memory\n\t\t\t\t\t\t\t\tclubAuthContext.setClubRedirectURL(null);\n\t\t\t\t\t\t\t\t// OKLeavePage meaning form was not touched yet\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tOKLeavePage ||\n\t\t\t\t\t\t\t\t\tnextLocation.pathname === '/clubs/auth'\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tlocalStorage.removeItem('eventID');\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t!nextLocation ||\n\t\t\t\t\t\t\t\t\t\t!nextLocation.pathname.startsWith(\n\t\t\t\t\t\t\t\t\t\t\tcrntLocation.pathname\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t{({ isActive, onCancel, onConfirm }) => {\n\t\t\t\t\t\t\t\tif (isActive) {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<PromptModal\n\t\t\t\t\t\t\t\t\t\t\tonCancel={onCancel}\n\t\t\t\t\t\t\t\t\t\t\tonConfirm={onConfirm}\n\t\t\t\t\t\t\t\t\t\t\tcontentClass=\"event-item__modal-content\"\n\t\t\t\t\t\t\t\t\t\t\tfooterClass=\"event-item__modal-actions\"\n\t\t\t\t\t\t\t\t\t\t\terror=\"You sure want to leave? Unsaved data will be lost.\">\n\t\t\t\t\t\t\t\t\t\t\t{/* render props.children */}\n\t\t\t\t\t\t\t\t\t\t</PromptModal>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\tThis is probably an anti-pattern but ya know...\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t</NavigationPrompt>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t{!isLoading && loadedEvent && (\n\t\t\t\t<Modal\n\t\t\t\t\tshow={showModal}\n\t\t\t\t\tonCancel={() => closeModalHandler()}\n\t\t\t\t\theader={\n\t\t\t\t\t\tshowCourse\n\t\t\t\t\t\t\t? loadedEvent.name + ' course map'\n\t\t\t\t\t\t\t: loadedEvent.name\n\t\t\t\t\t}\n\t\t\t\t\tcontentClass=\"event-item__modal__content\"\n\t\t\t\t\tfooterClass=\"event-item__modal-actions\"\n\t\t\t\t\theaderClass=\"event-item__modal__header\"\n\t\t\t\t\tfooter={\n\t\t\t\t\t\t<Button onClick={() => closeModalHandler()}>CLOSE</Button>\n\t\t\t\t\t}>\n\t\t\t\t\t{/* render props.children */}\n\t\t\t\t\t{showCourse && (\n\t\t\t\t\t\t<div className=\"map-container\">\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc={\n\t\t\t\t\t\t\t\t\tprocess.env.REACT_APP_ASSET_URL +\n\t\t\t\t\t\t\t\t\t`/${loadedEvent.courseMap}`\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\talt={loadedEvent.alt}\n\t\t\t\t\t\t\t\tclassName=\"map-container\"></img>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{showImage && (\n\t\t\t\t\t\t<div className=\"map-container\">\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc={\n\t\t\t\t\t\t\t\t\tprocess.env.REACT_APP_ASSET_URL +\n\t\t\t\t\t\t\t\t\t`/${loadedEvent.image}`\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\talt={loadedEvent.alt}\n\t\t\t\t\t\t\t\tclassName=\"map-container\"></img>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</Modal>\n\t\t\t)}\n\n\t\t\t{!isLoading && loadedEvent && eventForm()}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default UpdateEvent;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/EventReportSelector.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/UIElements/Image.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/Navigation/MainHeader.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/Navigation/SideDrawer.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/FormElements/Button.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/UIElements/Modal.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/users/components/UserCarsList.js",["703","704"],"import React, { useEffect, useState } from 'react';\n\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport UserCarsItem from './UserCarsItem';\nimport '../../shared/css/EventsList.css';\n\n// treat this as a function looks like\n// EventList(props.items), caller will call as <EventList items=(value to be passed in) \\>\nconst UserCarsList = props => {\n\tif (props.items.length === 0) {\n\t\treturn (\n\t\t\t<div className=\"center\">\n\t\t\t\t<Card>\n\t\t\t\t\t<h2>No car found. Please click to create a new car</h2>\n\t\t\t\t\t<Button to=\"/users/cars/new\">Add a car</Button>\n\t\t\t\t</Card>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tconst carSelectorStatus = status => {\n\t\tprops.carSelectorStatus(status);\n\t};\n\n\tconst carIdHandler = carId => {\n\t\tprops.carIdHandler(carId);\n\t};\n\n\tconst getNewEntry = entry => {\n\t\tprops.getNewEntry(entry);\n\t};\n\n\treturn (\n\t\t<ul className=\"events-list\">\n\t\t\t{props.items.map(car => (\n\t\t\t\t<UserCarsItem\n\t\t\t\t\t// In React, each child in the array should have a unique \"key\" prop\n\t\t\t\t\t// so when render it will only render one element not the whole array\n\t\t\t\t\tkey={car.id}\n\t\t\t\t\tid={car.id}\n\t\t\t\t\tactive={car.active}\n\t\t\t\t\tyear={car.year}\n\t\t\t\t\tmake={car.make}\n\t\t\t\t\tmodel={car.model}\n\t\t\t\t\ttrimLevel={car.trimLevel}\n\t\t\t\t\t// image={process.env.REACT_APP_ASSET_URL + `/${car.image}`}\n\t\t\t\t\timage={car.image}\n\t\t\t\t\ttireBrand={car.tireBrand}\n\t\t\t\t\ttireName={car.tireName}\n\t\t\t\t\ttireFrontWidth={car.tireFrontWidth}\n\t\t\t\t\ttireFrontDiameter={car.tireFrontDiameter}\n\t\t\t\t\ttireFrontRatio={car.tireFrontRatio}\n\t\t\t\t\ttireRearWidth={car.tireRearWidth}\n\t\t\t\t\ttireRearDiameter={car.tireRearDiameter}\n\t\t\t\t\ttireRearRatio={car.tireRearRatio}\n\t\t\t\t\tFrontPressure={car.FrontPressure}\n\t\t\t\t\tRearPressure={car.RearPressure}\n\t\t\t\t\tLFCamber={car.LFCamber}\n\t\t\t\t\tRFCamber={car.RFCamber}\n\t\t\t\t\tLRCamber={car.LRCamber}\n\t\t\t\t\tRRCamber={car.RRCamber}\n\t\t\t\t\tLFCaster={car.LFCaster}\n\t\t\t\t\tRFCaster={car.RFCaster}\n\t\t\t\t\tLFToe={car.LFToe}\n\t\t\t\t\tRFToe={car.RFToe}\n\t\t\t\t\tLRToe={car.LRToe}\n\t\t\t\t\tRRToe={car.RRToe}\n\t\t\t\t\tFBar={car.FBar}\n\t\t\t\t\tRBar={car.RBar}\n\t\t\t\t\tFRebound={car.FRebound}\n\t\t\t\t\tRRebound={car.RRebound}\n\t\t\t\t\tFCompression={car.FCompression}\n\t\t\t\t\tRCompression={car.RCompression}\n\t\t\t\t\tnote={car.note}\n\t\t\t\t\tcarSelector={props.carSelector}\n\t\t\t\t\tcarSelectorStatus={carSelectorStatus}\n\t\t\t\t\tcarIdHandler={carIdHandler}\n\t\t\t\t\tisEntryCar={props.entryCarId === car.id}\n\t\t\t\t\tisNewEntry={props.isNewEntry}\n\t\t\t\t\tentryId={props.entryId}\n\t\t\t\t\tgetNewEntry={getNewEntry}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</ul>\n\t);\n};\n\nexport default UserCarsList;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/form-elements.jsx",["705","706","707"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/EditEventManager.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/events/pages/Events.js",["708","709"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/components/EventTypes.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/components/UpdateFormBuilder.js",["710","711"],"import React, { useContext, useState, useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport NavigationPrompt from 'react-router-navigation-prompt';\nimport PromptModal from '../../shared/components/UIElements/PromptModal';\n\nimport { ClubAuthContext } from '../../shared/context/auth-context';\nimport { FormContext } from '../../shared/context/form-context';\nimport { ReactFormBuilder } from '../../formbuilder/src/index';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { useClubLoginValidation } from '../../shared/hooks/clubLoginValidation-hook';\nimport { EntryFormOptions } from './EntryFormOptions';\n\nimport './FormBuilder.css';\nimport '../../formbuilder/scss/application.scss';\n\nconst FormBuilder = props => {\n\tlet eventId = props.event.id;\n\n\tif (!eventId || eventId === 'error') {\n\t\t// possibly page refresh, look for localStorage\n\t\tconst storageData = JSON.parse(localStorage.getItem('eventData'));\n\t\tif (storageData && storageData.eventId) {\n\t\t\teventId = storageData.eventId;\n\t\t\t// Correct URL on browser, without it URL is showing '/events/form/error'\n\t\t\t// history.pushState(state object, title, url) 'title' is ignored in most browsers\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/API/History/pushState\n\t\t\twindow.history.pushState(\n\t\t\t\tprops.state,\n\t\t\t\t'',\n\t\t\t\t`/events/form/${eventId}`\n\t\t\t);\n\t\t}\n\t} else {\n\t\t// set eventId to localStorage for potential page refresh\n\t\t// we will remove it when the form gets submitted\n\t\t// @todo remove data when user leaves this page\n\t\tlocalStorage.setItem(\n\t\t\t'eventData',\n\t\t\tJSON.stringify({\n\t\t\t\teventId: eventId\n\t\t\t})\n\t\t);\n\t}\n\n\tconst clubAuthContext = useContext(ClubAuthContext);\n\tconst formContext = useContext(FormContext);\n\tuseEffect(() => {\n\t\tlet mounted = true;\n\t\tif (mounted) {\n\t\t\tformContext.setIsInsideForm(true);\n\t\t}\n\t\treturn () => {\n\t\t\tmounted = false;\n\t\t};\n\t}, [formContext]);\n\n\tuseClubLoginValidation(`/events/formbuilder/${eventId}`);\n\t// If we are re-directing to this page, we want to clear up clubRedirectURL\n\tlet location = useLocation();\n\tReact.useEffect(() => {\n\t\tlet path = location.pathname;\n\t\tlet clubRedirectURL = clubAuthContext.clubRedirectURL;\n\t\tif (path === clubRedirectURL) {\n\t\t\t// re-init redirectURL after re-direction route\n\t\t\tclubAuthContext.setClubRedirectURL(null);\n\t\t}\n\t}, [clubAuthContext, location]);\n\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\tconst history = useHistory();\n\tconst [published, setPublished] = useState(true);\n\tconst [unsavedData, setUnsavedData] = useState();\n\tconst [saveTemplateClicked, setSaveTemplateClicked] = useState(\n\t\tfalse\n\t);\n\n\tconst toggleSaveTemplate = event => {\n\t\tsetSaveTemplateClicked(event.target.checked);\n\t\t// after SAVE to backend, user click checkbox \"Save as entry form template\", enable SAVE button\n\t\t// if checkbox value is true\n\t\tif (event.target.checked && !unsavedData) {\n\t\t\tconst storageData = JSON.parse(\n\t\t\t\tlocalStorage.getItem('eventEntryForm')\n\t\t\t);\n\t\t\t// SAVE button enabled when there is an unsavedData\n\t\t\tif (storageData) {\n\t\t\t\tsetUnsavedData(storageData);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst saveHandler = async () => {\n\t\t// use existing localStorage data instead of querying from backend\n\t\tconst storageData = JSON.parse(\n\t\t\tlocalStorage.getItem('eventEntryForm')\n\t\t);\n\t\tif (storageData) {\n\t\t\tsetUnsavedData(storageData);\n\t\t}\n\n\t\ttry {\n\t\t\tconst [\n\t\t\t\tresponseData,\n\t\t\t\tresponseStatus,\n\t\t\t\tresponseMessage\n\t\t\t] = await sendRequest(\n\t\t\t\tprocess.env.REACT_APP_BACKEND_URL + `/events/form/${eventId}`,\n\t\t\t\t'POST',\n\t\t\t\tJSON.stringify({\n\t\t\t\t\tentryFormData: unsavedData,\n\t\t\t\t\tsaveTemplate: saveTemplateClicked\n\t\t\t\t}),\n\t\t\t\t{\n\t\t\t\t\t'Content-type': 'application/json',\n\t\t\t\t\t// adding JWT to header for authentication, JWT contains clubId\n\t\t\t\t\tAuthorization: 'Bearer ' + clubAuthContext.clubToken\n\t\t\t\t}\n\t\t\t);\n\t\t\tif (responseData) {\n\t\t\t\tsetUnsavedData(undefined);\n\t\t\t\t// return new event back to EditEventManager\n\t\t\t\tprops.returnNewEvent(responseData.event);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.log('err = ', err);\n\t\t}\n\t};\n\n\tconst onLoad = getResponseData => {\n\t\tgetResponseData(props.event.entryFormData);\n\t\tsetPublished(props.event.published);\n\t\tsetUnsavedData(props.event.entryFormData);\n\t\t// save the from data got from backend to localstorage\n\t\tlocalStorage.setItem(\n\t\t\t'eventEntryForm',\n\t\t\tJSON.stringify(props.event.entryFormData)\n\t\t);\n\t};\n\n\tfunction fixFormData(data) {\n\t\treturn !data || data === '[]' || data.length === 0 ? [] : data;\n\t}\n\n\tconst onPost = data => {\n\t\t// we want to save the data to localStorage for the best performance\n\t\tdata = fixFormData(data);\n\n\t\tconst setData = () => {\n\t\t\tconsole.log('data = ', data);\n\t\t\t// save the array to unsavedData and backend\n\t\t\t// format of data: {task_data: Array(6)}\n\t\t\tsetUnsavedData(data.task_data);\n\t\t\t// update the new data to localStorage\n\t\t\tlocalStorage.setItem(\n\t\t\t\t'eventEntryForm',\n\t\t\t\tJSON.stringify(data.task_data)\n\t\t\t);\n\t\t};\n\n\t\treturn setData();\n\t};\n\n\tconst cleanUp = () => {\n\t\tclubAuthContext.setClubRedirectURL(null);\n\t\tsetUnsavedData(undefined);\n\t\tlocalStorage.removeItem('eventData');\n\t\tlocalStorage.removeItem('eventEntryForm');\n\t};\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t{isLoading && (\n\t\t\t\t<div className=\"center\">\n\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<div className=\"formbuilder-header\">\n\t\t\t\t<h4>Entry Form Builder</h4>\n\t\t\t\t<Button\n\t\t\t\t\tdisabled={!unsavedData || published}\n\t\t\t\t\tsize=\"entryform--save\"\n\t\t\t\t\tonClick={saveHandler}>\n\t\t\t\t\tSAVE\n\t\t\t\t</Button>\n\t\t\t\t<label className=\"formbuilder-label\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tid=\"saveTemplate\"\n\t\t\t\t\t\tname=\"saveTemplate\"\n\t\t\t\t\t\tonChange={toggleSaveTemplate}\n\t\t\t\t\t/>\n\t\t\t\t\t&nbsp; Save as entry form template\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<div className=\"formbuilder-container\">\n\t\t\t\t<ReactFormBuilder\n\t\t\t\t\tdisabled={published}\n\t\t\t\t\tonLoad={onLoad}\n\t\t\t\t\tonPost={onPost}\n\t\t\t\t\ttoolbarItems={EntryFormOptions()}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<NavigationPrompt\n\t\t\t\tafterConfirm={() => {\n\t\t\t\t\tcleanUp();\n\t\t\t\t\tformContext.setIsInsideForm(false);\n\t\t\t\t}}\n\t\t\t\t// Confirm navigation if going to a path that does not start with current path:\n\t\t\t\t//when={!!unsavedData}\n\t\t\t\twhen={(crntLocation, nextLocation) =>\n\t\t\t\t\t!nextLocation ||\n\t\t\t\t\t!nextLocation.pathname.startsWith(crntLocation.pathname)\n\t\t\t\t}>\n\t\t\t\t{({ isActive, onCancel, onConfirm }) => {\n\t\t\t\t\tif (isActive) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<PromptModal\n\t\t\t\t\t\t\t\tonCancel={onCancel}\n\t\t\t\t\t\t\t\tonConfirm={onConfirm}\n\t\t\t\t\t\t\t\tcontentClass=\"event-item__modal-content\"\n\t\t\t\t\t\t\t\tfooterClass=\"event-item__modal-actions\"\n\t\t\t\t\t\t\t\terror=\"You sure want to leave? Unsaved data will be lost.\">\n\t\t\t\t\t\t\t\t{/* render props.children */}\n\t\t\t\t\t\t\t</PromptModal>\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn history.push('/error');\n\t\t\t\t}}\n\t\t\t</NavigationPrompt>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default FormBuilder;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubs/components/ClubsList.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/entryDashboard/components/CardSetupForm.js",["712","713","714"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/entryDashboard/components/CardSection.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/ClubProfileViewer.js",["715","716","717"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/components/UIElements/ErrorModal.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/EntryReport.js",["718","719","720","721","722","723","724","725","726"],"import React, { useCallback, useEffect, useState } from 'react';\nimport MaterialTable from './MaterialTable';\n\nimport '../../shared/components/FormElements/Button.css';\n\nconst NOT_ATTENDING = 'Not Attending';\n\nconst EntryReport = props => {\n\tconst [days, setDays] = useState(\n\t\tprops.entryReportData.entryData\n\t\t\t? props.entryReportData.entryData.length\n\t\t\t: 0\n\t);\n\tconst [eventEntryList, setEventEntryList] = useState(\n\t\tprops.entryReportData.entryData\n\t\t\t? props.entryReportData.entryData\n\t\t\t: undefined\n\t);\n\tconst [eventWaitlist, setEventWaitlist] = useState(\n\t\tprops.entryReportData.waitlistData\n\t\t\t? props.entryReportData.waitlistData\n\t\t\t: undefined\n\t);\n\n\t// entries are the user entries\n\tconst [eventName, setEventName] = useState(\n\t\tprops.entryReportData.eventName !== ''\n\t\t\t? props.entryReportData.eventName\n\t\t\t: ''\n\t);\n\t// raceClassOptions is [\"SS\", \"AS\", \"BS\", ...]\n\tconst [raceClasses, setRaceClasses] = useState(\n\t\tprops.entryReportData.raceClassOptions\n\t\t\t? props.entryReportData.raceClassOptions\n\t\t\t: undefined\n\t);\n\tconst [runGroups, setRunGroups] = useState(\n\t\tprops.entryReportData.runGroupOptions\n\t\t\t? props.entryReportData.runGroupOptions\n\t\t\t: undefined\n\t);\n\tconst [workerAssignments, setWorkerAssignments] = useState(\n\t\tprops.entryReportData.workerAssignments\n\t\t\t? props.entryReportData.workerAssignments\n\t\t\t: undefined\n\t);\n\n\tconst [showLoading, setShowLoading] = useState(true);\n\n\t// days = how many days for this event\n\n\t// create an array from day 1 to loop through when we are rendering day buttons\n\tconst [dayArray, setDayArray] = useState([]);\n\tuseEffect(() => {\n\t\tlet tmp = [];\n\t\tif (days > 1) {\n\t\t\tfor (var i = 0; i < days; ++i) {\n\t\t\t\ttmp.push(i + 1);\n\t\t\t}\n\t\t}\n\t\tsetDayArray(tmp);\n\t}, [setDayArray, days]);\n\t// check the page has been initialized, if not, we want to hightlight multi-day event day button to day 1\n\n\tconst [init, setInit] = useState(false);\n\tconst [daySelection, setDaySelection] = useState(1);\n\t// entryListArray and waitListArray elements are the data passing to Material-Table\n\tconst [entryListArray, setEntryListArray] = useState([]);\n\tconst [waitlistArray, setWaitlistArray] = useState([]);\n\tconst [raceClassLookup, setRaceClassLookup] = useState();\n\n\tconst [runGroupLookup, setRunGroupLookup] = useState();\n\n\tconst [\n\t\tworkerAssignmentLookup,\n\t\tsetWorkerAssignmentLookup\n\t] = useState();\n\n\t// return index of matched value\n\tconst getMapKey = (val, myMap) => {\n\t\tlet answer;\n\t\tfor (var i = 0; i < myMap.length; ++i) {\n\t\t\tif (myMap[i] === val) {\n\t\t\t\tanswer = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn answer;\n\t};\n\n\t// returns a map\n\tconst convert2Lookup = options => {\n\t\t//lookup format- lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\n\t\tlet lookupMap = {};\n\t\tfor (var i = 0; i < options.length; ++i) {\n\t\t\tlookupMap[i] = options[i];\n\t\t}\n\t\treturn lookupMap;\n\t};\n\n\tuseEffect(() => {\n\t\t//***********  construct lookups ************//\n\t\tlet obj = {};\n\t\tobj = convert2Lookup(raceClasses);\n\t\tsetRaceClassLookup(obj);\n\n\t\t//*************** compose entry list from all the entries ************/\n\t\tlet entryDataArray = [];\n\t\tfor (let i = 0; i < days; ++i) {\n\t\t\tobj = {};\n\t\t\tobj = convert2Lookup(runGroups[i]);\n\t\t\tsetRunGroupLookup(obj);\n\n\t\t\tobj = [];\n\t\t\tobj = convert2Lookup(workerAssignments[i]);\n\t\t\tsetWorkerAssignmentLookup(obj);\n\n\t\t\tlet entryData = [];\n\t\t\tlet entries = eventEntryList[i];\n\t\t\tfor (var j = 0; j < entries.length; ++j) {\n\t\t\t\tif (entries[j].runGroup[i] === NOT_ATTENDING) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tlet entry = {\n\t\t\t\t\tlastName: entries[j].userLastName,\n\t\t\t\t\tfirstName: entries[j].userFirstName,\n\t\t\t\t\t// for lookup field, we need to provide key in lookup array, we use index as key\n\t\t\t\t\traceClass: getMapKey(entries[j].raceClass, raceClasses),\n\t\t\t\t\tcarNumber: entries[j].carNumber,\n\t\t\t\t\tcar: entries[j].car,\n\t\t\t\t\trunGroup: getMapKey(entries[j].runGroup[i], runGroups[i]),\n\t\t\t\t\tworkerAssignment: getMapKey(\n\t\t\t\t\t\tentries[j].workerAssignment[i],\n\t\t\t\t\t\tworkerAssignments[i]\n\t\t\t\t\t)\n\t\t\t\t};\n\t\t\t\tentryData.push(entry);\n\t\t\t}\n\t\t\tentryDataArray.push(entryData);\n\t\t}\n\t\tsetEntryListArray(entryDataArray);\n\n\t\t//************ compose waitlist ***************//\n\t\tlet waitlistDataArray = [];\n\t\tfor (let i = 0; i < days; ++i) {\n\t\t\tlet waitlistData = [];\n\t\t\tlet waitlist = eventWaitlist[i];\n\t\t\tfor (let j = 0; j < waitlist.length; ++j) {\n\t\t\t\tlet entry;\n\t\t\t\tentry = {\n\t\t\t\t\tlastName: waitlist[j].userLastName,\n\t\t\t\t\tfirstName: waitlist[j].userFirstName,\n\t\t\t\t\tcarNumber: waitlist[j].carNumber,\n\t\t\t\t\traceClass: getMapKey(waitlist[j].raceClass, raceClasses),\n\t\t\t\t\tcar: waitlist[j].car,\n\t\t\t\t\trunGroup: getMapKey(waitlist[j].runGroup[i], runGroups[i]),\n\t\t\t\t\tworkerAssignment: getMapKey(\n\t\t\t\t\t\twaitlist[j].workerAssignment[i],\n\t\t\t\t\t\tworkerAssignments[i]\n\t\t\t\t\t)\n\t\t\t\t};\n\t\t\t\twaitlistData.push(entry);\n\t\t\t}\n\t\t\twaitlistDataArray.push(waitlistData);\n\t\t}\n\t\tsetWaitlistArray(waitlistDataArray);\n\n\t\tsetShowLoading(false);\n\t}, []);\n\n\t// callback for Day Buttons\n\tconst daySelectionCallback = index => {\n\t\t// index starts from 1, because we use day 1, day 2, ...\n\t\tsetDaySelection(index);\n\t};\n\n\t// create ref for day 1 button. For multi-day events, we want to set focus on day 1 button initially\n\t// We didn’t choose useRef in this example because an object ref doesn’t notify us about changes to\n\t// the current ref value. Using a callback ref ensures that even if a child component displays the\n\t// button later, we still get notified about it in the parent component and can update the color.\n\tconst day1ButtonRef = useCallback(button => {\n\t\tif (!init && button) {\n\t\t\tbutton.focus();\n\t\t\tsetInit(true);\n\t\t}\n\t});\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t{days > 1 &&\n\t\t\t\tdayArray.map(day => {\n\t\t\t\t\tif (day === 1) {\n\t\t\t\t\t\t// create ref for day 1 button\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tref={day1ButtonRef}\n\t\t\t\t\t\t\t\tkey={'entrylistforUsers' + day}\n\t\t\t\t\t\t\t\tclassName=\"button--small-white\"\n\t\t\t\t\t\t\t\tonClick={e => daySelectionCallback(day)}>\n\t\t\t\t\t\t\t\tDay {day}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tkey={'entrylistforUsers' + day}\n\t\t\t\t\t\t\t\tclassName=\"button--small-white\"\n\t\t\t\t\t\t\t\tonClick={e => daySelectionCallback(day)}>\n\t\t\t\t\t\t\t\tDay {day}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t})}\n\t\t\t{/* render material table according to event day */}\n\t\t\t{daySelection > 0 &&\n\t\t\t\tentryListArray.length > 0 &&\n\t\t\t\twaitlistArray.length > 0 && (\n\t\t\t\t\t<MaterialTable\n\t\t\t\t\t\tentryList={entryListArray[daySelection - 1]}\n\t\t\t\t\t\twaitlist={waitlistArray[daySelection - 1]}\n\t\t\t\t\t\tdisplayName={true}\n\t\t\t\t\t\teventName={\n\t\t\t\t\t\t\tentryListArray.length > 1\n\t\t\t\t\t\t\t\t? eventName + ' Day ' + daySelection\n\t\t\t\t\t\t\t\t: eventName\n\t\t\t\t\t\t}\n\t\t\t\t\t\tshowLoading={showLoading}\n\t\t\t\t\t\traceClassLookup={raceClassLookup}\n\t\t\t\t\t\trunGroupLookup={runGroupLookup}\n\t\t\t\t\t\tworkerAssignmentLookup={workerAssignmentLookup}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default EntryReport;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/ItemTypes.js",["727"],"export default { CARD: 'card' };\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/EntryListForUsers.js",["728","729","730","731","732","733","734","735","736"],"import React, {\n\tuseCallback,\n\tuseContext,\n\tuseState,\n\tuseEffect\n} from 'react';\n\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { UserAuthContext } from '../../shared/context/auth-context';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport MaterialTable from './MaterialTable';\n\nimport './ClubManager.css';\nimport '../../shared/components/FormElements/Button.css';\nimport { set } from 'date-fns';\n\nconst NOT_ATTENDING = 'Not Attending';\n\nconst EntryListForUsers = props => {\n\tlet displayName = props.location.state.displayName;\n\tlet eventName = props.location.state.eventName;\n\tlet eventId = props.location.state.eventId;\n\n\tconst [showLoading, setShowLoading] = useState(true);\n\tconst userAuthContext = useContext(UserAuthContext);\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\t// check the page has been initialized, if not, we want to hightlight multi-day event day button to day 1\n\tconst [init, setInit] = useState(false);\n\n\tconst [days, setDays] = useState(0);\n\tconst [dayArray, setDayArray] = useState([]);\n\tuseEffect(() => {\n\t\tlet tmp = [];\n\t\tif (days > 1) {\n\t\t\tfor (var i = 0; i < days; ++i) {\n\t\t\t\ttmp.push(i + 1);\n\t\t\t}\n\t\t}\n\t\tsetDayArray(tmp);\n\t}, [setDayArray, days]);\n\n\tconst [daySelection, setDaySelection] = useState(1);\n\tconst [entryListArray, setEntryListArray] = useState([]);\n\tconst [waitlistArray, setWaitlistArray] = useState([]);\n\tconst [raceClassLookup, setRaceClassLookup] = useState();\n\tlet raceClasses = [];\n\n\tconst [runGroupLookup, setRunGroupLookup] = useState();\n\tlet runGroups = [];\n\n\tconst [\n\t\tworkerAssignmentLookup,\n\t\tsetWorkerAssignmentLookup\n\t] = useState();\n\tlet workerAssignments = [];\n\n\t// return index of matched value\n\tconst getMapKey = (val, myMap) => {\n\t\tlet answer;\n\t\tfor (var i = 0; i < myMap.length; ++i) {\n\t\t\tif (myMap[i] === val) {\n\t\t\t\tanswer = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn answer;\n\t};\n\n\t// returns a map\n\tconst convert2Lookup = options => {\n\t\t//lookup format- lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\n\t\tlet lookupMap = {};\n\t\tfor (var i = 0; i < options.length; ++i) {\n\t\t\tlookupMap[i] = options[i];\n\t\t}\n\t\treturn lookupMap;\n\t};\n\n\tuseEffect(() => {\n\t\tconst fetchEntries = async () => {\n\t\t\ttry {\n\t\t\t\tconst [\n\t\t\t\t\tresponseData,\n\t\t\t\t\tresponseStatus,\n\t\t\t\t\tresponseMessage\n\t\t\t\t] = await sendRequest(\n\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL +\n\t\t\t\t\t\t`/events/entryreportforusers/${eventId}`,\n\t\t\t\t\t'POST',\n\t\t\t\t\tJSON.stringify({ displayName: displayName }),\n\t\t\t\t\t{\n\t\t\t\t\t\t'Content-type': 'application/json',\n\t\t\t\t\t\tAuthorization: 'Bearer ' + userAuthContext.userToken\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tsetDays(responseData.entryData.length);\n\n\t\t\t\t//***********  construct lookups ************//\n\t\t\t\t// responseData.raceClassOptions is [\"SS\", \"AS\", \"BS\", ...]\n\t\t\t\traceClasses = responseData.raceClassOptions;\n\t\t\t\tlet obj = {};\n\t\t\t\tobj = convert2Lookup(raceClasses);\n\t\t\t\tsetRaceClassLookup(obj);\n\n\t\t\t\t//*************** compose entry list from all the entries ************/\n\t\t\t\trunGroups = responseData.runGroupOptions;\n\t\t\t\tworkerAssignments = responseData.workerAssignments;\n\t\t\t\tlet entryDataArray = [];\n\t\t\t\tlet days = responseData.entryData.length;\n\t\t\t\tfor (let i = 0; i < days; ++i) {\n\t\t\t\t\tobj = {};\n\t\t\t\t\tobj = convert2Lookup(runGroups[i]);\n\t\t\t\t\tsetRunGroupLookup(obj);\n\n\t\t\t\t\tobj = {};\n\t\t\t\t\tobj = convert2Lookup(workerAssignments[i]);\n\t\t\t\t\tsetWorkerAssignmentLookup(obj);\n\n\t\t\t\t\tlet entryData = [];\n\t\t\t\t\tlet entries = responseData.entryData[i];\n\t\t\t\t\tfor (var j = 0; j < entries.length; ++j) {\n\t\t\t\t\t\t// filter out NOT_ATTENDING entries\n\t\t\t\t\t\tif (entries[j].runGroup[i] === NOT_ATTENDING) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet entry;\n\t\t\t\t\t\tif (displayName) {\n\t\t\t\t\t\t\tentry = {\n\t\t\t\t\t\t\t\tlastName: entries[j].userLastName,\n\t\t\t\t\t\t\t\tfirstName: entries[j].userFirstName[0] + '.',\n\t\t\t\t\t\t\t\tcarNumber: entries[j].carNumber,\n\t\t\t\t\t\t\t\t// for lookup field, we need to provide key in lookup array, we use index as key\n\t\t\t\t\t\t\t\traceClass: getMapKey(\n\t\t\t\t\t\t\t\t\tentries[j].raceClass,\n\t\t\t\t\t\t\t\t\traceClasses\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tcar: entries[j].car,\n\t\t\t\t\t\t\t\trunGroup: getMapKey(\n\t\t\t\t\t\t\t\t\tentries[j].runGroup[i],\n\t\t\t\t\t\t\t\t\trunGroups[i]\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tworkerAssignment: getMapKey(\n\t\t\t\t\t\t\t\t\tentries[j].workerAssignment[i],\n\t\t\t\t\t\t\t\t\tworkerAssignments[i]\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tentry = {\n\t\t\t\t\t\t\t\tuserName: entries[j].userName,\n\t\t\t\t\t\t\t\tcarNumber: entries[j].carNumber,\n\t\t\t\t\t\t\t\traceClass: getMapKey(\n\t\t\t\t\t\t\t\t\tentries[j].raceClass,\n\t\t\t\t\t\t\t\t\traceClasses\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tcar: entries[j].car,\n\t\t\t\t\t\t\t\trunGroup: getMapKey(\n\t\t\t\t\t\t\t\t\tentries[j].runGroup[i],\n\t\t\t\t\t\t\t\t\trunGroups[i]\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tworkerAssignment: getMapKey(\n\t\t\t\t\t\t\t\t\tentries[j].workerAssignment[i],\n\t\t\t\t\t\t\t\t\tworkerAssignments[i]\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tentryData.push(entry);\n\t\t\t\t\t}\n\t\t\t\t\tentryDataArray.push(entryData);\n\t\t\t\t}\n\t\t\t\tsetEntryListArray(entryDataArray);\n\n\t\t\t\t//************ compose waitlist ***************//\n\t\t\t\tlet waitlistDataArray = [];\n\t\t\t\tdays = responseData.waitlistData.length;\n\t\t\t\tfor (let i = 0; i < days; ++i) {\n\t\t\t\t\tlet entries = responseData.entryData[i];\n\t\t\t\t\tlet waitlistData = [];\n\t\t\t\t\tlet waitlist = responseData.waitlistData[i];\n\t\t\t\t\tfor (var j = 0; j < waitlist.length; ++j) {\n\t\t\t\t\t\tlet entry;\n\t\t\t\t\t\tif (displayName) {\n\t\t\t\t\t\t\tentry = {\n\t\t\t\t\t\t\t\tlastName: waitlist[j].userLastName,\n\t\t\t\t\t\t\t\tfirstName: waitlist[j].userFirstName[0] + '.',\n\t\t\t\t\t\t\t\tcarNumber: waitlist[j].carNumber,\n\t\t\t\t\t\t\t\traceClass: getMapKey(\n\t\t\t\t\t\t\t\t\twaitlist[j].raceClass,\n\t\t\t\t\t\t\t\t\traceClasses\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tcar: waitlist[j].car,\n\t\t\t\t\t\t\t\trunGroup: getMapKey(\n\t\t\t\t\t\t\t\t\twaitlist[j].runGroup[i],\n\t\t\t\t\t\t\t\t\trunGroups[i]\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tworkerAssignment: getMapKey(\n\t\t\t\t\t\t\t\t\twaitlist[j].workerAssignment[i],\n\t\t\t\t\t\t\t\t\tworkerAssignments[i]\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tentry = {\n\t\t\t\t\t\t\t\tuserName: waitlist[j].userName,\n\t\t\t\t\t\t\t\tcarNumber: waitlist[j].carNumber,\n\t\t\t\t\t\t\t\traceClass: getMapKey(\n\t\t\t\t\t\t\t\t\twaitlist[j].raceClass,\n\t\t\t\t\t\t\t\t\traceClasses\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tcar: waitlist[j].car,\n\t\t\t\t\t\t\t\trunGroup: getMapKey(\n\t\t\t\t\t\t\t\t\twaitlist[j].runGroup[i],\n\t\t\t\t\t\t\t\t\trunGroups[i]\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tworkerAssignment: getMapKey(\n\t\t\t\t\t\t\t\t\twaitlist[j].workerAssignment[i],\n\t\t\t\t\t\t\t\t\tworkerAssignments[i]\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\twaitlistData.push(entry);\n\t\t\t\t\t}\n\t\t\t\t\twaitlistDataArray.push(waitlistData);\n\t\t\t\t}\n\t\t\t\tsetWaitlistArray(waitlistDataArray);\n\t\t\t\tsetShowLoading(false);\n\t\t\t} catch (err) {}\n\t\t};\n\t\tfetchEntries();\n\t}, [sendRequest, setEntryListArray, setWaitlistArray]);\n\n\tconst daySelectionCallback = index => {\n\t\tsetDaySelection(index);\n\t};\n\n\t// create ref for day 1 button. For multi-day events, we want to set focus on day 1 button initially\n\t// We didn’t choose useRef in this example because an object ref doesn’t notify us about changes to\n\t// the current ref value. Using a callback ref ensures that even if a child component displays the\n\t// button later, we still get notified about it in the parent component and can update the color.\n\tconst day1ButtonRef = useCallback(button => {\n\t\tif (!init && button) {\n\t\t\tbutton.focus();\n\t\t\tsetInit(true);\n\t\t}\n\t});\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t{isLoading && (\n\t\t\t\t<div className=\"center\">\n\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{/* Showing day button for multi-day event */}\n\t\t\t{days > 1 &&\n\t\t\t\tdayArray.map(day => {\n\t\t\t\t\tif (day === 1) {\n\t\t\t\t\t\t// create ref for day 1 button\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tref={day1ButtonRef}\n\t\t\t\t\t\t\t\tkey={'entrylistforUsers' + day}\n\t\t\t\t\t\t\t\tclassName=\"button--small-white\"\n\t\t\t\t\t\t\t\tonClick={e => daySelectionCallback(day)}>\n\t\t\t\t\t\t\t\tDay {day}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tkey={'entrylistforUsers' + day}\n\t\t\t\t\t\t\t\tclassName=\"button--small-white\"\n\t\t\t\t\t\t\t\tonClick={e => daySelectionCallback(day)}>\n\t\t\t\t\t\t\t\tDay {day}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t})}\n\t\t\t{/* render material table according to event day */}\n\t\t\t{daySelection &&\n\t\t\t\tentryListArray.length > 0 &&\n\t\t\t\twaitlistArray.length > 0 && (\n\t\t\t\t\t<MaterialTable\n\t\t\t\t\t\tentryList={entryListArray[daySelection - 1]}\n\t\t\t\t\t\twaitlist={waitlistArray[daySelection - 1]}\n\t\t\t\t\t\tdisplayName={displayName}\n\t\t\t\t\t\teventName={\n\t\t\t\t\t\t\tentryListArray.length > 1\n\t\t\t\t\t\t\t\t? eventName + ' Day ' + daySelection\n\t\t\t\t\t\t\t\t: eventName\n\t\t\t\t\t\t}\n\t\t\t\t\t\tshowLoading={showLoading}\n\t\t\t\t\t\traceClassLookup={raceClassLookup}\n\t\t\t\t\t\trunGroupLookup={runGroupLookup}\n\t\t\t\t\t\tworkerAssignmentLookup={workerAssignmentLookup}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default EntryListForUsers;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/ClubStripe.js",["737","738","739","740","741","742","743","744","745"],"import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useClubLoginValidation } from '../../shared/hooks/clubLoginValidation-hook';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\n\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { ClubAuthContext } from '../../shared/context/auth-context';\n\nimport '../../shared/css/EventForm.css';\nimport './ClubManager.css';\n\nconst ClubStripe = props => {\n\tconst history = useHistory();\n\tconst {\n\t\tisLoading,\n\t\terror,\n\t\tsendRequest,\n\t\tclearError\n\t} = useHttpClient();\n\n\tconst clubAuthContext = useContext(ClubAuthContext);\n\tconst clubId = clubAuthContext.clubId;\n\n\t// authentication check check whether club has logged in\n\tuseClubLoginValidation(`/clubs/accountManager/${clubId}`);\n\n\tconst [stripeButtonText, setStripeButtonText] = useState(\n\t\t'Setup Payouts on Stripe'\n\t);\n\tconst [stripeConnectURL, setStripeConnectURL] = useState();\n\n\t// If we are re-directing to this page, we want to clear up clubRedirectURL\n\tlet location = useLocation();\n\tlet path;\n\tuseEffect(() => {\n\t\tpath = location.pathname;\n\t\tlet clubRedirectURL = clubAuthContext.clubRedirectURL;\n\t\tif (path === clubRedirectURL) {\n\t\t\t// re-init redirectURL after re-direction route\n\t\t\tclubAuthContext.setClubRedirectURL(null);\n\t\t}\n\t}, [location]);\n\n\tconst [stripeAccount, setStripeAccount] = useState();\n\t// check if club has stripe account created\n\tuseEffect(() => {\n\t\tconst getStripeAccount = async values => {\n\t\t\ttry {\n\t\t\t\tconst [\n\t\t\t\t\tresponseData,\n\t\t\t\t\tresponseStatus,\n\t\t\t\t\tresponseMessage\n\t\t\t\t] = await sendRequest(\n\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL +\n\t\t\t\t\t\t`/clubs/stripeAccount/${clubId}`,\n\t\t\t\t\t'GET',\n\t\t\t\t\tnull,\n\t\t\t\t\t{\n\t\t\t\t\t\t// adding JWT to header for authentication, JWT contains clubId\n\t\t\t\t\t\tAuthorization: 'Bearer ' + clubAuthContext.clubToken\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tsetStripeAccount(responseData.stripeAccount);\n\t\t\t} catch (err) {}\n\t\t};\n\t\tgetStripeAccount();\n\t}, []);\n\n\t// check if stripe account has completed setup\n\tconst [detailsSubmitted, setDetailsSubmitted] = useState(false);\n\tconst [chargesEnabled, setChargesEnabled] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (stripeAccount) {\n\t\t\tif (stripeAccount.details_submitted) {\n\t\t\t\tsetDetailsSubmitted(true);\n\t\t\t}\n\t\t\tif (stripeAccount.charges_enabled) {\n\t\t\t\tsetChargesEnabled(true);\n\t\t\t}\n\t\t}\n\t}, [stripeAccount, setDetailsSubmitted]);\n\n\tconst connectWithStripeHandler = async () => {\n\t\tlet mounted = true;\n\t\ttry {\n\t\t\t// let mounted = true;\n\t\t\tconst [\n\t\t\t\tresponseData,\n\t\t\t\tresponseStatus,\n\t\t\t\tresponseMessage\n\t\t\t] = await sendRequest(\n\t\t\t\tprocess.env.REACT_APP_BACKEND_URL + `/stripe/connect`,\n\t\t\t\t'GET',\n\t\t\t\tnull,\n\t\t\t\t{\n\t\t\t\t\t// adding JWT to header for authentication, JWT contains clubId\n\t\t\t\t\tAuthorization: 'Bearer ' + clubAuthContext.clubToken\n\t\t\t\t}\n\t\t\t);\n\t\t\t// re-direct to connect to setup account\n\t\t\tif (mounted && responseData.url) {\n\t\t\t\t// setStripeConnectURL(responseData.url);\n\t\t\t\tclubAuthContext.setClubRedirectURL(responseData.url);\n\t\t\t\thistory.push('/stripeConnect');\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.log(' err= ', err);\n\t\t}\n\t\treturn () => {\n\t\t\tmounted = false;\n\t\t};\n\t};\n\n\tuseEffect(() => {\n\t\tif (stripeConnectURL) {\n\t\t\tprops.getStripeConnectURL(stripeConnectURL);\n\t\t}\n\t}, [\n\t\tstripeConnectURL,\n\t\tprops.getStripeConnectURL,\n\t\tclubAuthContext,\n\t\thistory\n\t]);\n\n\tif (isLoading) {\n\t\treturn (\n\t\t\t<div className=\"center\">\n\t\t\t\t<LoadingSpinner />\n\t\t\t</div>\n\t\t);\n\t}\n\n\tconst accountForm = () => (\n\t\t<div className=\"event-form\">\n\t\t\t<div className=\"event-form-header\">\n\t\t\t\t<h4>Setup Stripe Connect Account</h4>\n\t\t\t\t<hr className=\"event-form__hr\" />\n\t\t\t</div>\n\t\t\t<div className=\"stripeconnect-container\">\n\t\t\t\t{stripeAccount && detailsSubmitted && chargesEnabled && (\n\t\t\t\t\t<p className=\"stripeMessage\">\n\t\t\t\t\t\tCongratulations! Your stripe account is now connected with\n\t\t\t\t\t\tMYSeatTime. You are ready to post events now. Entry fee\n\t\t\t\t\t\twill be automatically sent to your Stripe account after\n\t\t\t\t\t\tcustomers been charged.\n\t\t\t\t\t</p>\n\t\t\t\t)}\n\t\t\t\t{stripeAccount && detailsSubmitted && !chargesEnabled && (\n\t\t\t\t\t<p className=\"stripeMessageErr\">\n\t\t\t\t\t\tYour Stripe Connect Account setup has missing required\n\t\t\t\t\t\tinformation! Please{' '}\n\t\t\t\t\t\t{/* with noopener it opens link in a new tab */}\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\thref=\"https://dashboard.stripe.com\"\n\t\t\t\t\t\t\ttarget=\"_blank\">\n\t\t\t\t\t\t\tlogin Stripe\n\t\t\t\t\t\t</a>{' '}\n\t\t\t\t\t\tto complete it. If you do not see any reminder message on\n\t\t\t\t\t\ttop of Stripe Dashoard, please wait for 30 minutes to\n\t\t\t\t\t\tcheck again.\n\t\t\t\t\t</p>\n\t\t\t\t)}\n\t\t\t\t{stripeAccount && !detailsSubmitted && (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<p className=\"stripeMessageErr\">\n\t\t\t\t\t\t\tYour Stripe Connect Account setup has not been completed\n\t\t\t\t\t\t\tyet! Press the button to continue it.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tonClick={connectWithStripeHandler}\n\t\t\t\t\t\t\tclassName=\"stripeconnect\">\n\t\t\t\t\t\t\t{stripeButtonText}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t)}\n\t\t\t\t{!stripeAccount && (\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={connectWithStripeHandler}\n\t\t\t\t\t\tclassName=\"stripeconnect\">\n\t\t\t\t\t\t{stripeButtonText}\n\t\t\t\t\t</Button>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t{!isLoading && accountForm()}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default ClubStripe;\n","/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/components/EventItem.js",["746","747","748"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/event/components/EntryReportEventItem.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/hooks/redirectExternalURL.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/users/pages/UserEvents.js",["749","750"],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/shared/hooks/form-hook.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/formbuilder/src/stores/store.js",[],"/Users/hung-jenhung/Projects/MySeatTime/FrontEnd/src/clubDashboard/components/ClubStripeConnect.js",["751","752","753","754"],{"ruleId":"755","replacedBy":"756"},{"ruleId":"757","replacedBy":"758"},{"ruleId":"759","severity":1,"message":"760","line":31,"column":9,"nodeType":"761","messageId":"762","endLine":31,"endColumn":24},{"ruleId":"759","severity":1,"message":"763","line":31,"column":26,"nodeType":"761","messageId":"762","endLine":31,"endColumn":44},{"ruleId":"759","severity":1,"message":"764","line":96,"column":7,"nodeType":"761","messageId":"762","endLine":96,"endColumn":21},{"ruleId":"759","severity":1,"message":"765","line":97,"column":7,"nodeType":"761","messageId":"762","endLine":97,"endColumn":22},{"ruleId":"766","severity":1,"message":"767","line":106,"column":5,"nodeType":"768","endLine":106,"endColumn":7,"suggestions":"769"},{"ruleId":"755","replacedBy":"770"},{"ruleId":"757","replacedBy":"771"},{"ruleId":"759","severity":1,"message":"772","line":3,"column":31,"nodeType":"761","messageId":"762","endLine":3,"endColumn":43},{"ruleId":"759","severity":1,"message":"773","line":147,"column":3,"nodeType":"761","messageId":"762","endLine":147,"endColumn":25},{"ruleId":"759","severity":1,"message":"774","line":151,"column":8,"nodeType":"761","messageId":"762","endLine":151,"endColumn":29},{"ruleId":"759","severity":1,"message":"775","line":155,"column":8,"nodeType":"761","messageId":"762","endLine":155,"endColumn":15},{"ruleId":"755","replacedBy":"776"},{"ruleId":"757","replacedBy":"777"},{"ruleId":"766","severity":1,"message":"778","line":62,"column":5,"nodeType":"768","endLine":62,"endColumn":22,"suggestions":"779"},{"ruleId":"759","severity":1,"message":"775","line":197,"column":8,"nodeType":"761","messageId":"762","endLine":197,"endColumn":15},{"ruleId":"759","severity":1,"message":"764","line":225,"column":5,"nodeType":"761","messageId":"762","endLine":225,"endColumn":19},{"ruleId":"759","severity":1,"message":"765","line":226,"column":5,"nodeType":"761","messageId":"762","endLine":226,"endColumn":20},{"ruleId":"759","severity":1,"message":"780","line":10,"column":6,"nodeType":"761","messageId":"762","endLine":10,"endColumn":14},{"ruleId":"759","severity":1,"message":"781","line":12,"column":9,"nodeType":"761","messageId":"762","endLine":12,"endColumn":17},{"ruleId":"759","severity":1,"message":"782","line":12,"column":19,"nodeType":"761","messageId":"762","endLine":12,"endColumn":30},{"ruleId":"759","severity":1,"message":"783","line":13,"column":9,"nodeType":"761","messageId":"762","endLine":13,"endColumn":22},{"ruleId":"759","severity":1,"message":"784","line":13,"column":24,"nodeType":"761","messageId":"762","endLine":13,"endColumn":40},{"ruleId":"759","severity":1,"message":"785","line":14,"column":9,"nodeType":"761","messageId":"762","endLine":14,"endColumn":23},{"ruleId":"759","severity":1,"message":"786","line":14,"column":25,"nodeType":"761","messageId":"762","endLine":14,"endColumn":42},{"ruleId":"759","severity":1,"message":"787","line":15,"column":9,"nodeType":"761","messageId":"762","endLine":15,"endColumn":28},{"ruleId":"759","severity":1,"message":"788","line":15,"column":30,"nodeType":"761","messageId":"762","endLine":15,"endColumn":52},{"ruleId":"759","severity":1,"message":"789","line":18,"column":9,"nodeType":"761","messageId":"762","endLine":18,"endColumn":20},{"ruleId":"759","severity":1,"message":"790","line":18,"column":22,"nodeType":"761","messageId":"762","endLine":18,"endColumn":36},{"ruleId":"759","severity":1,"message":"791","line":19,"column":9,"nodeType":"761","messageId":"762","endLine":19,"endColumn":25},{"ruleId":"759","severity":1,"message":"792","line":19,"column":27,"nodeType":"761","messageId":"762","endLine":19,"endColumn":46},{"ruleId":"755","replacedBy":"793"},{"ruleId":"757","replacedBy":"794"},{"ruleId":"755","replacedBy":"795"},{"ruleId":"757","replacedBy":"796"},{"ruleId":"759","severity":1,"message":"797","line":1,"column":17,"nodeType":"761","messageId":"762","endLine":1,"endColumn":27},{"ruleId":"759","severity":1,"message":"798","line":1,"column":29,"nodeType":"761","messageId":"762","endLine":1,"endColumn":38},{"ruleId":"755","replacedBy":"799"},{"ruleId":"757","replacedBy":"800"},{"ruleId":"759","severity":1,"message":"764","line":64,"column":6,"nodeType":"761","messageId":"762","endLine":64,"endColumn":20},{"ruleId":"759","severity":1,"message":"765","line":65,"column":6,"nodeType":"761","messageId":"762","endLine":65,"endColumn":21},{"ruleId":"766","severity":1,"message":"801","line":82,"column":5,"nodeType":"768","endLine":82,"endColumn":52,"suggestions":"802"},{"ruleId":"759","severity":1,"message":"803","line":101,"column":5,"nodeType":"761","messageId":"762","endLine":101,"endColumn":17},{"ruleId":"759","severity":1,"message":"764","line":102,"column":5,"nodeType":"761","messageId":"762","endLine":102,"endColumn":19},{"ruleId":"759","severity":1,"message":"765","line":103,"column":5,"nodeType":"761","messageId":"762","endLine":103,"endColumn":20},{"ruleId":"759","severity":1,"message":"764","line":27,"column":6,"nodeType":"761","messageId":"762","endLine":27,"endColumn":20},{"ruleId":"759","severity":1,"message":"765","line":28,"column":6,"nodeType":"761","messageId":"762","endLine":28,"endColumn":21},{"ruleId":"759","severity":1,"message":"804","line":21,"column":20,"nodeType":"761","messageId":"762","endLine":21,"endColumn":32},{"ruleId":"759","severity":1,"message":"764","line":58,"column":6,"nodeType":"761","messageId":"762","endLine":58,"endColumn":20},{"ruleId":"759","severity":1,"message":"765","line":59,"column":6,"nodeType":"761","messageId":"762","endLine":59,"endColumn":21},{"ruleId":"766","severity":1,"message":"805","line":78,"column":5,"nodeType":"768","endLine":78,"endColumn":7,"suggestions":"806"},{"ruleId":"759","severity":1,"message":"807","line":112,"column":9,"nodeType":"761","messageId":"762","endLine":112,"endColumn":19},{"ruleId":"759","severity":1,"message":"808","line":130,"column":9,"nodeType":"761","messageId":"762","endLine":130,"endColumn":19},{"ruleId":"766","severity":1,"message":"809","line":132,"column":8,"nodeType":"810","endLine":142,"endColumn":3,"suggestions":"811"},{"ruleId":"766","severity":1,"message":"812","line":165,"column":8,"nodeType":"810","endLine":175,"endColumn":3,"suggestions":"813"},{"ruleId":"766","severity":1,"message":"814","line":165,"column":8,"nodeType":"810","endLine":175,"endColumn":3,"suggestions":"815"},{"ruleId":"759","severity":1,"message":"816","line":177,"column":8,"nodeType":"761","messageId":"762","endLine":177,"endColumn":21},{"ruleId":"759","severity":1,"message":"817","line":206,"column":8,"nodeType":"761","messageId":"762","endLine":206,"endColumn":19},{"ruleId":"759","severity":1,"message":"818","line":217,"column":8,"nodeType":"761","messageId":"762","endLine":217,"endColumn":21},{"ruleId":"759","severity":1,"message":"803","line":360,"column":5,"nodeType":"761","messageId":"762","endLine":360,"endColumn":17},{"ruleId":"759","severity":1,"message":"764","line":361,"column":5,"nodeType":"761","messageId":"762","endLine":361,"endColumn":19},{"ruleId":"759","severity":1,"message":"765","line":362,"column":5,"nodeType":"761","messageId":"762","endLine":362,"endColumn":20},{"ruleId":"755","replacedBy":"819"},{"ruleId":"757","replacedBy":"820"},{"ruleId":"759","severity":1,"message":"821","line":2,"column":10,"nodeType":"761","messageId":"762","endLine":2,"endColumn":14},{"ruleId":"759","severity":1,"message":"822","line":20,"column":6,"nodeType":"761","messageId":"762","endLine":20,"endColumn":13},{"ruleId":"759","severity":1,"message":"823","line":21,"column":6,"nodeType":"761","messageId":"762","endLine":21,"endColumn":13},{"ruleId":"759","severity":1,"message":"824","line":22,"column":6,"nodeType":"761","messageId":"762","endLine":22,"endColumn":15},{"ruleId":"759","severity":1,"message":"825","line":23,"column":6,"nodeType":"761","messageId":"762","endLine":23,"endColumn":11},{"ruleId":"759","severity":1,"message":"826","line":24,"column":6,"nodeType":"761","messageId":"762","endLine":24,"endColumn":15},{"ruleId":"759","severity":1,"message":"827","line":25,"column":6,"nodeType":"761","messageId":"762","endLine":25,"endColumn":15},{"ruleId":"759","severity":1,"message":"807","line":26,"column":6,"nodeType":"761","messageId":"762","endLine":26,"endColumn":16},{"ruleId":"759","severity":1,"message":"828","line":30,"column":9,"nodeType":"761","messageId":"762","endLine":30,"endColumn":19},{"ruleId":"759","severity":1,"message":"829","line":30,"column":21,"nodeType":"761","messageId":"762","endLine":30,"endColumn":34},{"ruleId":"759","severity":1,"message":"830","line":34,"column":3,"nodeType":"761","messageId":"762","endLine":34,"endColumn":14},{"ruleId":"759","severity":1,"message":"831","line":41,"column":9,"nodeType":"761","messageId":"762","endLine":41,"endColumn":22},{"ruleId":"759","severity":1,"message":"832","line":41,"column":24,"nodeType":"761","messageId":"762","endLine":41,"endColumn":40},{"ruleId":"759","severity":1,"message":"833","line":44,"column":25,"nodeType":"761","messageId":"762","endLine":44,"endColumn":42},{"ruleId":"759","severity":1,"message":"834","line":74,"column":9,"nodeType":"761","messageId":"762","endLine":74,"endColumn":19},{"ruleId":"759","severity":1,"message":"835","line":83,"column":22,"nodeType":"761","messageId":"762","endLine":83,"endColumn":36},{"ruleId":"759","severity":1,"message":"836","line":118,"column":29,"nodeType":"761","messageId":"762","endLine":118,"endColumn":50},{"ruleId":"759","severity":1,"message":"834","line":130,"column":7,"nodeType":"761","messageId":"762","endLine":130,"endColumn":17},{"ruleId":"759","severity":1,"message":"837","line":19,"column":6,"nodeType":"761","messageId":"762","endLine":19,"endColumn":9},{"ruleId":"759","severity":1,"message":"838","line":24,"column":8,"nodeType":"761","messageId":"762","endLine":24,"endColumn":20},{"ruleId":"755","replacedBy":"839"},{"ruleId":"757","replacedBy":"840"},{"ruleId":"759","severity":1,"message":"841","line":121,"column":28,"nodeType":"761","messageId":"762","endLine":121,"endColumn":48},{"ruleId":"759","severity":1,"message":"842","line":135,"column":28,"nodeType":"761","messageId":"762","endLine":135,"endColumn":48},{"ruleId":"759","severity":1,"message":"843","line":27,"column":2,"nodeType":"761","messageId":"762","endLine":27,"endColumn":26},{"ruleId":"844","severity":1,"message":"845","line":293,"column":6,"nodeType":"846","messageId":"847","endLine":293,"endColumn":46},{"ruleId":"848","severity":1,"message":"849","line":354,"column":23,"nodeType":"850","messageId":"851","endLine":354,"endColumn":25},{"ruleId":"755","replacedBy":"852"},{"ruleId":"757","replacedBy":"853"},{"ruleId":"755","replacedBy":"854"},{"ruleId":"757","replacedBy":"855"},{"ruleId":"856","severity":1,"message":"857","line":84,"column":1,"nodeType":"858","endLine":132,"endColumn":2},{"ruleId":"759","severity":1,"message":"859","line":9,"column":8,"nodeType":"761","messageId":"762","endLine":9,"endColumn":21},{"ruleId":"759","severity":1,"message":"860","line":34,"column":8,"nodeType":"761","messageId":"762","endLine":34,"endColumn":33},{"ruleId":"759","severity":1,"message":"861","line":41,"column":9,"nodeType":"761","messageId":"762","endLine":41,"endColumn":28},{"ruleId":"766","severity":1,"message":"862","line":58,"column":10,"nodeType":"863","endLine":58,"endColumn":27},{"ruleId":"759","severity":1,"message":"864","line":75,"column":3,"nodeType":"761","messageId":"762","endLine":75,"endColumn":26},{"ruleId":"759","severity":1,"message":"865","line":86,"column":3,"nodeType":"761","messageId":"762","endLine":86,"endColumn":26},{"ruleId":"759","severity":1,"message":"764","line":102,"column":6,"nodeType":"761","messageId":"762","endLine":102,"endColumn":20},{"ruleId":"759","severity":1,"message":"765","line":103,"column":6,"nodeType":"761","messageId":"762","endLine":103,"endColumn":21},{"ruleId":"766","severity":1,"message":"801","line":120,"column":5,"nodeType":"768","endLine":120,"endColumn":35,"suggestions":"866"},{"ruleId":"759","severity":1,"message":"764","line":127,"column":5,"nodeType":"761","messageId":"762","endLine":127,"endColumn":19},{"ruleId":"759","severity":1,"message":"765","line":128,"column":5,"nodeType":"761","messageId":"762","endLine":128,"endColumn":20},{"ruleId":"759","severity":1,"message":"867","line":46,"column":3,"nodeType":"761","messageId":"762","endLine":46,"endColumn":13},{"ruleId":"759","severity":1,"message":"868","line":49,"column":24,"nodeType":"761","messageId":"762","endLine":49,"endColumn":40},{"ruleId":"759","severity":1,"message":"869","line":67,"column":9,"nodeType":"761","messageId":"762","endLine":67,"endColumn":19},{"ruleId":"759","severity":1,"message":"870","line":68,"column":9,"nodeType":"761","messageId":"762","endLine":68,"endColumn":16},{"ruleId":"759","severity":1,"message":"871","line":69,"column":9,"nodeType":"761","messageId":"762","endLine":69,"endColumn":12},{"ruleId":"759","severity":1,"message":"872","line":86,"column":24,"nodeType":"761","messageId":"762","endLine":86,"endColumn":40},{"ruleId":"759","severity":1,"message":"861","line":87,"column":9,"nodeType":"761","messageId":"762","endLine":87,"endColumn":28},{"ruleId":"759","severity":1,"message":"764","line":152,"column":5,"nodeType":"761","messageId":"762","endLine":152,"endColumn":19},{"ruleId":"759","severity":1,"message":"765","line":153,"column":5,"nodeType":"761","messageId":"762","endLine":153,"endColumn":20},{"ruleId":"759","severity":1,"message":"834","line":198,"column":9,"nodeType":"761","messageId":"762","endLine":198,"endColumn":19},{"ruleId":"759","severity":1,"message":"835","line":207,"column":22,"nodeType":"761","messageId":"762","endLine":207,"endColumn":36},{"ruleId":"759","severity":1,"message":"873","line":283,"column":9,"nodeType":"761","messageId":"762","endLine":283,"endColumn":27},{"ruleId":"759","severity":1,"message":"874","line":293,"column":9,"nodeType":"761","messageId":"762","endLine":293,"endColumn":24},{"ruleId":"759","severity":1,"message":"875","line":303,"column":9,"nodeType":"761","messageId":"762","endLine":303,"endColumn":20},{"ruleId":"759","severity":1,"message":"869","line":315,"column":7,"nodeType":"761","messageId":"762","endLine":315,"endColumn":17},{"ruleId":"759","severity":1,"message":"870","line":317,"column":7,"nodeType":"761","messageId":"762","endLine":317,"endColumn":14},{"ruleId":"759","severity":1,"message":"871","line":319,"column":7,"nodeType":"761","messageId":"762","endLine":319,"endColumn":10},{"ruleId":"759","severity":1,"message":"765","line":327,"column":6,"nodeType":"761","messageId":"762","endLine":327,"endColumn":21},{"ruleId":"759","severity":1,"message":"803","line":440,"column":5,"nodeType":"761","messageId":"762","endLine":440,"endColumn":17},{"ruleId":"759","severity":1,"message":"765","line":442,"column":5,"nodeType":"761","messageId":"762","endLine":442,"endColumn":20},{"ruleId":"759","severity":1,"message":"876","line":490,"column":9,"nodeType":"761","messageId":"762","endLine":490,"endColumn":26},{"ruleId":"759","severity":1,"message":"877","line":16,"column":3,"nodeType":"761","messageId":"762","endLine":16,"endColumn":12},{"ruleId":"759","severity":1,"message":"878","line":17,"column":3,"nodeType":"761","messageId":"762","endLine":17,"endColumn":8},{"ruleId":"759","severity":1,"message":"867","line":19,"column":3,"nodeType":"761","messageId":"762","endLine":19,"endColumn":13},{"ruleId":"759","severity":1,"message":"879","line":42,"column":9,"nodeType":"761","messageId":"762","endLine":42,"endColumn":17},{"ruleId":"759","severity":1,"message":"764","line":48,"column":5,"nodeType":"761","messageId":"762","endLine":48,"endColumn":19},{"ruleId":"759","severity":1,"message":"765","line":49,"column":5,"nodeType":"761","messageId":"762","endLine":49,"endColumn":20},{"ruleId":"880","severity":1,"message":"881","line":90,"column":8,"nodeType":"882","endLine":90,"endColumn":12},{"ruleId":"880","severity":1,"message":"881","line":117,"column":8,"nodeType":"882","endLine":117,"endColumn":12},{"ruleId":"880","severity":1,"message":"881","line":141,"column":8,"nodeType":"882","endLine":141,"endColumn":12},{"ruleId":"880","severity":1,"message":"881","line":166,"column":8,"nodeType":"882","endLine":166,"endColumn":12},{"ruleId":"759","severity":1,"message":"883","line":6,"column":10,"nodeType":"761","messageId":"762","endLine":6,"endColumn":19},{"ruleId":"759","severity":1,"message":"824","line":21,"column":9,"nodeType":"761","messageId":"762","endLine":21,"endColumn":18},{"ruleId":"759","severity":1,"message":"764","line":92,"column":7,"nodeType":"761","messageId":"762","endLine":92,"endColumn":21},{"ruleId":"759","severity":1,"message":"765","line":93,"column":7,"nodeType":"761","messageId":"762","endLine":93,"endColumn":22},{"ruleId":"759","severity":1,"message":"764","line":114,"column":7,"nodeType":"761","messageId":"762","endLine":114,"endColumn":21},{"ruleId":"759","severity":1,"message":"765","line":115,"column":7,"nodeType":"761","messageId":"762","endLine":115,"endColumn":22},{"ruleId":"759","severity":1,"message":"884","line":137,"column":4,"nodeType":"761","messageId":"762","endLine":137,"endColumn":11},{"ruleId":"766","severity":1,"message":"778","line":156,"column":5,"nodeType":"768","endLine":156,"endColumn":44,"suggestions":"885"},{"ruleId":"766","severity":1,"message":"778","line":167,"column":5,"nodeType":"768","endLine":167,"endColumn":54,"suggestions":"886"},{"ruleId":"759","severity":1,"message":"887","line":101,"column":9,"nodeType":"761","messageId":"762","endLine":101,"endColumn":17},{"ruleId":"759","severity":1,"message":"888","line":102,"column":9,"nodeType":"761","messageId":"762","endLine":102,"endColumn":18},{"ruleId":"759","severity":1,"message":"889","line":103,"column":9,"nodeType":"761","messageId":"762","endLine":103,"endColumn":24},{"ruleId":"759","severity":1,"message":"773","line":171,"column":3,"nodeType":"761","messageId":"762","endLine":171,"endColumn":25},{"ruleId":"759","severity":1,"message":"774","line":175,"column":8,"nodeType":"761","messageId":"762","endLine":175,"endColumn":29},{"ruleId":"759","severity":1,"message":"764","line":183,"column":5,"nodeType":"761","messageId":"762","endLine":183,"endColumn":19},{"ruleId":"759","severity":1,"message":"765","line":184,"column":5,"nodeType":"761","messageId":"762","endLine":184,"endColumn":20},{"ruleId":"759","severity":1,"message":"764","line":242,"column":5,"nodeType":"761","messageId":"762","endLine":242,"endColumn":19},{"ruleId":"759","severity":1,"message":"765","line":243,"column":5,"nodeType":"761","messageId":"762","endLine":243,"endColumn":20},{"ruleId":"759","severity":1,"message":"803","line":264,"column":5,"nodeType":"761","messageId":"762","endLine":264,"endColumn":17},{"ruleId":"759","severity":1,"message":"764","line":265,"column":5,"nodeType":"761","messageId":"762","endLine":265,"endColumn":19},{"ruleId":"759","severity":1,"message":"765","line":266,"column":5,"nodeType":"761","messageId":"762","endLine":266,"endColumn":20},{"ruleId":"759","severity":1,"message":"764","line":289,"column":5,"nodeType":"761","messageId":"762","endLine":289,"endColumn":19},{"ruleId":"759","severity":1,"message":"765","line":290,"column":5,"nodeType":"761","messageId":"762","endLine":290,"endColumn":20},{"ruleId":"759","severity":1,"message":"764","line":311,"column":5,"nodeType":"761","messageId":"762","endLine":311,"endColumn":19},{"ruleId":"759","severity":1,"message":"765","line":312,"column":5,"nodeType":"761","messageId":"762","endLine":312,"endColumn":20},{"ruleId":"890","severity":1,"message":"891","line":449,"column":10,"nodeType":"892","endLine":449,"endColumn":25},{"ruleId":"759","severity":1,"message":"841","line":61,"column":28,"nodeType":"761","messageId":"762","endLine":61,"endColumn":48},{"ruleId":"759","severity":1,"message":"842","line":75,"column":28,"nodeType":"761","messageId":"762","endLine":75,"endColumn":48},{"ruleId":"759","severity":1,"message":"764","line":103,"column":5,"nodeType":"761","messageId":"762","endLine":103,"endColumn":19},{"ruleId":"759","severity":1,"message":"765","line":104,"column":5,"nodeType":"761","messageId":"762","endLine":104,"endColumn":20},{"ruleId":"759","severity":1,"message":"893","line":7,"column":20,"nodeType":"761","messageId":"762","endLine":7,"endColumn":32},{"ruleId":"894","severity":1,"message":"895","line":245,"column":4,"nodeType":"863","endLine":245,"endColumn":22},{"ruleId":"759","severity":1,"message":"896","line":248,"column":9,"nodeType":"761","messageId":"762","endLine":248,"endColumn":21},{"ruleId":"759","severity":1,"message":"897","line":252,"column":9,"nodeType":"761","messageId":"762","endLine":252,"endColumn":28},{"ruleId":"759","severity":1,"message":"898","line":10,"column":10,"nodeType":"761","messageId":"762","endLine":10,"endColumn":26},{"ruleId":"759","severity":1,"message":"899","line":11,"column":10,"nodeType":"761","messageId":"762","endLine":11,"endColumn":17},{"ruleId":"759","severity":1,"message":"900","line":14,"column":10,"nodeType":"761","messageId":"762","endLine":14,"endColumn":13},{"ruleId":"759","severity":1,"message":"901","line":332,"column":9,"nodeType":"761","messageId":"762","endLine":332,"endColumn":32},{"ruleId":"759","severity":1,"message":"902","line":337,"column":9,"nodeType":"761","messageId":"762","endLine":337,"endColumn":36},{"ruleId":"759","severity":1,"message":"903","line":344,"column":4,"nodeType":"761","messageId":"762","endLine":344,"endColumn":26},{"ruleId":"759","severity":1,"message":"904","line":345,"column":4,"nodeType":"761","messageId":"762","endLine":345,"endColumn":24},{"ruleId":"848","severity":1,"message":"849","line":396,"column":39,"nodeType":"850","messageId":"851","endLine":396,"endColumn":41},{"ruleId":"759","severity":1,"message":"905","line":119,"column":7,"nodeType":"761","messageId":"762","endLine":119,"endColumn":20},{"ruleId":"894","severity":1,"message":"895","line":151,"column":4,"nodeType":"863","endLine":151,"endColumn":22},{"ruleId":"759","severity":1,"message":"906","line":2,"column":10,"nodeType":"761","messageId":"762","endLine":2,"endColumn":20},{"ruleId":"759","severity":1,"message":"907","line":27,"column":9,"nodeType":"761","messageId":"762","endLine":27,"endColumn":19},{"ruleId":"759","severity":1,"message":"908","line":27,"column":21,"nodeType":"761","messageId":"762","endLine":27,"endColumn":34},{"ruleId":"759","severity":1,"message":"764","line":121,"column":5,"nodeType":"761","messageId":"762","endLine":121,"endColumn":19},{"ruleId":"759","severity":1,"message":"765","line":122,"column":5,"nodeType":"761","messageId":"762","endLine":122,"endColumn":20},{"ruleId":"759","severity":1,"message":"764","line":157,"column":6,"nodeType":"761","messageId":"762","endLine":157,"endColumn":20},{"ruleId":"759","severity":1,"message":"765","line":158,"column":6,"nodeType":"761","messageId":"762","endLine":158,"endColumn":21},{"ruleId":"909","severity":1,"message":"910","line":83,"column":8,"nodeType":"882","endLine":83,"endColumn":20},{"ruleId":"909","severity":1,"message":"910","line":84,"column":8,"nodeType":"882","endLine":84,"endColumn":20},{"ruleId":"909","severity":1,"message":"910","line":85,"column":8,"nodeType":"882","endLine":85,"endColumn":20},{"ruleId":"909","severity":1,"message":"910","line":86,"column":8,"nodeType":"882","endLine":86,"endColumn":20},{"ruleId":"759","severity":1,"message":"911","line":6,"column":10,"nodeType":"761","messageId":"762","endLine":6,"endColumn":22},{"ruleId":"759","severity":1,"message":"764","line":39,"column":6,"nodeType":"761","messageId":"762","endLine":39,"endColumn":20},{"ruleId":"759","severity":1,"message":"765","line":40,"column":6,"nodeType":"761","messageId":"762","endLine":40,"endColumn":21},{"ruleId":"759","severity":1,"message":"764","line":110,"column":6,"nodeType":"761","messageId":"762","endLine":110,"endColumn":20},{"ruleId":"759","severity":1,"message":"765","line":111,"column":6,"nodeType":"761","messageId":"762","endLine":111,"endColumn":21},{"ruleId":"766","severity":1,"message":"912","line":163,"column":5,"nodeType":"768","endLine":163,"endColumn":38,"suggestions":"913"},{"ruleId":"759","severity":1,"message":"914","line":4,"column":8,"nodeType":"761","messageId":"762","endLine":4,"endColumn":14},{"ruleId":"759","severity":1,"message":"915","line":22,"column":9,"nodeType":"761","messageId":"762","endLine":22,"endColumn":20},{"ruleId":"759","severity":1,"message":"916","line":22,"column":22,"nodeType":"761","messageId":"762","endLine":22,"endColumn":36},{"ruleId":"759","severity":1,"message":"917","line":71,"column":8,"nodeType":"761","messageId":"762","endLine":71,"endColumn":27},{"ruleId":"759","severity":1,"message":"775","line":82,"column":8,"nodeType":"761","messageId":"762","endLine":82,"endColumn":15},{"ruleId":"759","severity":1,"message":"764","line":91,"column":5,"nodeType":"761","messageId":"762","endLine":91,"endColumn":19},{"ruleId":"759","severity":1,"message":"765","line":92,"column":5,"nodeType":"761","messageId":"762","endLine":92,"endColumn":20},{"ruleId":"894","severity":1,"message":"895","line":55,"column":7,"nodeType":"863","endLine":55,"endColumn":17},{"ruleId":"894","severity":1,"message":"895","line":57,"column":7,"nodeType":"863","endLine":57,"endColumn":29},{"ruleId":"894","severity":1,"message":"895","line":58,"column":7,"nodeType":"863","endLine":58,"endColumn":29},{"ruleId":"890","severity":1,"message":"891","line":246,"column":171,"nodeType":"892","endLine":248,"endColumn":13},{"ruleId":"759","severity":1,"message":"780","line":14,"column":9,"nodeType":"761","messageId":"762","endLine":14,"endColumn":17},{"ruleId":"759","severity":1,"message":"918","line":17,"column":9,"nodeType":"761","messageId":"762","endLine":17,"endColumn":19},{"ruleId":"759","severity":1,"message":"764","line":40,"column":6,"nodeType":"761","messageId":"762","endLine":40,"endColumn":20},{"ruleId":"759","severity":1,"message":"765","line":41,"column":6,"nodeType":"761","messageId":"762","endLine":41,"endColumn":21},{"ruleId":"766","severity":1,"message":"919","line":44,"column":8,"nodeType":"810","endLine":54,"endColumn":3},{"ruleId":"766","severity":1,"message":"920","line":55,"column":8,"nodeType":"810","endLine":65,"endColumn":3,"suggestions":"921"},{"ruleId":"766","severity":1,"message":"922","line":55,"column":8,"nodeType":"810","endLine":65,"endColumn":3,"suggestions":"923"},{"ruleId":"766","severity":1,"message":"924","line":66,"column":8,"nodeType":"810","endLine":68,"endColumn":3},{"ruleId":"759","severity":1,"message":"925","line":7,"column":8,"nodeType":"761","messageId":"762","endLine":7,"endColumn":27},{"ruleId":"759","severity":1,"message":"926","line":11,"column":8,"nodeType":"761","messageId":"762","endLine":11,"endColumn":23},{"ruleId":"759","severity":1,"message":"927","line":14,"column":10,"nodeType":"761","messageId":"762","endLine":14,"endColumn":18},{"ruleId":"766","severity":1,"message":"928","line":46,"column":5,"nodeType":"768","endLine":46,"endColumn":23,"suggestions":"929"},{"ruleId":"759","severity":1,"message":"859","line":9,"column":8,"nodeType":"761","messageId":"762","endLine":9,"endColumn":21},{"ruleId":"759","severity":1,"message":"930","line":15,"column":10,"nodeType":"761","messageId":"762","endLine":15,"endColumn":21},{"ruleId":"766","severity":1,"message":"862","line":56,"column":10,"nodeType":"863","endLine":56,"endColumn":27},{"ruleId":"759","severity":1,"message":"931","line":73,"column":8,"nodeType":"761","messageId":"762","endLine":73,"endColumn":21},{"ruleId":"759","severity":1,"message":"764","line":104,"column":6,"nodeType":"761","messageId":"762","endLine":104,"endColumn":20},{"ruleId":"759","severity":1,"message":"765","line":105,"column":6,"nodeType":"761","messageId":"762","endLine":105,"endColumn":21},{"ruleId":"766","severity":1,"message":"801","line":122,"column":5,"nodeType":"768","endLine":122,"endColumn":38,"suggestions":"932"},{"ruleId":"759","severity":1,"message":"933","line":124,"column":9,"nodeType":"761","messageId":"762","endLine":124,"endColumn":21},{"ruleId":"759","severity":1,"message":"764","line":130,"column":5,"nodeType":"761","messageId":"762","endLine":130,"endColumn":19},{"ruleId":"759","severity":1,"message":"765","line":131,"column":5,"nodeType":"761","messageId":"762","endLine":131,"endColumn":20},{"ruleId":"766","severity":1,"message":"934","line":77,"column":8,"nodeType":"810","endLine":87,"endColumn":3},{"ruleId":"766","severity":1,"message":"935","line":88,"column":8,"nodeType":"810","endLine":98,"endColumn":3},{"ruleId":"766","severity":1,"message":"936","line":99,"column":8,"nodeType":"810","endLine":109,"endColumn":3,"suggestions":"937"},{"ruleId":"766","severity":1,"message":"938","line":99,"column":8,"nodeType":"810","endLine":109,"endColumn":3,"suggestions":"939"},{"ruleId":"759","severity":1,"message":"883","line":9,"column":10,"nodeType":"761","messageId":"762","endLine":9,"endColumn":19},{"ruleId":"759","severity":1,"message":"764","line":78,"column":7,"nodeType":"761","messageId":"762","endLine":78,"endColumn":21},{"ruleId":"759","severity":1,"message":"765","line":79,"column":7,"nodeType":"761","messageId":"762","endLine":79,"endColumn":22},{"ruleId":"766","severity":1,"message":"940","line":110,"column":5,"nodeType":"768","endLine":110,"endColumn":58,"suggestions":"941"},{"ruleId":"759","severity":1,"message":"906","line":3,"column":10,"nodeType":"761","messageId":"762","endLine":3,"endColumn":20},{"ruleId":"766","severity":1,"message":"862","line":34,"column":10,"nodeType":"863","endLine":34,"endColumn":27},{"ruleId":"759","severity":1,"message":"764","line":112,"column":6,"nodeType":"761","messageId":"762","endLine":112,"endColumn":20},{"ruleId":"759","severity":1,"message":"765","line":113,"column":6,"nodeType":"761","messageId":"762","endLine":113,"endColumn":21},{"ruleId":"766","severity":1,"message":"801","line":130,"column":5,"nodeType":"768","endLine":130,"endColumn":35,"suggestions":"942"},{"ruleId":"759","severity":1,"message":"764","line":144,"column":5,"nodeType":"761","messageId":"762","endLine":144,"endColumn":19},{"ruleId":"759","severity":1,"message":"765","line":145,"column":5,"nodeType":"761","messageId":"762","endLine":145,"endColumn":20},{"ruleId":"890","severity":1,"message":"891","line":349,"column":8,"nodeType":"892","endLine":349,"endColumn":36},{"ruleId":"890","severity":1,"message":"891","line":373,"column":8,"nodeType":"892","endLine":373,"endColumn":25},{"ruleId":"759","severity":1,"message":"883","line":2,"column":10,"nodeType":"761","messageId":"762","endLine":2,"endColumn":19},{"ruleId":"759","severity":1,"message":"764","line":82,"column":7,"nodeType":"761","messageId":"762","endLine":82,"endColumn":21},{"ruleId":"759","severity":1,"message":"765","line":83,"column":7,"nodeType":"761","messageId":"762","endLine":83,"endColumn":22},{"ruleId":"766","severity":1,"message":"943","line":95,"column":5,"nodeType":"768","endLine":95,"endColumn":46,"suggestions":"944"},{"ruleId":"759","severity":1,"message":"798","line":1,"column":29,"nodeType":"761","messageId":"762","endLine":1,"endColumn":38},{"ruleId":"766","severity":1,"message":"945","line":40,"column":10,"nodeType":"863","endLine":40,"endColumn":27},{"ruleId":"759","severity":1,"message":"946","line":60,"column":8,"nodeType":"761","messageId":"762","endLine":60,"endColumn":25},{"ruleId":"759","severity":1,"message":"947","line":67,"column":8,"nodeType":"761","messageId":"762","endLine":67,"endColumn":24},{"ruleId":"759","severity":1,"message":"764","line":215,"column":5,"nodeType":"761","messageId":"762","endLine":215,"endColumn":19},{"ruleId":"759","severity":1,"message":"765","line":216,"column":5,"nodeType":"761","messageId":"762","endLine":216,"endColumn":20},{"ruleId":"759","severity":1,"message":"948","line":268,"column":8,"nodeType":"761","messageId":"762","endLine":268,"endColumn":19},{"ruleId":"759","severity":1,"message":"798","line":1,"column":17,"nodeType":"761","messageId":"762","endLine":1,"endColumn":26},{"ruleId":"759","severity":1,"message":"949","line":1,"column":28,"nodeType":"761","messageId":"762","endLine":1,"endColumn":36},{"ruleId":"759","severity":1,"message":"950","line":1138,"column":4,"nodeType":"761","messageId":"762","endLine":1138,"endColumn":14},{"ruleId":"848","severity":1,"message":"849","line":1225,"column":34,"nodeType":"850","messageId":"851","endLine":1225,"endColumn":36},{"ruleId":"759","severity":1,"message":"951","line":1415,"column":20,"nodeType":"761","messageId":"762","endLine":1415,"endColumn":29},{"ruleId":"759","severity":1,"message":"764","line":92,"column":9,"nodeType":"761","messageId":"762","endLine":92,"endColumn":23},{"ruleId":"759","severity":1,"message":"765","line":93,"column":9,"nodeType":"761","messageId":"762","endLine":93,"endColumn":24},{"ruleId":"759","severity":1,"message":"764","line":113,"column":5,"nodeType":"761","messageId":"762","endLine":113,"endColumn":19},{"ruleId":"759","severity":1,"message":"765","line":114,"column":5,"nodeType":"761","messageId":"762","endLine":114,"endColumn":20},{"ruleId":"759","severity":1,"message":"764","line":48,"column":6,"nodeType":"761","messageId":"762","endLine":48,"endColumn":20},{"ruleId":"759","severity":1,"message":"765","line":49,"column":6,"nodeType":"761","messageId":"762","endLine":49,"endColumn":21},{"ruleId":"766","severity":1,"message":"778","line":81,"column":5,"nodeType":"768","endLine":81,"endColumn":50,"suggestions":"952"},{"ruleId":"759","severity":1,"message":"764","line":32,"column":6,"nodeType":"761","messageId":"762","endLine":32,"endColumn":20},{"ruleId":"759","severity":1,"message":"765","line":33,"column":6,"nodeType":"761","messageId":"762","endLine":33,"endColumn":21},{"ruleId":"766","severity":1,"message":"801","line":51,"column":5,"nodeType":"768","endLine":57,"endColumn":3,"suggestions":"953"},{"ruleId":"759","severity":1,"message":"954","line":9,"column":15,"nodeType":"761","messageId":"762","endLine":9,"endColumn":22},{"ruleId":"759","severity":1,"message":"955","line":14,"column":25,"nodeType":"761","messageId":"762","endLine":14,"endColumn":42},{"ruleId":"759","severity":1,"message":"956","line":19,"column":24,"nodeType":"761","messageId":"762","endLine":19,"endColumn":40},{"ruleId":"759","severity":1,"message":"893","line":26,"column":20,"nodeType":"761","messageId":"762","endLine":26,"endColumn":32},{"ruleId":"759","severity":1,"message":"957","line":32,"column":22,"nodeType":"761","messageId":"762","endLine":32,"endColumn":36},{"ruleId":"759","severity":1,"message":"958","line":37,"column":20,"nodeType":"761","messageId":"762","endLine":37,"endColumn":32},{"ruleId":"759","severity":1,"message":"959","line":42,"column":28,"nodeType":"761","messageId":"762","endLine":42,"endColumn":48},{"ruleId":"766","severity":1,"message":"960","line":169,"column":5,"nodeType":"768","endLine":169,"endColumn":7,"suggestions":"961"},{"ruleId":"766","severity":1,"message":"962","line":181,"column":24,"nodeType":"761","endLine":181,"endColumn":35},{"ruleId":"856","severity":1,"message":"963","line":1,"column":1,"nodeType":"858","endLine":1,"endColumn":33},{"ruleId":"759","severity":1,"message":"964","line":16,"column":10,"nodeType":"761","messageId":"762","endLine":16,"endColumn":13},{"ruleId":"759","severity":1,"message":"764","line":90,"column":6,"nodeType":"761","messageId":"762","endLine":90,"endColumn":20},{"ruleId":"759","severity":1,"message":"765","line":91,"column":6,"nodeType":"761","messageId":"762","endLine":91,"endColumn":21},{"ruleId":"766","severity":1,"message":"965","line":107,"column":19,"nodeType":"863","endLine":107,"endColumn":48},{"ruleId":"766","severity":1,"message":"966","line":113,"column":17,"nodeType":"863","endLine":113,"endColumn":45},{"ruleId":"766","severity":1,"message":"967","line":114,"column":25,"nodeType":"863","endLine":114,"endColumn":55},{"ruleId":"759","severity":1,"message":"968","line":183,"column":10,"nodeType":"761","messageId":"762","endLine":183,"endColumn":17},{"ruleId":"969","severity":1,"message":"970","line":186,"column":15,"nodeType":"761","messageId":"971","endLine":186,"endColumn":16},{"ruleId":"766","severity":1,"message":"962","line":245,"column":24,"nodeType":"761","endLine":245,"endColumn":35},{"ruleId":"759","severity":1,"message":"972","line":29,"column":27,"nodeType":"761","messageId":"762","endLine":29,"endColumn":46},{"ruleId":"759","severity":1,"message":"973","line":32,"column":27,"nodeType":"761","messageId":"762","endLine":32,"endColumn":46},{"ruleId":"766","severity":1,"message":"862","line":38,"column":10,"nodeType":"863","endLine":38,"endColumn":27},{"ruleId":"759","severity":1,"message":"764","line":53,"column":6,"nodeType":"761","messageId":"762","endLine":53,"endColumn":20},{"ruleId":"759","severity":1,"message":"765","line":54,"column":6,"nodeType":"761","messageId":"762","endLine":54,"endColumn":21},{"ruleId":"766","severity":1,"message":"974","line":69,"column":5,"nodeType":"768","endLine":69,"endColumn":7,"suggestions":"975"},{"ruleId":"759","severity":1,"message":"764","line":92,"column":5,"nodeType":"761","messageId":"762","endLine":92,"endColumn":19},{"ruleId":"759","severity":1,"message":"765","line":93,"column":5,"nodeType":"761","messageId":"762","endLine":93,"endColumn":20},{"ruleId":"766","severity":1,"message":"778","line":121,"column":5,"nodeType":"768","endLine":126,"endColumn":3,"suggestions":"976"},{"ruleId":"759","severity":1,"message":"977","line":22,"column":29,"nodeType":"761","messageId":"762","endLine":22,"endColumn":50},{"ruleId":"759","severity":1,"message":"978","line":215,"column":9,"nodeType":"761","messageId":"762","endLine":215,"endColumn":28},{"ruleId":"766","severity":1,"message":"979","line":269,"column":5,"nodeType":"768","endLine":274,"endColumn":3,"suggestions":"980"},{"ruleId":"759","severity":1,"message":"764","line":51,"column":6,"nodeType":"761","messageId":"762","endLine":51,"endColumn":20},{"ruleId":"759","severity":1,"message":"765","line":52,"column":6,"nodeType":"761","messageId":"762","endLine":52,"endColumn":21},{"ruleId":"766","severity":1,"message":"862","line":32,"column":10,"nodeType":"863","endLine":32,"endColumn":27},{"ruleId":"759","severity":1,"message":"764","line":48,"column":6,"nodeType":"761","messageId":"762","endLine":48,"endColumn":20},{"ruleId":"759","severity":1,"message":"765","line":49,"column":6,"nodeType":"761","messageId":"762","endLine":49,"endColumn":21},{"ruleId":"766","severity":1,"message":"981","line":77,"column":5,"nodeType":"768","endLine":77,"endColumn":59,"suggestions":"982"},"no-native-reassign",["983"],"no-negated-in-lhs",["984"],"no-unused-vars","'loadedEventName' is assigned a value but never used.","Identifier","unusedVar","'setLoadedEventName' is assigned a value but never used.","'responseStatus' is assigned a value but never used.","'responseMessage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'clubAuthContext.clubId', 'clubAuthContext.clubToken', 'clubId', 'eId', 'entryReportManager', and 'sendRequest'. Either include them or remove the dependency array.","ArrayExpression",["985"],["983"],["984"],"'ErrorMessage' is defined but never used.","'capDistributionClicked' is assigned a value but never used.","'togglecapDistribution' is assigned a value but never used.","'history' is assigned a value but never used.",["983"],["984"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["986"],"'clubName' is assigned a value but never used.","'clubInfo' is assigned a value but never used.","'setClubInfo' is assigned a value but never used.","'clubInfoClass' is assigned a value but never used.","'setClubInfoClass' is assigned a value but never used.","'accountManager' is assigned a value but never used.","'setaccountManager' is assigned a value but never used.","'accountManagerClass' is assigned a value but never used.","'setaccountManagerClass' is assigned a value but never used.","'teamManager' is assigned a value but never used.","'setteamManager' is assigned a value but never used.","'teamManagerClass' is assigned a value but never used.","'setteamManagerClass' is assigned a value but never used.",["983"],["984"],["983"],["984"],"'useContext' is defined but never used.","'useEffect' is defined but never used.",["983"],["984"],"React Hook useEffect has missing dependencies: 'clubAuthContext.clubToken' and 'sendRequest'. Either include them or remove the dependency array.",["987"],"'responseData' is assigned a value but never used.","'setRegClosed' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'eventId', 'sendRequest', and 'userAuthContext.userToken'. Either include them or remove the dependency array.",["988"],"'formAnswer' is assigned a value but never used.","'percentage' is assigned a value but never used.","The 'carSelectorClickHandler' function makes the dependencies of useEffect Hook (at line 194) change on every render. To fix this, wrap the definition of 'carSelectorClickHandler' in its own useCallback() Hook.","VariableDeclarator",["989"],"The 'submitClickHandler' function makes the dependencies of useEffect Hook (at line 194) change on every render. To fix this, wrap the definition of 'submitClickHandler' in its own useCallback() Hook.",["990"],"The 'submitClickHandler' function makes the dependencies of useEffect Hook (at line 215) change on every render. To fix this, wrap the definition of 'submitClickHandler' in its own useCallback() Hook.",["991"],"'finishHandler' is assigned a value but never used.","'formHandler' is assigned a value but never used.","'getFormAnswer' is assigned a value but never used.",["983"],["984"],"'Link' is defined but never used.","'entryId' is assigned a value but never used.","'eventId' is assigned a value but never used.","'eventName' is assigned a value but never used.","'carId' is assigned a value but never used.","'carNumber' is assigned a value but never used.","'raceClass' is assigned a value but never used.","'totalPrice' is assigned a value but never used.","'setTotalPrice' is assigned a value but never used.","'sendRequest' is assigned a value but never used.","'statusMessage' is assigned a value but never used.","'setStatusMessage' is assigned a value but never used.","'setContinueStatus' is assigned a value but never used.","'disclaimer' is assigned a value but never used.","'setOKLeavePage' is assigned a value but never used.","'setValidateDisclaimer' is assigned a value but never used.","'cid' is assigned a value but never used.","'isInsideForm' is assigned a value but never used.",["983"],["984"],"'setValidateCarNumber' is assigned a value but never used.","'setValidateRaceClass' is assigned a value but never used.","'MultipleRadioButtonGroup' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["983"],["984"],["983"],["984"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'ImageUploader' is defined but never used.","'toggleShowPublicKeyButton' is assigned a value but never used.","'showPublicKeyButton' is assigned a value but never used.","Assignments to the 'path' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","'validateStripePublicKey' is assigned a value but never used.","'validateStripeSecretKey' is assigned a value but never used.",["992"],"'clearError' is assigned a value but never used.","'setStripePromise' is assigned a value but never used.","'creditCard' is assigned a value but never used.","'expDate' is assigned a value but never used.","'cvc' is assigned a value but never used.","'setShowPublicKey' is assigned a value but never used.","'validateCreditCard' is assigned a value but never used.","'validateExpDate' is assigned a value but never used.","'validateCVC' is assigned a value but never used.","'submitButtonClass' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'error' is assigned a value but never used.","'newEntry' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'useParams' is defined but never used.","'mounted' is assigned a value but never used.",["993"],["994"],"'totalCap' is assigned a value but never used.","'numGroups' is assigned a value but never used.","'capDistribution' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'setEventName' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","'this_checked' is assigned a value but never used.","'this_checked_inline' is assigned a value but never used.","'couldStartTrivia' is defined but never used.","'connect' is defined but never used.","'get' is defined but never used.","'this_checked_page_break' is assigned a value but never used.","'this_checked_alternate_form' is assigned a value but never used.","'canHavePageBreakBefore' is assigned a value but never used.","'canHaveAlternateForm' is assigned a value but never used.","'optionsLength' is assigned a value but never used.","'useHistory' is defined but never used.","'contButton' is assigned a value but never used.","'setContButton' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'TramOutlined' is defined but never used.","React Hook useEffect has a missing dependency: 'userAuthContext.userToken'. Either include it or remove the dependency array.",["995"],"'moment' is defined but never used.","'initialized' is assigned a value but never used.","'setInitialized' is assigned a value but never used.","'updateEventFormData' is assigned a value but never used.","'imageValid' is assigned a value but never used.","The 'formBuilderClickHandler' function makes the dependencies of useEffect Hook (at line 104) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'formBuilderClickHandler' in its own useCallback() Hook.","The 'registrationClickHandler' function makes the dependencies of useEffect Hook (at line 117) change on every render. To fix this, wrap the definition of 'registrationClickHandler' in its own useCallback() Hook.",["996"],"The 'registrationClickHandler' function makes the dependencies of useEffect Hook (at line 130) change on every render. To fix this, wrap the definition of 'registrationClickHandler' in its own useCallback() Hook.",["997"],"The 'saveClickHandler' function makes the dependencies of useEffect Hook (at line 142) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'saveClickHandler' in its own useCallback() Hook.","'RedirectExternalURL' is defined but never used.","'ClubAuthConetxt' is defined but never used.","'Redirect' is defined but never used.","React Hook useEffect has missing dependencies: 'clubAuthContext' and 'history'. Either include them or remove the dependency array.",["998"],"'FormContext' is defined but never used.","'validateEmail' is assigned a value but never used.",["999"],"'verification' is assigned a value but never used.","The 'classificationClickHandler' function makes the dependencies of useEffect Hook (at line 136) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'classificationClickHandler' in its own useCallback() Hook.","The 'formClickHandler' function makes the dependencies of useEffect Hook (at line 151) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'formClickHandler' in its own useCallback() Hook.","The 'submitClickHandler' function makes the dependencies of useEffect Hook (at line 176) change on every render. To fix this, wrap the definition of 'submitClickHandler' in its own useCallback() Hook.",["1000"],"The 'submitClickHandler' function makes the dependencies of useEffect Hook (at line 193) change on every render. To fix this, wrap the definition of 'submitClickHandler' in its own useCallback() Hook.",["1001"],"React Hook useEffect has a missing dependency: 'carSelector'. Either include it or remove the dependency array.",["1002"],["1003"],"React Hook useEffect has missing dependencies: 'clubAuthContext.clubToken' and 'ownerClubEvent'. Either include them or remove the dependency array.",["1004"],"Assignments to the 'path' variable from inside React Hook React.useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useEffect.","'openCourseHandler' is assigned a value but never used.","'openImageHandler' is assigned a value but never used.","'backHandler' is assigned a value but never used.","'useState' is defined but never used.","'classNames' is assigned a value but never used.","'optionKey' is assigned a value but never used.",["1005"],["1006"],"'setDays' is assigned a value but never used.","'setEventEntryList' is assigned a value but never used.","'setEventWaitlist' is assigned a value but never used.","'setRaceClasses' is assigned a value but never used.","'setRunGroups' is assigned a value but never used.","'setWorkerAssignments' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'days', 'eventEntryList', 'eventWaitlist', 'raceClasses', 'runGroups', and 'workerAssignments'. Either include them or remove the dependency array.",["1007"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","Assign object to a variable before exporting as module default","'set' is defined but never used.","Assignments to the 'raceClasses' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'runGroups' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'workerAssignments' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'entries' is assigned a value but never used.","no-redeclare","'j' is already defined.","redeclared","'setStripeButtonText' is assigned a value but never used.","'setStripeConnectURL' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'clubAuthContext.clubToken', 'clubId', and 'sendRequest'. Either include them or remove the dependency array.",["1008"],["1009"],"'setRegistrationClosed' is assigned a value but never used.","'userOnGroupWaitlist' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'waitlistMSG'. Either include it or remove the dependency array.",["1010"],"React Hook useEffect has a missing dependency: 'clubAuthContext.clubToken'. Either include it or remove the dependency array.",["1011"],"no-global-assign","no-unsafe-negation",{"desc":"1012","fix":"1013"},{"desc":"1014","fix":"1015"},{"desc":"1016","fix":"1017"},{"desc":"1018","fix":"1019"},{"desc":"1020","fix":"1021"},{"desc":"1022","fix":"1023"},{"desc":"1022","fix":"1024"},{"desc":"1025","fix":"1026"},{"desc":"1027","fix":"1028"},{"desc":"1029","fix":"1030"},{"desc":"1031","fix":"1032"},{"desc":"1033","fix":"1034"},{"desc":"1033","fix":"1035"},{"desc":"1036","fix":"1037"},{"desc":"1038","fix":"1039"},{"desc":"1022","fix":"1040"},{"desc":"1022","fix":"1041"},{"desc":"1042","fix":"1043"},{"desc":"1044","fix":"1045"},{"desc":"1046","fix":"1047"},{"desc":"1048","fix":"1049"},{"desc":"1050","fix":"1051"},{"desc":"1052","fix":"1053"},{"desc":"1054","fix":"1055"},{"desc":"1056","fix":"1057"},{"desc":"1058","fix":"1059"},{"desc":"1060","fix":"1061"},"Update the dependencies array to be: [clubAuthContext.clubId, clubAuthContext.clubToken, clubId, eId, entryReportManager, sendRequest]",{"range":"1062","text":"1063"},"Update the dependencies array to be: [isMultiDayEvent, props]",{"range":"1064","text":"1065"},"Update the dependencies array to be: [clubAuthContext.clubToken, clubId, sendRequest, setLoadedImage, setLoadedProfileImage]",{"range":"1066","text":"1067"},"Update the dependencies array to be: [eventId, sendRequest, userAuthContext.userToken]",{"range":"1068","text":"1069"},"Wrap the definition of 'carSelectorClickHandler' in its own useCallback() Hook.",{"range":"1070","text":"1071"},"Wrap the definition of 'submitClickHandler' in its own useCallback() Hook.",{"range":"1072","text":"1073"},{"range":"1074","text":"1073"},"Update the dependencies array to be: [clubAuthContext.clubToken, clubId, sendRequest, setLoadedClubAccount]",{"range":"1075","text":"1076"},"Update the dependencies array to be: [submittedEntry, editingMode, newEntry, props]",{"range":"1077","text":"1078"},"Update the dependencies array to be: [formAnswer, props.returnFormAnswer, editingMode, props]",{"range":"1079","text":"1080"},"Update the dependencies array to be: [sendRequest, carId, initialized, userAuthContext.userToken]",{"range":"1081","text":"1082"},"Wrap the definition of 'registrationClickHandler' in its own useCallback() Hook.",{"range":"1083","text":"1084"},{"range":"1085","text":"1084"},"Update the dependencies array to be: [clubAuthContext, history, stripeConnectURL]",{"range":"1086","text":"1087"},"Update the dependencies array to be: [clubAuthContext.clubToken, clubId, sendRequest, setLoadedClubCredential]",{"range":"1088","text":"1089"},{"range":"1090","text":"1091"},{"range":"1092","text":"1091"},"Update the dependencies array to be: [sendRequest, userId, userAuthContext, setLoadedCars, carSelector]",{"range":"1093","text":"1094"},"Update the dependencies array to be: [clubAuthContext.clubToken, clubId, sendRequest, setLoadedClubProfile]",{"range":"1095","text":"1096"},"Update the dependencies array to be: [sendRequest, clubId, entryReportManager, ownerClubEvent, clubAuthContext.clubToken]",{"range":"1097","text":"1098"},"Update the dependencies array to be: [props, props.getStripeSetupIntentId, setupIntentId]",{"range":"1099","text":"1100"},"Update the dependencies array to be: [clubId, setLoadedProfileImage, setLoadedDescription, setLoadedSchedule, setLoadedImage, sendRequest, clubAuthContext.clubToken]",{"range":"1101","text":"1102"},"Update the dependencies array to be: [days, eventEntryList, eventWaitlist, raceClasses, runGroups, workerAssignments]",{"range":"1103","text":"1104"},"Update the dependencies array to be: [clubAuthContext.clubToken, clubId, sendRequest]",{"range":"1105","text":"1106"},"Update the dependencies array to be: [stripeConnectURL, props.getStripeConnectURL, clubAuthContext, history, props]",{"range":"1107","text":"1108"},"Update the dependencies array to be: [userAuthContext.userId, eventId, setUserRegisteredEvent, setButtonName, waitlistMSG]",{"range":"1109","text":"1110"},"Update the dependencies array to be: [setStripeReceived, setStripeConnectStat, sendRequest, clubAuthContext.clubToken]",{"range":"1111","text":"1112"},[3803,3805],"[clubAuthContext.clubId, clubAuthContext.clubToken, clubId, eId, entryReportManager, sendRequest]",[2308,2325],"[isMultiDayEvent, props]",[2662,2709],"[clubAuthContext.clubToken, clubId, sendRequest, setLoadedImage, setLoadedProfileImage]",[2631,2633],"[eventId, sendRequest, userAuthContext.userToken]",[4297,4606],"useCallback(() => {\n\t\tsetCarSelector(true);\n\t\tsetCarSelectorClass('editeventmanager-orange');\n\t\tsetClassification(false);\n\t\tsetClassificationClass('editeventmanager-grey');\n\t\tsetFform(false);\n\t\tsetFformClass('editeventmanager-grey');\n\t\tsetSubmit(false);\n\t\tsetSubmitClass('editeventmanager-grey');\n\t\tsetPercentage('0');\n\t})",[5322,5632],"useCallback(() => {\n\t\tsetCarSelector(false);\n\t\tsetCarSelectorClass('editeventmanager-grey');\n\t\tsetClassification(false);\n\t\tsetClassificationClass('editeventmanager-grey');\n\t\tsetFform(false);\n\t\tsetFformClass('editeventmanager-grey');\n\t\tsetSubmit(true);\n\t\tsetSubmitClass('editeventmanager-orange');\n\t\tsetPercentage('75');\n\t})",[5322,5632],[3445,3475],"[clubAuthContext.clubToken, clubId, sendRequest, setLoadedClubAccount]",[4659,4698],"[submittedEntry, editingMode, newEntry, props]",[4897,4946],"[formAnswer, props.returnFormAnswer, editingMode, props]",[5719,5752],"[sendRequest, carId, initialized, userAuthContext.userToken]",[1827,2085],"useCallback(() => {\n\t\tsetEventInfo(false);\n\t\tsetEventInfoClass('li-tab');\n\t\tsetPhoto(false);\n\t\tsetPhotoClass('li-tab');\n\t\tsetFormBuilder(false);\n\t\tsetFormBuilderClass('li-tab');\n\t\tsetRegistration(true);\n\t\tsetRegistrationClass('li-tab_orange');\n\t\tsetPercentage('100');\n\t})",[1827,2085],[1587,1605],"[clubAuthContext, history, stripeConnectURL]",[3689,3722],"[clubAuthContext.clubToken, clubId, sendRequest, setLoadedClubCredential]",[3227,3483],"useCallback(() => {\n\t\tsetCarSelector(false);\n\t\tsetCarSelectorClass('li-tab');\n\t\tsetClassification(false);\n\t\tsetClassificationClass('li-tab');\n\t\tsetFform(false);\n\t\tsetFformClass('li-tab');\n\t\tsetSubmit(true);\n\t\tsetSubmitClass('li-tab_orange');\n\t\tsetPercentage('100');\n\t})",[3227,3483],[3693,3746],"[sendRequest, userId, userAuthContext, setLoadedCars, carSelector]",[3617,3647],"[clubAuthContext.clubToken, clubId, sendRequest, setLoadedClubProfile]",[2747,2788],"[sendRequest, clubId, entryReportManager, ownerClubEvent, clubAuthContext.clubToken]",[2306,2351],"[props, props.getStripeSetupIntentId, setupIntentId]",[1617,1718],"[clubId, setLoadedProfileImage, setLoadedDescription, setLoadedSchedule, setLoadedImage, sendRequest, clubAuthContext.clubToken]",[4830,4832],"[days, eventEntryList, eventWaitlist, raceClasses, runGroups, workerAssignments]",[2144,2146],"[clubAuthContext.clubToken, clubId, sendRequest]",[3421,3503],"[stripeConnectURL, props.getStripeConnectURL, clubAuthContext, history, props]",[7937,8020],"[userAuthContext.userId, eventId, setUserRegisteredEvent, setButtonName, waitlistMSG]",[2338,2392],"[setStripeReceived, setStripeConnectStat, sendRequest, clubAuthContext.clubToken]"]